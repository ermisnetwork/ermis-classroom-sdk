{"version":3,"file":"ermis-classroom.esm.js","sources":["../src/events/EventEmitter.js","../src/api/ApiClient.js","../src/core/Participant.js","../src/media/Publisher.js","../src/media/Subscriber.js","../src/media/AudioMixer.js","../src/core/Room.js","../src/core/SubRoom.js","../src/core/ErmisClient.js","../src/index.js","../src/raptorQ/raptorq_wasm.js"],"sourcesContent":["/**\n * Base EventEmitter class for handling events across the SDK\n */\nclass EventEmitter {\n  constructor() {\n    this._events = new Map();\n  }\n\n  on(event, listener) {\n    if (!this._events.has(event)) {\n      this._events.set(event, []);\n    }\n    this._events.get(event).push(listener);\n    return this;\n  }\n\n  off(event, listener) {\n    if (!this._events.has(event)) return this;\n\n    const listeners = this._events.get(event);\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length === 0) {\n      this._events.delete(event);\n    }\n    return this;\n  }\n\n  emit(event, ...args) {\n    if (!this._events.has(event)) return false;\n\n    const listeners = this._events.get(event);\n    listeners.forEach((listener) => {\n      try {\n        listener(...args);\n      } catch (error) {\n        console.error(`Error in event listener for ${event}:`, error);\n      }\n    });\n    return true;\n  }\n\n  once(event, listener) {\n    const onceWrapper = (...args) => {\n      this.off(event, onceWrapper);\n      listener(...args);\n    };\n    return this.on(event, onceWrapper);\n  }\n\n  removeAllListeners(event) {\n    if (event) {\n      this._events.delete(event);\n    } else {\n      this._events.clear();\n    }\n    return this;\n  }\n\n  listenerCount(event) {\n    return this._events.has(event) ? this._events.get(event).length : 0;\n  }\n}\n\nexport default EventEmitter;\n","/**\n * API Client for handling HTTP requests to Ermis Meeting API\n */\nclass ApiClient {\n  constructor(config) {\n    this.host = config.host || \"daibo.ermis.network:9992\";\n    this.apiBaseUrl = config.apiUrl || `https://${this.host}/meeting`;\n    this.jwtToken = null;\n    this.userId = null;\n  }\n\n  /**\n   * Set authentication token and user ID\n   */\n  setAuth(token, userId) {\n    this.jwtToken = token;\n    this.userId = userId;\n  }\n\n  /**\n   * Generic API call method\n   */\n  async apiCall(endpoint, method = \"GET\", body = null) {\n    if (!this.userId) {\n      throw new Error(\"Please authenticate first\");\n    }\n\n    if (!this.jwtToken) {\n      throw new Error(\"JWT token not found\");\n    }\n\n    const options = {\n      method,\n      headers: {\n        Authorization: `Bearer ${this.jwtToken}`,\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n\n    try {\n      const response = await fetch(`${this.apiBaseUrl}${endpoint}`, options);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(\"API call failed:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get dummy token for authentication\n   */\n  async getDummyToken(userId) {\n    const endpoint = \"/get-token\";\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ sub: userId }),\n    };\n\n    try {\n      const response = await fetch(`${this.apiBaseUrl}${endpoint}`, options);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(\"Token request failed:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Create a new room\n   */\n  async createRoom(roomName, roomType = \"main\") {\n    return await this.apiCall(\"/rooms\", \"POST\", {\n      room_name: roomName,\n      room_type: roomType,\n    });\n  }\n\n  /**\n   * List available rooms\n   */\n  async listRooms(page = 1, perPage = 20) {\n    return await this.apiCall(\"/rooms/list\", \"POST\", {\n      list_query: {\n        page,\n        per_page: perPage,\n        sort_by: \"created_at\",\n        sort_order: \"desc\",\n      },\n      conditions: {\n        is_active: true,\n      },\n    });\n  }\n\n  /**\n   * Get room details by ID\n   */\n  async getRoomById(roomId) {\n    return await this.apiCall(`/rooms/${roomId}`);\n  }\n\n  /**\n   * Join a room by room code\n   */\n  async joinRoom(roomCode, appName = \"Ermis-Meeting\") {\n    return await this.apiCall(\"/rooms/join\", \"POST\", {\n      room_code: roomCode,\n      app_name: appName,\n    });\n  }\n\n  /**\n   * Create a sub room\n   */\n  async createSubRoom(parentRoomId, subRoomName, subRoomType = \"breakout\") {\n    return await this.apiCall(\"/rooms\", \"POST\", {\n      room_name: subRoomName,\n      room_type: subRoomType,\n      parent_room_id: parentRoomId,\n    });\n  }\n\n  /**\n   * Get sub rooms of a parent room\n   */\n  async getSubRooms(parentRoomId) {\n    return await this.apiCall(`/rooms/${parentRoomId}/sub-rooms`);\n  }\n\n  /**\n   * Leave a room\n   */\n  async leaveRoom(roomId, membershipId) {\n    return await this.apiCall(\n      `/rooms/${roomId}/members/${membershipId}`,\n      \"DELETE\"\n    );\n  }\n\n  /**\n   * Switch to sub room\n   */\n  async switchToSubRoom(roomId, subRoomCode) {\n    return await this.apiCall(\"/rooms/switch\", \"POST\", {\n      room_id: roomId,\n      sub_room_code: subRoomCode,\n    });\n  }\n\n  /**\n   * Get room members\n   */\n  async getRoomMembers(roomId) {\n    return await this.apiCall(`/rooms/${roomId}/members`);\n  }\n\n  /**\n   * Update room settings\n   */\n  async updateRoom(roomId, updates) {\n    return await this.apiCall(`/rooms/${roomId}`, \"PATCH\", updates);\n  }\n\n  /**\n   * Delete/Close room\n   */\n  async deleteRoom(roomId) {\n    return await this.apiCall(`/rooms/${roomId}`, \"DELETE\");\n  }\n}\n\nexport default ApiClient;\n","import EventEmitter from \"../events/EventEmitter.js\";\n\n/**\n * Represents a participant in a meeting room\n */\nclass Participant extends EventEmitter {\n  constructor(config) {\n    super();\n\n    this.userId = config.userId;\n    this.streamId = config.streamId;\n    this.membershipId = config.membershipId;\n    this.role = config.role || \"participant\";\n    this.roomId = config.roomId;\n    this.isLocal = config.isLocal || false;\n\n    // Media state\n    this.isAudioEnabled = true;\n    this.isVideoEnabled = true;\n    this.isPinned = false;\n\n    // Media components\n    this.publisher = null;\n    this.subscriber = null;\n\n    // Screen share state\n    this.isScreenSharing = config.isScreenSharing || false;\n    this.screenSubscriber = null;\n\n    // Status\n    this.connectionStatus = \"disconnected\"; // 'connecting', 'connected', 'disconnected', 'failed'\n  }\n\n  /**\n   * Get display name with role\n   */\n  getDisplayName() {\n    const roleText = this.role === \"owner\" ? \" (Host)\" : \"\";\n    const localText = this.isLocal ? \" (You)\" : \"\";\n    return `${this.userId}${roleText}${localText}`;\n  }\n\n  /**\n   * Toggle microphone (local only)\n   */\n  async toggleMicrophone() {\n    if (!this.isLocal || !this.publisher) return;\n\n    try {\n      await this.publisher.toggleMic();\n      this.isAudioEnabled = !this.isAudioEnabled;\n      this.emit(\"audioToggled\", {\n        participant: this,\n        enabled: this.isAudioEnabled,\n      });\n    } catch (error) {\n      this.emit(\"error\", {\n        participant: this,\n        error,\n        action: \"toggleMicrophone\",\n      });\n    }\n  }\n\n  /**\n   * Toggle camera (local only)\n   */\n  async toggleCamera() {\n    if (!this.isLocal || !this.publisher) return;\n\n    try {\n      await this.publisher.toggleCamera();\n      this.isVideoEnabled = !this.isVideoEnabled;\n      this.emit(\"videoToggled\", {\n        participant: this,\n        enabled: this.isVideoEnabled,\n      });\n    } catch (error) {\n      this.emit(\"error\", { participant: this, error, action: \"toggleCamera\" });\n    }\n  }\n\n  /**\n   * Toggle remote participant's audio\n   */\n  async toggleRemoteAudio() {\n    if (this.isLocal || !this.subscriber) return;\n\n    try {\n      await this.subscriber.toggleAudio();\n      this.isAudioEnabled = !this.isAudioEnabled;\n      this.emit(\"remoteAudioToggled\", {\n        participant: this,\n        enabled: this.isAudioEnabled,\n      });\n    } catch (error) {\n      this.emit(\"error\", {\n        participant: this,\n        error,\n        action: \"toggleRemoteAudio\",\n      });\n    }\n  }\n\n  /**\n   * Toggle pin status\n   */\n  togglePin() {\n    if (!this.isLocal) {\n      if (this.isPinned) {\n        this.subscriber?.switchBitrate(\"360p\");\n        console.warn(\"Unpin participant, switch to low quality\");\n      } else {\n        this.subscriber?.switchBitrate(\"720p\");\n        console.warn(\"Pin participant, switch to high quality\");\n      }\n    }\n\n    this.isPinned = !this.isPinned;\n    this.emit(\"pinToggled\", { participant: this, pinned: this.isPinned });\n  }\n\n  /**\n   * Update connection status\n   */\n  setConnectionStatus(status) {\n    this.connectionStatus = status;\n    this.emit(\"statusChanged\", { participant: this, status });\n  }\n\n  /**\n   * Get status text for display\n   */\n  _getStatusText(status) {\n    switch (status) {\n      case \"connecting\":\n        return \"Connecting...\";\n      case \"connected\":\n        return \"Connected\";\n      case \"disconnected\":\n        return \"Disconnected\";\n      case \"failed\":\n        return \"Connection Failed\";\n      default:\n        return status;\n    }\n  }\n\n  /**\n   * Set publisher instance\n   */\n  setPublisher(publisher) {\n    this.publisher = publisher;\n    if (publisher) {\n      this.setConnectionStatus(\"connected\");\n    }\n  }\n\n  /**\n   * Set subscriber instance\n   */\n  setSubscriber(subscriber) {\n    this.subscriber = subscriber;\n    if (subscriber) {\n      this.setConnectionStatus(\"connected\");\n    }\n  }\n\n  /**\n   * Update microphone status from server event\n   */\n  updateMicStatus(enabled) {\n    this.isAudioEnabled = enabled;\n    this.emit(\"remoteAudioStatusChanged\", {\n      participant: this,\n      enabled: this.isAudioEnabled,\n    });\n  }\n\n  /**\n   * Update camera status from server event\n   */\n  updateCameraStatus(enabled) {\n    this.isVideoEnabled = enabled;\n    this.emit(\"remoteVideoStatusChanged\", {\n      participant: this,\n      enabled: this.isVideoEnabled,\n    });\n  }\n\n  /**\n   * Cleanup participant resources\n   */\n  cleanup() {\n    // Stop media streams\n    if (this.publisher) {\n      this.publisher.stop();\n      this.publisher = null;\n    }\n\n    if (this.subscriber) {\n      this.subscriber.stop();\n      this.subscriber = null;\n    }\n\n    // Stop screen subscriber\n    if (this.screenSubscriber) {\n      this.screenSubscriber.stop();\n      this.screenSubscriber = null;\n    }\n\n    this.setConnectionStatus(\"disconnected\");\n    this.removeAllListeners();\n\n    this.emit(\"cleanup\", { participant: this });\n  }\n\n  /**\n   * Get participant info\n   */\n  getInfo() {\n    return {\n      userId: this.userId,\n      streamId: this.streamId,\n      membershipId: this.membershipId,\n      role: this.role,\n      isLocal: this.isLocal,\n      isAudioEnabled: this.isAudioEnabled,\n      isVideoEnabled: this.isVideoEnabled,\n      isPinned: this.isPinned,\n      isScreenSharing: this.isScreenSharing,\n      connectionStatus: this.connectionStatus,\n    };\n  }\n}\n\nexport default Participant;\n","import EventEmitter from \"../events/EventEmitter.js\";\n\n/**\n * WebRTC Publisher Class\n * Handles video/audio streaming via WebTransport\n */\nexport default class Publisher extends EventEmitter {\n  constructor(options = {}) {\n    super();\n\n    // Validate required options\n    if (!options.publishUrl) {\n      throw new Error(\"publishUrl is required\");\n    }\n\n    // Configuration\n    this.publishUrl = options.publishUrl;\n    this.streamType = options.streamType || \"camera\"; // 'camera' or 'display'\n    this.streamId = options.streamId || \"test_stream\";\n\n    // Video configuration\n    this.currentConfig = {\n      codec: \"avc1.640c34\",\n      width: options.width || 1280,\n      height: options.height || 720,\n      framerate: options.framerate || 30,\n      bitrate: options.bitrate || 1_500_000,\n    };\n\n    // Audio configuration\n    this.kSampleRate = 48000;\n    this.opusBaseTime = 0;\n    this.opusSamplesSent = 0;\n    this.opusSamplesPerChunk = 960; // 20ms at 48kHz\n    this.opusChunkCount = 0;\n\n    // State variables\n    this.stream = null;\n    this.audioProcessor = null;\n    this.videoProcessor = null;\n    this.webTransport = null;\n    this.isChannelOpen = false;\n    this.sequenceNumber = 0;\n    this.isPublishing = false;\n\n    this.cameraEnabled = true;\n    this.micEnabled = true;\n    this.hasCamera = options.hasCamera !== undefined ? options.hasCamera : true;\n    this.hasMic = options.hasMic !== undefined ? options.hasMic : true;\n\n    // Callbacks\n    this.onStatusUpdate =\n      options.onStatusUpdate || ((message, isError) => console.log(message));\n    this.onStreamStart = options.onStreamStart || (() => { });\n    this.onStreamStop = options.onStreamStop || (() => { });\n    this.onServerEvent = options.onServerEvent || ((event) => { });\n\n    // Initialize modules\n    this.wasmInitialized = false;\n    this.wasmInitializing = false;\n    this.wasmInitPromise = null;\n    this.initAudioRecorder = null;\n    this.WasmEncoder = null;\n\n    // Stream management\n    this.publishStreams = new Map(); // key: channelName, value: {writer, reader, configSent, config}\n    this.videoEncoders = new Map();\n    this.eventStream = null; // Dedicated event stream\n\n    this.subStreams = [\n      {\n        name: \"high\",\n        width: 1280,\n        height: 720,\n        bitrate: 800_000,\n        framerate: 30,\n        channelName: \"cam_720p\",\n      },\n      // {\n      //   name: \"low\",\n      //   width: 854,\n      //   height: 480,\n      //   bitrate: 500_000,\n      //   framerate: 30,\n      //   channelName: \"cam_360p\",\n      // },\n      {\n        name: \"low\",\n        width: 640,\n        height: 360,\n        bitrate: 400_000,\n        framerate: 30,\n        channelName: \"cam_360p\",\n      },\n      {\n        name: \"screen\",\n        width: 1920,\n        height: 1080,\n        bitrate: 2_000_000,\n        framerate: 30,\n        channelName: \"screen_share_1080p\",\n      },\n      {\n        name: \"microphone\",\n        channelName: \"mic_48k\",\n      },\n    ];\n  }\n\n  async init() {\n    await this.loadAllDependencies();\n    this.onStatusUpdate(\"Publisher initialized successfully\");\n  }\n\n  async loadAllDependencies() {\n    try {\n      if (\n        !document.querySelector('script[src*=\"MSTP_polyfill.js\"]')\n      ) {\n        await new Promise((resolve, reject) => {\n          const script = document.createElement(\"script\");\n          script.src = \"../polyfills/MSTP_polyfill.js\";\n          script.onload = () => resolve();\n          script.onerror = () =>\n            reject(new Error(\"Failed to load MSTP polyfill\"));\n          document.head.appendChild(script);\n        });\n        console.log(\"Polyfill loaded successfully\");\n      }\n\n      if (!this.wasmInitialized) {\n        if (this.wasmInitializing && this.wasmInitPromise) {\n          await this.wasmInitPromise;\n        } else {\n          this.wasmInitializing = true;\n          const { default: init, WasmEncoder } = await import(\n            \"../raptorQ/raptorq_wasm.js\"\n          );\n\n          this.WasmEncoder = WasmEncoder;\n\n          this.wasmInitPromise = init(\"../raptorQ/raptorq_wasm_bg.wasm\")\n            .then(() => {\n              this.wasmInitialized = true;\n              this.wasmInitializing = false;\n              console.log(\"WASM encoder module loaded successfully\");\n            })\n            .catch((err) => {\n              this.wasmInitializing = false;\n              console.error(\"Failed to load WASM encoder module:\", err);\n              throw new Error(\"Failed to load WASM encoder module\");\n            });\n\n          await this.wasmInitPromise;\n        }\n      }\n\n      const opusModule = await import(\n        `/opus_decoder/opusDecoder.js?t=${Date.now()}`\n      );\n      this.initAudioRecorder = opusModule.initAudioRecorder;\n      console.log(\"Opus decoder module loaded successfully\");\n\n      this.onStatusUpdate(\"All dependencies loaded successfully\");\n    } catch (error) {\n      this.onStatusUpdate(`Dependency loading error: ${error.message}`, true);\n      throw error;\n    }\n  }\n\n  async startPublishing() {\n    if (this.isPublishing) {\n      this.onStatusUpdate(\"Already publishing\", true);\n      return;\n    }\n    await this.init();\n\n    // Setup WebTransport connection\n    await this.setupConnection();\n\n    try {\n      // Get media stream based on type\n      await this.getMediaStream();\n      this.isPublishing = true;\n      // Start streaming\n      await this.startStreaming();\n\n      this.onStreamStart();\n      this.onStatusUpdate(\"Publishing started successfully\");\n    } catch (error) {\n      this.onStatusUpdate(`Failed to start publishing: ${error.message}`, true);\n      throw error;\n    }\n  }\n\n  // Toggle camera\n  async toggleCamera() {\n    if (this.cameraEnabled) {\n      await this.turnOffCamera();\n    } else {\n      await this.turnOnCamera();\n    }\n  }\n\n  // Toggle mic\n  async toggleMic() {\n    if (this.micEnabled) {\n      await this.turnOffMic();\n    } else {\n      await this.turnOnMic();\n    }\n  }\n\n  // Turn off camera (stop encoding video frames)\n  async turnOffCamera() {\n    if (!this.cameraEnabled) return;\n\n    this.cameraEnabled = false;\n    this.onStatusUpdate(\"Camera turned off\");\n\n    // Send camera_off event to server\n    await this.sendMeetingEvent(\"camera_off\");\n  }\n\n  // Turn on camera (resume encoding video frames)\n  async turnOnCamera() {\n    if (this.cameraEnabled) return;\n\n    this.cameraEnabled = true;\n    this.onStatusUpdate(\"Camera turned on\");\n\n    // Send camera_on event to server\n    await this.sendMeetingEvent(\"camera_on\");\n  }\n\n  // Turn off mic (stop encoding audio chunks)\n  async turnOffMic() {\n    if (!this.micEnabled) return;\n\n    this.micEnabled = false;\n    this.onStatusUpdate(\"Mic turned off\");\n\n    // Send mic_off event to server\n    await this.sendMeetingEvent(\"mic_off\");\n  }\n\n  // Turn on mic (resume encoding audio chunks)\n  async turnOnMic() {\n    if (this.micEnabled) return;\n\n    this.micEnabled = true;\n    this.onStatusUpdate(\"Mic turned on\");\n\n    // Send mic_on event to server\n    await this.sendMeetingEvent(\"mic_on\");\n  }\n\n  /**\n   * Send meeting control event to server\n   */\n  async sendMeetingEvent(eventType, targetStreamId = null) {\n    if (!eventType) return;\n\n    if (!this.isChannelOpen || !this.eventStream) {\n      console.warn(`Skipping ${eventType} event: Event stream not ready`);\n      return;\n    }\n    console.log(\"[Meeting Event] Sender stream ID:\", this.streamId);\n\n    const eventMessage = {\n      type: eventType,\n      sender_stream_id: this.streamId,\n      timestamp: Date.now(),\n    };\n\n    if (\n      (eventType === \"pin_for_everyone\" ||\n        eventType === \"unpin_for_everyone\") &&\n      targetStreamId\n    ) {\n      eventMessage.target_stream_id = targetStreamId;\n    }\n\n    try {\n      await this.sendEvent(eventMessage);\n      console.log(`Sent meeting event:`, eventMessage);\n    } catch (error) {\n      console.error(`Failed to send meeting event ${eventType}:`, error);\n      this.onStatusUpdate(`Failed to notify server about ${eventType}`, true);\n    }\n  }\n\n  async getMediaStream() {\n    if (this.streamType === \"camera\") {\n      const constraints = {\n        audio: {\n          sampleRate: this.kSampleRate,\n          channelCount: 1,\n          echoCancellation: true,\n          noiseSuppression: true,\n        },\n        video: {\n          width: { ideal: this.currentConfig.width },\n          height: { ideal: this.currentConfig.height },\n          frameRate: { ideal: this.currentConfig.framerate },\n        },\n      };\n      try {\n        this.stream = await navigator.mediaDevices.getUserMedia(constraints);\n      } catch (error) {\n        console.error(\"Error accessing media devices:\", error);\n      }\n    } else if (this.streamType === \"display\") {\n      this.stream = await navigator.mediaDevices.getDisplayMedia({\n        video: true,\n        audio: true,\n      });\n\n      // Handle user stopping screen share via browser UI\n      const videoTrack = this.stream.getVideoTracks()[0];\n      if (videoTrack) {\n        videoTrack.onended = () => {\n          this.stop();\n        };\n      }\n    }\n\n    // Create video-only stream for display\n    const videoOnlyStream = new MediaStream();\n    const videoTracks = this.stream.getVideoTracks();\n\n    if (videoTracks.length > 0) {\n      videoOnlyStream.addTrack(videoTracks[0]);\n    }\n\n    // Emit local stream ready event for app integration\n    this.emit(\"localStreamReady\", {\n      stream: this.stream,           // Full stream with audio + video\n      videoOnlyStream: videoOnlyStream, // Video only stream\n      streamType: this.streamType,\n      streamId: this.streamId,\n      config: this.currentConfig\n    });\n    this.onStatusUpdate(`${this.streamType} stream ready`);\n  }\n\n  initVideoEncoders() {\n    this.subStreams.forEach((subStream) => {\n      if (!subStream.channelName.startsWith(\"mic\")) {\n        console.log(`Setting up encoder for ${subStream.name}`);\n        const encoder = new VideoEncoder({\n          output: (chunk, metadata) =>\n            this.handleVideoChunk(\n              chunk,\n              metadata,\n              subStream.name,\n              subStream.channelName\n            ),\n          error: (e) =>\n            this.onStatusUpdate(\n              `Encoder ${subStream.name} error: ${e.message}`,\n              true\n            ),\n        });\n\n        this.videoEncoders.set(subStream.name, {\n          encoder,\n          channelName: subStream.channelName,\n          config: {\n            codec: this.currentConfig.codec,\n            width: subStream.width,\n            height: subStream.height,\n            bitrate: subStream.bitrate,\n            framerate: this.currentConfig.framerate,\n            latencyMode: \"realtime\",\n            hardwareAcceleration: \"prefer-hardware\",\n          },\n          metadataReady: false,\n          videoDecoderConfig: null,\n        });\n      }\n    });\n  }\n\n  async setupConnection() {\n    this.webTransport = new WebTransport(this.publishUrl);\n    await this.webTransport.ready;\n    console.log(\"WebTransport connected to server\");\n\n    await this.createEventStream();\n\n    for (const subStream of this.subStreams) {\n      if (!subStream.channelName.startsWith(\"screen\")) {\n        await this.createBidirectionalStream(subStream.channelName);\n      }\n    }\n\n    this.isChannelOpen = true;\n    this.onStatusUpdate(\n      \"WebTransport connection established with event stream and media streams\"\n    );\n  }\n\n  async createEventStream() {\n    const stream = await this.webTransport.createBidirectionalStream();\n    const readable = stream.readable;\n    const writable = stream.writable;\n\n    const writer = writable.getWriter();\n    const reader = readable.getReader();\n\n    this.eventStream = { writer, reader };\n\n    console.log(\"WebTransport event stream established\");\n\n    const initData = new TextEncoder().encode(\"meeting_control\");\n    await this.sendOverEventStream(initData);\n\n    // Setup reader cho event stream\n    this.setupEventStreamReader(reader);\n\n    await this.sendPublisherState();\n\n    const workerInterval = new Worker(\"polyfills/intervalWorker.js\");\n    workerInterval.postMessage({ interval: 1000 });\n    let lastPingTime = Date.now();\n\n    workerInterval.onmessage = (e) => {\n      const ping = new TextEncoder().encode(\"ping\");\n      this.sendOverEventStream(ping);\n      if (Date.now() - lastPingTime > 1200) {\n        console.warn(\"Ping delay detected, connection may be unstable\");\n      }\n      lastPingTime = Date.now();\n    };\n\n    // setInterval(() => {\n    //   const ping = new TextEncoder().encode(\"ping\");\n    //   this.sendOverEventStream(ping);\n    //   console.log(\"Ping sent to server\");\n    // }, 500);\n  }\n\n  setupEventStreamReader(reader) {\n    (async () => {\n      try {\n        while (true) {\n          const { value, done } = await reader.read();\n          if (done) {\n            console.log(\"Event stream closed by server\");\n            break;\n          }\n          if (value) {\n            const msg = new TextDecoder().decode(value);\n            try {\n              const event = JSON.parse(msg);\n              this.onServerEvent(event);\n            } catch (e) {\n              console.log(\"Non-JSON event message:\", msg);\n            }\n          }\n        }\n      } catch (err) {\n        console.error(\"Error reading from event stream:\", err);\n      }\n    })();\n  }\n\n  async sendOverEventStream(data) {\n    if (!this.eventStream) {\n      console.error(\"Event stream not available\");\n      return;\n    }\n\n    try {\n      const bytes =\n        typeof data === \"string\" ? new TextEncoder().encode(data) : data;\n\n      const len = bytes.length;\n      const out = new Uint8Array(4 + len);\n      const view = new DataView(out.buffer);\n      view.setUint32(0, len, false);\n      out.set(bytes, 4);\n      await this.eventStream.writer.write(out);\n    } catch (error) {\n      console.error(\"Failed to send over event stream:\", error);\n      throw error;\n    }\n  }\n\n  async sendEvent(eventData) {\n    const eventJson = JSON.stringify(eventData);\n    await this.sendOverEventStream(eventJson);\n  }\n\n  async sendPublisherState() {\n    const stateEvent = {\n      type: \"PublisherState\",\n      streamId: this.streamId,\n      hasCamera: this.hasCamera,\n      hasMic: this.hasMic,\n      cameraEnabled: this.hasCamera ? this.cameraEnabled : false,\n      micEnabled: this.hasMic ? this.micEnabled : false,\n      streamType: this.streamType, // 'camera' or 'display'\n      timestamp: Date.now(),\n    };\n\n    await this.sendEvent(stateEvent);\n    this.onStatusUpdate(\"Publisher state sent to server\");\n  }\n\n  async createBidirectionalStream(channelName) {\n    const stream = await this.webTransport.createBidirectionalStream();\n    const readable = stream.readable;\n    const writable = stream.writable;\n\n    const writer = writable.getWriter();\n    const reader = readable.getReader();\n\n    this.publishStreams.set(channelName, {\n      writer,\n      reader,\n      configSent: false,\n      config: null,\n    });\n\n    console.log(\n      `WebTransport bidirectional stream (${channelName}) established`\n    );\n\n    const initData = new TextEncoder().encode(channelName);\n    await this.sendOverStream(channelName, initData);\n\n    this.setupStreamReader(channelName, reader);\n\n    console.log(`Stream created: ${channelName}`);\n  }\n\n  setupStreamReader(channelName, reader) {\n    (async () => {\n      try {\n        while (true) {\n          const { value, done } = await reader.read();\n          if (done) {\n            console.log(`Stream ${channelName} closed by server`);\n            break;\n          }\n          if (value) {\n            const msg = new TextDecoder().decode(value);\n            if (msg.startsWith(\"ack:\") || msg.startsWith(\"config:\")) {\n              console.log(`${channelName} received:`, msg);\n            }\n          }\n        }\n      } catch (err) {\n        console.error(`Error reading from stream ${channelName}:`, err);\n      }\n    })();\n  }\n\n  async sendOverStream(channelName, frameBytes) {\n    const streamData = this.publishStreams.get(channelName);\n    if (!streamData) {\n      console.error(`Stream ${channelName} not found`);\n      return;\n    }\n\n    try {\n      const len = frameBytes.length;\n      const out = new Uint8Array(4 + len);\n      const view = new DataView(out.buffer);\n      view.setUint32(0, len, false);\n      out.set(frameBytes, 4);\n      await streamData.writer.write(out);\n    } catch (error) {\n      console.error(`Failed to send over stream ${channelName}:`, error);\n      throw error;\n    }\n  }\n\n  async startStreaming() {\n    // Start video capture\n    await this.startVideoCapture();\n\n    // Start audio streaming\n    this.audioProcessor = await this.startOpusAudioStreaming();\n  }\n\n  async startVideoCapture() {\n    if (!this.stream) {\n      throw new Error(\"No media stream available\");\n    }\n\n    this.initVideoEncoders();\n\n    this.videoEncoders.forEach((encoderObj) => {\n      console.log(\n        `Configuring encoder for ${encoderObj.channelName}`,\n        encoderObj,\n        \"config\",\n        encoderObj.config\n      );\n      encoderObj.encoder.configure(encoderObj.config);\n    });\n\n    const triggerWorker = new Worker(\"polyfills/triggerWorker.js\");\n    triggerWorker.postMessage({ frameRate: this.currentConfig.framerate });\n\n    const track = this.stream.getVideoTracks()[0];\n    console.log(\"Using video track:\", track);\n    this.videoProcessor = new MediaStreamTrackProcessor(\n      track,\n      triggerWorker,\n      true\n    );\n\n    const reader = this.videoProcessor.readable.getReader();\n    console.log(\"Video processor reader created:\", reader);\n\n    let frameCounter = 0;\n\n    const cameraEncoders = Array.from(this.videoEncoders.entries()).filter(\n      ([_, obj]) => obj.channelName.startsWith(\"cam\")\n    );\n\n    // Process video frames\n    (async () => {\n      try {\n        while (this.isPublishing) {\n          const result = await reader.read();\n\n          if (result.done) break;\n\n          const frame = result.value;\n\n          if (!window.videoBaseTimestamp) {\n            window.videoBaseTimestamp = frame.timestamp;\n          }\n\n          if (!this.cameraEnabled) {\n            console.log(\"Camera disabled, skipping frame\");\n            frame.close();\n            continue;\n          }\n\n          frameCounter++;\n          const keyFrame = frameCounter % 30 === 0;\n\n          for (let i = 0; i < cameraEncoders.length; i++) {\n            const [quality, encoderObj] = cameraEncoders[i];\n            const isLastEncoder = i === cameraEncoders.length - 1;\n\n            if (encoderObj.encoder.encodeQueueSize <= 2) {\n              const frameToEncode = isLastEncoder\n                ? frame\n                : new VideoFrame(frame);\n              encoderObj.encoder.encode(frameToEncode, { keyFrame });\n              frameToEncode.close();\n            }\n          }\n        }\n      } catch (error) {\n        this.onStatusUpdate(`Video processing error: ${error.message}`, true);\n        console.error(\"Video capture error:\", error);\n      }\n    })();\n  }\n\n  async startOpusAudioStreaming() {\n    if (!this.stream) {\n      throw new Error(\"No media stream available\");\n    }\n\n    const audioTrack = this.stream.getAudioTracks()[0];\n    if (!audioTrack) {\n      throw new Error(\"No audio track found in stream\");\n    }\n\n    const audioRecorderOptions = {\n      encoderApplication: 2051,\n      encoderComplexity: 0,\n      encoderFrameSize: 20,\n      timeSlice: 100,\n    };\n\n    const audioRecorder = await this.initAudioRecorder(\n      audioTrack,\n      audioRecorderOptions\n    );\n    audioRecorder.ondataavailable = (typedArray) =>\n      this.handleOpusAudioChunk(typedArray, \"mic_48k\");\n\n    await audioRecorder.start({\n      timeSlice: audioRecorderOptions.timeSlice,\n    });\n\n    return audioRecorder;\n  }\n\n  handleVideoChunk(chunk, metadata, quality, channelName) {\n    const encoderObj = this.videoEncoders.get(quality);\n    if (!encoderObj) return;\n\n    const streamData = this.publishStreams.get(channelName);\n    if (!streamData) return;\n\n    if (metadata && metadata.decoderConfig && !encoderObj.metadataReady) {\n      encoderObj.videoDecoderConfig = {\n        codec: metadata.decoderConfig.codec,\n        codedWidth: metadata.decoderConfig.codedWidth,\n        codedHeight: metadata.decoderConfig.codedHeight,\n        frameRate: this.currentConfig.framerate,\n        description: metadata.decoderConfig.description,\n      };\n      encoderObj.metadataReady = true;\n      console.warn(\n        \"Video config ready for\",\n        channelName,\n        encoderObj.videoDecoderConfig\n      );\n      this.sendStreamConfig(\n        channelName,\n        encoderObj.videoDecoderConfig,\n        \"video\"\n      );\n    }\n\n    if (!streamData.configSent) return;\n\n    const chunkData = new ArrayBuffer(chunk.byteLength);\n    chunk.copyTo(chunkData);\n    let type;\n    switch (channelName) {\n      case \"cam_360p\":\n        type = chunk.type === \"key\" ? 0 : 1;\n        break;\n      case \"cam_720p\":\n        type = chunk.type === \"key\" ? 2 : 3;\n        break;\n      case \"screen_share_1080p\":\n        type = chunk.type === \"key\" ? 4 : 5;\n        break;\n      default:\n        type = 8; // other\n    }\n    // const type = chunk.type === \"key\" ? \"video-key\" : \"video-delta\";\n\n    const packet = this.createPacketWithHeader(\n      chunkData,\n      chunk.timestamp,\n      type\n    );\n\n    this.sendOverStream(channelName, packet);\n    this.sequenceNumber++;\n  }\n\n  handleOpusAudioChunk(typedArray, channelName) {\n    if (!this.micEnabled) return;\n    if (!this.isChannelOpen || !typedArray || typedArray.byteLength === 0)\n      return;\n\n    const streamData = this.publishStreams.get(channelName);\n    if (!streamData) return;\n\n    try {\n      const dataArray = new Uint8Array(typedArray);\n      // Check for Opus header \"OggS\"\n      if (\n        dataArray.length >= 4 &&\n        dataArray[0] === 79 &&\n        dataArray[1] === 103 &&\n        dataArray[2] === 103 &&\n        dataArray[3] === 83\n      ) {\n        if (!streamData.configSent && !streamData.config) {\n          const description = this.createPacketWithHeader(\n            dataArray,\n            performance.now() * 1000,\n            6\n          );\n\n          const audioConfig = {\n            codec: \"opus\",\n            sampleRate: 48000,\n            numberOfChannels: 1,\n            description: description,\n          };\n\n          streamData.config = audioConfig;\n          this.sendStreamConfig(channelName, audioConfig, \"audio\");\n        }\n\n        // Initialize timing\n        if (this.opusBaseTime === 0 && window.videoBaseTimestamp) {\n          this.opusBaseTime = window.videoBaseTimestamp;\n          window.audioStartPerfTime = performance.now();\n          this.opusSamplesSent = 0;\n          this.opusChunkCount = 0;\n        } else if (this.opusBaseTime === 0 && !window.videoBaseTimestamp) {\n          this.opusBaseTime = performance.now() * 1000;\n          this.opusSamplesSent = 0;\n          this.opusChunkCount = 0;\n        }\n\n        const timestamp =\n          this.opusBaseTime +\n          Math.floor((this.opusSamplesSent * 1000000) / this.kSampleRate);\n\n        if (streamData.configSent) {\n          const packet = this.createPacketWithHeader(dataArray, timestamp, 6);\n\n          this.sendOverStream(channelName, packet);\n        }\n      }\n    } catch (error) {\n      console.error(\"Failed to send audio data:\", error);\n    }\n  }\n\n  async sendStreamConfig(channelName, config, mediaType) {\n    const streamData = this.publishStreams.get(channelName);\n    if (!streamData || streamData.configSent) return;\n\n    try {\n      let configPacket;\n\n      if (mediaType === \"video\") {\n        const vConfigUint8 = new Uint8Array(config.description);\n        const vConfigBase64 = this.uint8ArrayToBase64(vConfigUint8);\n\n        configPacket = {\n          type: \"StreamConfig\",\n          channelName: channelName,\n          mediaType: \"video\",\n          config: {\n            codec: config.codec,\n            codedWidth: config.codedWidth,\n            codedHeight: config.codedHeight,\n            frameRate: config.frameRate,\n            quality: config.quality,\n            description: vConfigBase64,\n          },\n        };\n      } else if (mediaType === \"audio\") {\n        const aConfigBase64 = this.uint8ArrayToBase64(\n          new Uint8Array(config.description)\n        );\n\n        configPacket = {\n          type: \"StreamConfig\",\n          channelName: channelName,\n          mediaType: \"audio\",\n          config: {\n            codec: config.codec,\n            sampleRate: config.sampleRate,\n            numberOfChannels: config.numberOfChannels,\n            description: aConfigBase64,\n          },\n        };\n      }\n      console.log(\"send stream config\", configPacket);\n      const packet = new TextEncoder().encode(JSON.stringify(configPacket));\n      await this.sendOverStream(channelName, packet);\n\n      streamData.configSent = true;\n      streamData.config = config;\n\n      this.onStatusUpdate(`Config sent for stream: ${channelName}`);\n    } catch (error) {\n      console.error(`Failed to send config for ${channelName}:`, error);\n    }\n  }\n\n  createPacketWithHeader(data, timestamp, type) {\n    let adjustedTimestamp = timestamp;\n    if (window.videoBaseTimestamp) {\n      adjustedTimestamp = timestamp - window.videoBaseTimestamp;\n    }\n\n    let safeTimestamp = Math.floor(adjustedTimestamp / 1000);\n    if (safeTimestamp < 0) safeTimestamp = 0;\n\n    const HEADER_SIZE = 5;\n    const MAX_TS = 0xffffffff;\n    const MIN_TS = 0;\n\n    if (safeTimestamp > MAX_TS) safeTimestamp = MAX_TS;\n    if (safeTimestamp < MIN_TS) safeTimestamp = MIN_TS;\n\n    const packet = new Uint8Array(\n      HEADER_SIZE +\n      (data instanceof ArrayBuffer ? data.byteLength : data.length)\n    );\n    // type mapping\n    // video-360p-key = 0\n    // video-360p-delta = 1\n    // video-720p-key = 2\n    // video-720p-delta = 3\n    // video-1080p-key = 4\n    // video-1080p-delta = 5\n    // audio = 6\n    // config = 7\n    // other = 8\n\n    packet[4] = type;\n\n    const view = new DataView(packet.buffer, 0, 4);\n    view.setUint32(0, safeTimestamp, false);\n\n    packet.set(\n      data instanceof ArrayBuffer ? new Uint8Array(data) : data,\n      HEADER_SIZE\n    );\n\n    return packet;\n  }\n\n  uint8ArrayToBase64(bytes) {\n    let binary = \"\";\n    const chunkSize = 0x8000;\n    for (let i = 0; i < bytes.length; i += chunkSize) {\n      const chunk = bytes.subarray(i, i + chunkSize);\n      binary += String.fromCharCode.apply(null, chunk);\n    }\n    return btoa(binary);\n  }\n\n  /**\n   * Start screen sharing\n   */\n  async startShareScreen(stream) {\n    if (!stream) {\n      throw new Error(\"No stream provided for screen sharing\");\n    }\n\n    this.screenStream = stream;\n    this.isScreenSharing = true;\n\n    const channelName = \"screen_share_1080p\";\n\n    try {\n      // Create WebTransport stream for screen share\n      await this.createBidirectionalStream(channelName);\n\n      // Send start_share_screen event\n      const startEvent = {\n        type: \"start_share_screen\",\n        sender_stream_id: this.streamId,\n      };\n      await this.sendEvent(startEvent);\n\n      const videoTrack = stream.getVideoTracks()[0];\n      const audioTrack = stream.getAudioTracks()[0];\n\n      if (!videoTrack) {\n        throw new Error(\"No video track found in screen share stream\");\n      }\n\n      // Setup screen share video encoder\n      const screenConfig = this.subStreams.find(\n        (s) => s.channelName === channelName\n      );\n\n      const screenEncoder = new VideoEncoder({\n        output: (chunk, metadata) =>\n          this.handleScreenVideoChunk(chunk, metadata, channelName),\n        error: (e) =>\n          this.onStatusUpdate(`Screen encoder error: ${e.message}`, true),\n      });\n\n      const encoderConfig = {\n        codec: this.currentConfig.codec,\n        width: screenConfig.width,\n        height: screenConfig.height,\n        bitrate: screenConfig.bitrate,\n        framerate: screenConfig.framerate,\n        latencyMode: \"realtime\",\n        hardwareAcceleration: \"prefer-hardware\",\n      };\n\n      screenEncoder.configure(encoderConfig);\n\n      this.screenVideoEncoder = {\n        encoder: screenEncoder,\n        config: encoderConfig,\n        metadataReady: false,\n        videoDecoderConfig: null,\n      };\n\n      // Setup screen share audio if available\n      if (audioTrack) {\n        const audioRecorderOptions = {\n          encoderApplication: 2051,\n          encoderComplexity: 0,\n          encoderFrameSize: 20,\n          timeSlice: 100,\n        };\n\n        this.screenAudioRecorder = await this.initAudioRecorder(\n          audioTrack,\n          audioRecorderOptions\n        );\n\n        this.screenAudioRecorder.ondataavailable = (typedArray) =>\n          this.handleScreenAudioChunk(typedArray, channelName);\n\n        await this.screenAudioRecorder.start({\n          timeSlice: audioRecorderOptions.timeSlice,\n        });\n\n        this.screenAudioBaseTime = 0;\n        this.screenAudioSamplesSent = 0;\n      }\n\n      // Start video processing\n      const triggerWorker = new Worker(\"polyfills/triggerWorker.js\");\n      triggerWorker.postMessage({ frameRate: screenConfig.framerate });\n\n      this.screenVideoProcessor = new MediaStreamTrackProcessor(\n        videoTrack,\n        triggerWorker,\n        true\n      );\n\n      const reader = this.screenVideoProcessor.readable.getReader();\n      let frameCounter = 0;\n\n      // Handle video track ending\n      videoTrack.onended = () => {\n        this.stopShareScreen();\n      };\n\n      // Process screen share video frames\n      (async () => {\n        try {\n          while (this.isScreenSharing) {\n            const result = await reader.read();\n            if (result.done) break;\n\n            const frame = result.value;\n\n            if (!window.screenBaseTimestamp) {\n              window.screenBaseTimestamp = frame.timestamp;\n            }\n\n            frameCounter++;\n            const keyFrame = frameCounter % 30 === 0;\n\n            if (this.screenVideoEncoder.encoder.encodeQueueSize <= 2) {\n              this.screenVideoEncoder.encoder.encode(frame, { keyFrame });\n            }\n\n            frame.close();\n          }\n        } catch (error) {\n          this.onStatusUpdate(\n            `Screen share video error: ${error.message}`,\n            true\n          );\n          console.error(\"Screen share video error:\", error);\n        }\n      })();\n\n      this.onStatusUpdate(\"Screen sharing started\");\n    } catch (error) {\n      this.onStatusUpdate(\n        `Failed to start screen share: ${error.message}`,\n        true\n      );\n      this.stopShareScreen();\n      throw error;\n    }\n  }\n\n  /**\n   * Stop screen sharing\n   */\n  async stopShareScreen() {\n    if (!this.isScreenSharing) {\n      return;\n    }\n\n    try {\n      this.isScreenSharing = false;\n\n      const channelName = \"screen_share_1080p\";\n\n      // Send stop event to server\n      const stopEvent = {\n        type: \"stop_share_screen\",\n        sender_stream_id: this.streamId,\n      };\n      await this.sendEvent(stopEvent);\n\n      // Stop and close video encoder\n      if (this.screenVideoEncoder && this.screenVideoEncoder.encoder) {\n        if (this.screenVideoEncoder.encoder.state !== \"closed\") {\n          await this.screenVideoEncoder.encoder.flush();\n          this.screenVideoEncoder.encoder.close();\n        }\n        this.screenVideoEncoder = null;\n      }\n\n      // Stop audio recorder\n      if (\n        this.screenAudioRecorder &&\n        typeof this.screenAudioRecorder.stop === \"function\"\n      ) {\n        await this.screenAudioRecorder.stop();\n        this.screenAudioRecorder = null;\n      }\n\n      // Close screen share stream\n      const streamData = this.publishStreams.get(channelName);\n      if (streamData && streamData.writer) {\n        await streamData.writer.close();\n        this.publishStreams.delete(channelName);\n      }\n\n      // Stop all tracks in screen stream\n      if (this.screenStream) {\n        this.screenStream.getTracks().forEach((track) => track.stop());\n        this.screenStream = null;\n      }\n\n      // Reset state\n      this.screenAudioBaseTime = 0;\n      this.screenAudioSamplesSent = 0;\n      this.screenAudioConfig = null;\n      window.screenBaseTimestamp = null;\n\n      this.onStatusUpdate(\"Screen sharing stopped\");\n    } catch (error) {\n      this.onStatusUpdate(\n        `Error stopping screen share: ${error.message}`,\n        true\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Handle screen share video chunks\n   */\n  handleScreenVideoChunk(chunk, metadata, channelName) {\n    if (!this.screenVideoEncoder) return;\n\n    const streamData = this.publishStreams.get(channelName);\n    if (!streamData) return;\n\n    // Handle metadata\n    if (\n      metadata &&\n      metadata.decoderConfig &&\n      !this.screenVideoEncoder.metadataReady\n    ) {\n      this.screenVideoEncoder.videoDecoderConfig = {\n        codec: metadata.decoderConfig.codec,\n        codedWidth: metadata.decoderConfig.codedWidth,\n        codedHeight: metadata.decoderConfig.codedHeight,\n        frameRate: this.screenVideoEncoder.config.framerate,\n        description: metadata.decoderConfig.description,\n      };\n      this.screenVideoEncoder.metadataReady = true;\n\n      console.log(\n        \"Screen video config ready:\",\n        this.screenVideoEncoder.videoDecoderConfig\n      );\n\n      this.sendScreenDecoderConfigs(channelName);\n    }\n\n    if (!streamData.configSent) return;\n\n    const chunkData = new ArrayBuffer(chunk.byteLength);\n    chunk.copyTo(chunkData);\n    const type = chunk.type === \"key\" ? 4 : 5; // screen_share_1080p key/delta\n\n    const packet = this.createPacketWithHeader(\n      chunkData,\n      chunk.timestamp,\n      type\n    );\n\n    this.sendOverStream(channelName, packet);\n  }\n\n  /**\n   * Handle screen share audio chunks\n   */\n  handleScreenAudioChunk(typedArray, channelName) {\n    if (!this.isScreenSharing || !typedArray || typedArray.byteLength === 0)\n      return;\n\n    const streamData = this.publishStreams.get(channelName);\n    if (!streamData) return;\n\n    try {\n      const dataArray = new Uint8Array(typedArray);\n\n      // Check for Opus header\n      if (\n        dataArray.length >= 4 &&\n        dataArray[0] === 79 &&\n        dataArray[1] === 103 &&\n        dataArray[2] === 103 &&\n        dataArray[3] === 83\n      ) {\n        if (!this.screenAudioConfig) {\n          const description = this.createPacketWithHeader(\n            dataArray,\n            performance.now() * 1000,\n            6\n          );\n\n          this.screenAudioConfig = {\n            codec: \"opus\",\n            sampleRate: 48000,\n            numberOfChannels: 2,\n            description: description,\n          };\n\n          console.log(\"Screen audio config ready:\", this.screenAudioConfig);\n          this.sendScreenDecoderConfigs(channelName);\n        }\n\n        // Initialize timing\n        if (this.screenAudioBaseTime === 0 && window.screenBaseTimestamp) {\n          this.screenAudioBaseTime = window.screenBaseTimestamp;\n          this.screenAudioSamplesSent = 0;\n        } else if (\n          this.screenAudioBaseTime === 0 &&\n          !window.screenBaseTimestamp\n        ) {\n          this.screenAudioBaseTime = performance.now() * 1000;\n          this.screenAudioSamplesSent = 0;\n        }\n\n        const timestamp =\n          this.screenAudioBaseTime +\n          Math.floor((this.screenAudioSamplesSent * 1000000) / 48000);\n\n        if (streamData.configSent) {\n          const packet = this.createPacketWithHeader(dataArray, timestamp, 6);\n          this.sendOverStream(channelName, packet);\n        }\n\n        this.screenAudioSamplesSent += 960;\n      }\n    } catch (error) {\n      console.error(\"Failed to send screen audio data:\", error);\n    }\n  }\n\n  /**\n   * Send screen share decoder configs\n   */\n  async sendScreenDecoderConfigs(channelName) {\n    const streamData = this.publishStreams.get(channelName);\n    if (!streamData || streamData.configSent) return;\n\n    const hasAudio = this.screenAudioRecorder !== null;\n    const videoReady =\n      this.screenVideoEncoder && this.screenVideoEncoder.metadataReady;\n    const audioReady = !hasAudio || this.screenAudioConfig;\n\n    if (!videoReady || !audioReady) {\n      return;\n    }\n\n    try {\n      const vConfigUint8 = new Uint8Array(\n        this.screenVideoEncoder.videoDecoderConfig.description\n      );\n      const vConfigBase64 = this.uint8ArrayToBase64(vConfigUint8);\n\n      const config = {\n        type: \"DecoderConfigs\",\n        channelName: channelName,\n        videoConfig: {\n          codec: this.screenVideoEncoder.videoDecoderConfig.codec,\n          codedWidth: this.screenVideoEncoder.videoDecoderConfig.codedWidth,\n          codedHeight: this.screenVideoEncoder.videoDecoderConfig.codedHeight,\n          frameRate: this.screenVideoEncoder.videoDecoderConfig.frameRate,\n          description: vConfigBase64,\n        },\n      };\n\n      if (this.screenAudioConfig) {\n        const aConfigBase64 = this.uint8ArrayToBase64(\n          new Uint8Array(this.screenAudioConfig.description)\n        );\n\n        config.audioConfig = {\n          codec: this.screenAudioConfig.codec,\n          sampleRate: this.screenAudioConfig.sampleRate,\n          numberOfChannels: this.screenAudioConfig.numberOfChannels,\n          description: aConfigBase64,\n        };\n      }\n\n      console.log(\"Sending screen share decoder configs:\", config);\n      const packet = new TextEncoder().encode(JSON.stringify(config));\n      await this.sendOverStream(channelName, packet);\n\n      streamData.configSent = true;\n      this.onStatusUpdate(`Screen share configs sent for: ${channelName}`);\n    } catch (error) {\n      console.error(`Failed to send screen share configs:`, error);\n    }\n  }\n\n  async stop() {\n    if (!this.isPublishing) {\n      return;\n    }\n\n    try {\n      this.isPublishing = false;\n\n      // Stop screen sharing if active\n      if (this.isScreenSharing) {\n        await this.stopShareScreen();\n      }\n\n      // Close video encoders\n      for (const [quality, encoderObj] of this.videoEncoders) {\n        if (encoderObj.encoder && encoderObj.encoder.state !== \"closed\") {\n          await encoderObj.encoder.flush();\n          encoderObj.encoder.close();\n        }\n      }\n      this.videoEncoders.clear();\n\n      // Stop audio processor\n      if (\n        this.audioProcessor &&\n        typeof this.audioProcessor.stop === \"function\"\n      ) {\n        await this.audioProcessor.stop();\n        this.audioProcessor = null;\n      }\n\n      // Close all streams\n      for (const [channelName, streamData] of this.publishStreams) {\n        if (streamData.writer) {\n          await streamData.writer.close();\n        }\n      }\n      this.publishStreams.clear();\n\n      // Close event stream\n      if (this.eventStream && this.eventStream.writer) {\n        await this.eventStream.writer.close();\n        this.eventStream = null;\n      }\n\n      // Close WebTransport\n      if (this.webTransport) {\n        this.webTransport.close();\n        this.webTransport = null;\n      }\n\n      // Stop all tracks\n      if (this.stream) {\n        this.stream.getTracks().forEach((track) => track.stop());\n        this.stream = null;\n      }\n\n      // Reset state\n      this.isChannelOpen = false;\n      this.sequenceNumber = 0;\n      this.opusBaseTime = 0;\n      this.opusSamplesSent = 0;\n      this.opusChunkCount = 0;\n\n      // Clear global variables\n      window.videoBaseTimestamp = null;\n      window.audioStartPerfTime = null;\n\n      this.onStreamStop();\n      this.onStatusUpdate(\"Publishing stopped\");\n    } catch (error) {\n      this.onStatusUpdate(`Error stopping publishing: ${error.message}`, true);\n      throw error;\n    }\n  }\n\n  // Getters for state\n  get isActive() {\n    return this.isPublishing;\n  }\n\n  get streamInfo() {\n    return {\n      streamType: this.streamType,\n      config: this.currentConfig,\n      sequenceNumber: this.sequenceNumber,\n      activeStreams: Array.from(this.publishStreams.keys()),\n    };\n  }\n}\n","import EventEmitter from \"../events/EventEmitter.js\";\n\n/**\n * Enhanced Subscriber class for receiving media streams\n * Refactored from EnhancedSubscriber with better structure\n */\nclass Subscriber extends EventEmitter {\n  constructor(config) {\n    super();\n\n    // Configuration\n    this.streamId = config.streamId || \"\";\n    this.roomId = config.roomId || \"\";\n    this.host = config.host || \"stream-gate.bandia.vn\";\n    this.isOwnStream = config.isOwnStream || false;\n\n    // Media configuration\n    this.mediaWorkerUrl = config.mediaWorkerUrl || \"workers/media-worker-ab.js\";\n    this.audioWorkletUrl =\n      config.audioWorkletUrl || \"workers/audio-worklet1.js\";\n    this.mstgPolyfillUrl =\n      config.mstgPolyfillUrl || \"polyfills/MSTG_polyfill.js\";\n\n    // State\n    this.isStarted = false;\n    this.isAudioEnabled = true;\n    this.connectionStatus = \"disconnected\"; // 'disconnected', 'connecting', 'connected', 'failed'\n\n    // Media components\n    this.worker = null;\n    this.audioWorkletNode = null;\n    this.videoGenerator = null;\n    this.videoWriter = null;\n    this.mediaStream = null;\n\n    // Unique subscriber ID\n    this.subscriberId = `subscriber_${this.streamId}_${Date.now()}`;\n\n    // Audio mixer reference (will be set externally)\n    this.audioMixer = null;\n  }\n\n  /**\n   * Start the subscriber\n   */\n  async start() {\n    if (this.isStarted) {\n      throw new Error(\"Subscriber already started\");\n    }\n\n    try {\n      console.log(\"Starting subscriber:\", this.subscriberId);\n      this.emit(\"starting\", { subscriber: this });\n      this._updateConnectionStatus(\"connecting\");\n\n      const channel = new MessageChannel();\n\n      await this._loadPolyfill();\n      await this._initWorker(channel.port2);\n      await this._initAudioSystem(channel.port1);\n      this._initVideoSystem();\n\n      this.isStarted = true;\n      this._updateConnectionStatus(\"connected\");\n      this.emit(\"started\", { subscriber: this });\n    } catch (error) {\n      this._updateConnectionStatus(\"failed\");\n      this.emit(\"error\", { subscriber: this, error, action: \"start\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Stop the subscriber\n   */\n  stop() {\n    if (!this.isStarted) {\n      return;\n    }\n\n    try {\n      this.emit(\"stopping\", { subscriber: this });\n\n      // Remove from audio mixer\n      if (this.audioMixer) {\n        this.audioMixer.removeSubscriber(this.subscriberId);\n      }\n\n      // Terminate worker\n      if (this.worker) {\n        this.worker.terminate();\n        this.worker = null;\n      }\n\n      // Emit stream removal event for app integration\n      if (this.mediaStream) {\n        this.emit(\"streamRemoved\", {\n          streamId: this.streamId,\n          subscriberId: this.subscriberId,\n          roomId: this.roomId\n        });\n      }\n\n      // Close video components\n      this._cleanupVideoSystem();\n\n      // Clear references\n      this.audioWorkletNode = null;\n      this.mediaStream = null;\n\n      this.isStarted = false;\n      this._updateConnectionStatus(\"disconnected\");\n      this.emit(\"stopped\", { subscriber: this });\n    } catch (error) {\n      this.emit(\"error\", { subscriber: this, error, action: \"stop\" });\n    }\n  }\n\n  /**\n   * Toggle audio on/off\n   */\n  async toggleAudio() {\n    if (!this.isStarted || !this.worker) {\n      throw new Error(\"Subscriber not started\");\n    }\n\n    try {\n      this.worker.postMessage({ type: \"toggleAudio\" });\n      this.isAudioEnabled = !this.isAudioEnabled;\n\n      this.emit(\"audioToggled\", {\n        subscriber: this,\n        enabled: this.isAudioEnabled,\n      });\n\n      return this.isAudioEnabled;\n    } catch (error) {\n      this.emit(\"error\", { subscriber: this, error, action: \"toggleAudio\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Set audio mixer reference\n   */\n  setAudioMixer(audioMixer) {\n    this.audioMixer = audioMixer;\n  }\n\n  /**\n   * Get subscriber info\n   */\n  getInfo() {\n    return {\n      subscriberId: this.subscriberId,\n      streamId: this.streamId,\n      roomId: this.roomId,\n      host: this.host,\n      isOwnStream: this.isOwnStream,\n      isStarted: this.isStarted,\n      isAudioEnabled: this.isAudioEnabled,\n      connectionStatus: this.connectionStatus,\n    };\n  }\n\n  /**\n   * Load MediaStreamTrackGenerator polyfill if needed\n   */\n  async _loadPolyfill() {\n    if (!window.MediaStreamTrackGenerator) {\n      try {\n        await import(this.mstgPolyfillUrl);\n      } catch (error) {\n        console.warn(\"Failed to load MSTG polyfill:\", error);\n      }\n    }\n  }\n\n  /**\n   * Initialize media worker\n   */\n  async _initWorker(channelPort) {\n    try {\n      this.worker = new Worker(`${this.mediaWorkerUrl}?t=${Date.now()}`, {\n        type: \"module\",\n      });\n\n      this.worker.onmessage = (e) => this._handleWorkerMessage(e);\n      this.worker.onerror = (error) => {\n        this.emit(\"error\", {\n          subscriber: this,\n          error: new Error(`Media Worker error: ${error.message}`),\n          action: \"workerError\",\n        });\n      };\n\n      const mediaUrl = `wss://sfu-adaptive-bitrate.ermis-network.workers.dev/meeting/${this.roomId}/${this.streamId}`;\n      console.log(\"try to init worker with url:\", mediaUrl);\n\n      this.worker.postMessage(\n        {\n          type: \"init\",\n          data: { mediaUrl },\n          port: channelPort,\n          quality: \"360p\", // default quality\n        },\n        [channelPort]\n      );\n    } catch (error) {\n      throw new Error(`Worker initialization failed: ${error.message}`);\n    }\n  }\n\n  switchBitrate(quality) {\n    // 360p | 720p\n    if (this.worker) {\n      this.worker.postMessage({\n        type: \"switchBitrate\",\n        quality,\n      });\n    }\n  }\n\n  /**\n   * Initialize audio system with mixer\n   */\n  async _initAudioSystem(channelPort) {\n    try {\n      // Skip audio setup for own stream to prevent echo\n      if (this.isOwnStream) {\n        this.emit(\"audioSkipped\", {\n          subscriber: this,\n          reason: \"Own stream - preventing echo\",\n        });\n        return;\n      }\n\n      // Audio mixer should be set externally before starting\n      if (this.audioMixer) {\n        console.warn(\n          \"Adding subscriber to audio mixer in new subscriber:\",\n          this.subscriberId\n        );\n        this.audioWorkletNode = await this.audioMixer.addSubscriber(\n          this.subscriberId,\n          this.audioWorkletUrl,\n          this.isOwnStream,\n          channelPort\n        );\n\n        if (this.audioWorkletNode) {\n          this.audioWorkletNode.port.onmessage = (event) => {\n            const { type, bufferMs, isPlaying, newBufferSize } = event.data;\n            this.emit(\"audioStatus\", {\n              subscriber: this,\n              type,\n              bufferMs,\n              isPlaying,\n              newBufferSize,\n            });\n          };\n        }\n      }\n\n      this.emit(\"audioInitialized\", { subscriber: this });\n    } catch (error) {\n      throw new Error(`Audio system initialization failed: ${error.message}`);\n    }\n  }\n\n  /**\n   * Initialize video system\n   */\n  _initVideoSystem() {\n    try {\n      if (typeof MediaStreamTrackGenerator === \"function\") {\n        this.videoGenerator = new MediaStreamTrackGenerator({\n          kind: \"video\",\n        });\n      } else {\n        throw new Error(\n          \"MediaStreamTrackGenerator not supported in this browser\"\n        );\n      }\n\n      this.videoWriter = this.videoGenerator.writable;\n\n      // Create MediaStream with video track only\n      this.mediaStream = new MediaStream([this.videoGenerator]);\n\n      // Emit remote stream ready event for app integration\n      this.emit(\"remoteStreamReady\", {\n        stream: this.mediaStream,\n        streamId: this.streamId,\n        subscriberId: this.subscriberId,\n        roomId: this.roomId,\n        isOwnStream: this.isOwnStream\n      });\n      this.emit(\"videoInitialized\", { subscriber: this });\n    } catch (error) {\n      throw new Error(`Video system initialization failed: ${error.message}`);\n    }\n  }\n\n  /**\n   * Cleanup video system\n   */\n  _cleanupVideoSystem() {\n    try {\n      // Close video writer\n      if (this.videoWriter) {\n        try {\n          const writer = this.videoWriter.getWriter();\n          writer.releaseLock();\n        } catch (e) {\n          // Writer might already be released\n        }\n        this.videoWriter = null;\n      }\n\n      // Stop video generator\n      if (this.videoGenerator) {\n        try {\n          if (this.videoGenerator.stop) {\n            this.videoGenerator.stop();\n          }\n        } catch (e) {\n          // Generator might already be stopped\n        }\n        this.videoGenerator = null;\n      }\n    } catch (error) {\n      console.warn(\"Error cleaning video system:\", error);\n    }\n  }\n\n  /**\n   * Handle messages from media worker\n   */\n  _handleWorkerMessage(e) {\n    const {\n      type,\n      frame,\n      message,\n      channelData,\n      sampleRate,\n      numberOfChannels,\n      timeStamp,\n      subscriberId,\n      audioEnabled,\n    } = e.data;\n\n    switch (type) {\n      case \"videoData\":\n        this._handleVideoData(frame);\n        break;\n\n      case \"status\":\n        this.emit(\"status\", { subscriber: this, message, isError: false });\n        break;\n\n      case \"error\":\n        this.emit(\"status\", { subscriber: this, message, isError: true });\n        this.emit(\"error\", {\n          subscriber: this,\n          error: new Error(message),\n          action: \"workerMessage\",\n        });\n        break;\n\n      case \"audio-toggled\":\n        this.emit(\"audioToggled\", {\n          subscriber: this,\n          enabled: audioEnabled,\n        });\n        break;\n\n      case \"skipping\":\n        this.emit(\"frameSkipped\", { subscriber: this });\n        break;\n\n      case \"resuming\":\n        this.emit(\"frameResumed\", { subscriber: this });\n        break;\n\n      default:\n        console.log(`Unknown worker message type: ${type}`, e.data);\n    }\n  }\n\n  /**\n   * Handle video data from worker\n   */\n  async _handleVideoData(frame) {\n    if (this.videoWriter && frame) {\n      try {\n        const writer = this.videoWriter.getWriter();\n        await writer.write(frame);\n        writer.releaseLock();\n\n        this.emit(\"videoFrameProcessed\", { subscriber: this });\n      } catch (error) {\n        this.emit(\"error\", {\n          subscriber: this,\n          error: new Error(`Video write error: ${error.message}`),\n          action: \"videoWrite\",\n        });\n      }\n    }\n  }\n\n  /**\n   * Update connection status\n   */\n  _updateConnectionStatus(status) {\n    if (this.connectionStatus === status) return;\n\n    const previousStatus = this.connectionStatus;\n    this.connectionStatus = status;\n\n    this.emit(\"connectionStatusChanged\", {\n      subscriber: this,\n      status,\n      previousStatus,\n    });\n  }\n}\n\nexport default Subscriber;\n","/**\n * AudioMixer Class for combining multiple subscriber audio streams\n * Provides centralized audio mixing and playback management\n */\nclass AudioMixer {\n  constructor(config = {}) {\n    this.audioContext = null;\n    this.mixerNode = null;\n    this.outputDestination = null;\n    this.subscriberNodes = new Map(); // subscriberId -> AudioWorkletNode\n    this.isInitialized = false;\n    this.outputAudioElement = null;\n\n    // Configuration\n    this.masterVolume = config.masterVolume || 0.8;\n    this.sampleRate = config.sampleRate || 48000;\n    this.bufferSize = config.bufferSize || 256;\n    this.enableEchoCancellation = config.enableEchoCancellation !== false;\n    this.debug = config.debug || false;\n  }\n\n  /**\n   * Initialize the audio mixer\n   */\n  async initialize() {\n    if (this.isInitialized) {\n      this._debug(\"AudioMixer already initialized\");\n      return;\n    }\n\n    try {\n      // Create shared AudioContext\n      this.audioContext = new (window.AudioContext ||\n        window.webkitAudioContext)({\n        sampleRate: this.sampleRate,\n        latencyHint: \"interactive\",\n      });\n\n      // Resume context if suspended (required by some browsers)\n      if (this.audioContext.state === \"suspended\") {\n        await this.audioContext.resume();\n      }\n\n      // Create mixer node (GainNode to combine audio)\n      this.mixerNode = this.audioContext.createGain();\n      this.mixerNode.gain.value = this.masterVolume;\n\n      // Create output destination\n      this.outputDestination = this.audioContext.createMediaStreamDestination();\n      this.mixerNode.connect(this.outputDestination);\n\n      // Create hidden audio element for mixed audio playback\n      this.outputAudioElement = document.createElement(\"audio\");\n      this.outputAudioElement.autoplay = true;\n      this.outputAudioElement.style.display = \"none\";\n      this.outputAudioElement.setAttribute(\"playsinline\", \"\");\n\n      // Disable echo cancellation on output element\n      if (this.enableEchoCancellation) {\n        this.outputAudioElement.setAttribute(\"webkitAudioContext\", \"true\");\n      }\n\n      document.body.appendChild(this.outputAudioElement);\n\n      this.isInitialized = true;\n      this._debug(\"AudioMixer initialized successfully\");\n\n      // Setup error handlers\n      this._setupErrorHandlers();\n    } catch (error) {\n      console.error(\"Failed to initialize AudioMixer:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Add a subscriber's audio stream to the mixer\n   */\n  async addSubscriber(\n    subscriberId,\n    audioWorkletUrl,\n    isOwnAudio = false,\n    channelWorkletPort\n  ) {\n    console.warn(`Adding subscriber ${subscriberId} to audio mixer`);\n    if (!this.isInitialized) {\n      await this.initialize();\n    }\n\n    // Skip adding own audio to prevent echo/feedback\n    if (isOwnAudio) {\n      this._debug(\n        `Skipping own audio for subscriber ${subscriberId} to prevent echo`\n      );\n      return null;\n    }\n\n    // Check if subscriber already exists\n    if (this.subscriberNodes.has(subscriberId)) {\n      this._debug(`Subscriber ${subscriberId} already exists in mixer`);\n      return this.subscriberNodes.get(subscriberId);\n    }\n\n    try {\n      // Load audio worklet if not already loaded\n      await this._loadAudioWorklet(audioWorkletUrl);\n\n      // Create AudioWorkletNode for this subscriber\n      const workletNode = new AudioWorkletNode(\n        this.audioContext,\n        \"jitter-resistant-processor\",\n        {\n          numberOfInputs: 0,\n          numberOfOutputs: 1,\n          outputChannelCount: [2],\n        }\n      );\n\n      // Connect the port if provided\n      if (channelWorkletPort) {\n        workletNode.port.postMessage(\n          { type: \"connectWorker\", port: channelWorkletPort },\n          [channelWorkletPort]\n        );\n      }\n\n      // Create gain node for individual volume control\n      const gainNode = this.audioContext.createGain();\n      gainNode.gain.value = 1.0;\n\n      // Connect: workletNode -> gainNode -> mixerNode\n      workletNode.connect(gainNode);\n      gainNode.connect(this.mixerNode);\n\n      // Store reference with gain node\n      this.subscriberNodes.set(subscriberId, {\n        workletNode,\n        gainNode,\n        isActive: true,\n        addedAt: Date.now(),\n      });\n\n      // Update audio element source with mixed stream\n      this._updateOutputAudio();\n\n      // Setup message handler\n      this._setupWorkletMessageHandler(subscriberId, workletNode);\n\n      this._debug(`Added subscriber ${subscriberId} to audio mixer`);\n      return workletNode;\n    } catch (error) {\n      console.error(\n        `Failed to add subscriber ${subscriberId} to mixer:`,\n        error\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Remove a subscriber from the mixer\n   */\n  removeSubscriber(subscriberId) {\n    const subscriberData = this.subscriberNodes.get(subscriberId);\n    if (!subscriberData) {\n      this._debug(`Subscriber ${subscriberId} not found in mixer`);\n      return false;\n    }\n\n    try {\n      const { workletNode, gainNode } = subscriberData;\n\n      // Disconnect nodes\n      workletNode.disconnect();\n      gainNode.disconnect();\n\n      // Remove from map\n      this.subscriberNodes.delete(subscriberId);\n\n      // Update audio element if no more subscribers\n      this._updateOutputAudio();\n\n      this._debug(`Removed subscriber ${subscriberId} from audio mixer`);\n      return true;\n    } catch (error) {\n      console.error(`Failed to remove subscriber ${subscriberId}:`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Set volume for a specific subscriber\n   */\n  setSubscriberVolume(subscriberId, volume) {\n    const subscriberData = this.subscriberNodes.get(subscriberId);\n    if (!subscriberData) {\n      this._debug(`Subscriber ${subscriberId} not found for volume adjustment`);\n      return false;\n    }\n\n    try {\n      const normalizedVolume = Math.max(0, Math.min(1, volume));\n      subscriberData.gainNode.gain.value = normalizedVolume;\n\n      this._debug(\n        `Set volume for subscriber ${subscriberId}: ${normalizedVolume}`\n      );\n      return true;\n    } catch (error) {\n      console.error(\n        `Failed to set volume for subscriber ${subscriberId}:`,\n        error\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Mute/unmute a specific subscriber\n   */\n  setSubscriberMuted(subscriberId, muted) {\n    return this.setSubscriberVolume(subscriberId, muted ? 0 : 1);\n  }\n\n  /**\n   * Set master volume for all mixed audio\n   */\n  setMasterVolume(volume) {\n    if (!this.mixerNode) return false;\n\n    try {\n      const normalizedVolume = Math.max(0, Math.min(1, volume));\n      this.mixerNode.gain.value = normalizedVolume;\n      this.masterVolume = normalizedVolume;\n\n      this._debug(`Set master volume: ${normalizedVolume}`);\n      return true;\n    } catch (error) {\n      console.error(\"Failed to set master volume:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Get mixed audio output stream\n   */\n  getOutputMediaStream() {\n    if (!this.outputDestination) {\n      this._debug(\"Output destination not initialized\");\n      return null;\n    }\n    return this.outputDestination.stream;\n  }\n\n  /**\n   * Get current mixer statistics\n   */\n  getStats() {\n    return {\n      isInitialized: this.isInitialized,\n      subscriberCount: this.subscriberNodes.size,\n      masterVolume: this.masterVolume,\n      audioContextState: this.audioContext?.state || \"not-initialized\",\n      sampleRate: this.audioContext?.sampleRate || 0,\n      subscribers: Array.from(this.subscriberNodes.entries()).map(\n        ([id, data]) => ({\n          id,\n          volume: data.gainNode.gain.value,\n          isActive: data.isActive,\n          addedAt: data.addedAt,\n        })\n      ),\n    };\n  }\n\n  /**\n   * Get list of subscriber IDs\n   */\n  getSubscriberIds() {\n    return Array.from(this.subscriberNodes.keys());\n  }\n\n  /**\n   * Check if subscriber exists in mixer\n   */\n  hasSubscriber(subscriberId) {\n    return this.subscriberNodes.has(subscriberId);\n  }\n\n  /**\n   * Suspend audio context (for battery saving)\n   */\n  async suspend() {\n    if (this.audioContext && this.audioContext.state === \"running\") {\n      await this.audioContext.suspend();\n      this._debug(\"Audio context suspended\");\n    }\n  }\n\n  /**\n   * Resume audio context\n   */\n  async resume() {\n    if (this.audioContext && this.audioContext.state === \"suspended\") {\n      await this.audioContext.resume();\n      this._debug(\"Audio context resumed\");\n    }\n  }\n\n  /**\n   * Cleanup mixer resources\n   */\n  async cleanup() {\n    this._debug(\"Starting AudioMixer cleanup\");\n\n    try {\n      // Remove audio element\n      if (this.outputAudioElement) {\n        this.outputAudioElement.srcObject = null;\n        if (this.outputAudioElement.parentNode) {\n          this.outputAudioElement.parentNode.removeChild(\n            this.outputAudioElement\n          );\n        }\n        this.outputAudioElement = null;\n      }\n\n      // Disconnect all subscribers\n      for (const [subscriberId, subscriberData] of this.subscriberNodes) {\n        try {\n          const { workletNode, gainNode } = subscriberData;\n          workletNode.disconnect();\n          gainNode.disconnect();\n        } catch (error) {\n          console.error(\n            `Error disconnecting subscriber ${subscriberId}:`,\n            error\n          );\n        }\n      }\n      this.subscriberNodes.clear();\n\n      // Disconnect mixer components\n      if (this.mixerNode) {\n        this.mixerNode.disconnect();\n        this.mixerNode = null;\n      }\n\n      if (this.outputDestination) {\n        this.outputDestination = null;\n      }\n\n      // Close audio context\n      if (this.audioContext && this.audioContext.state !== \"closed\") {\n        await this.audioContext.close();\n      }\n\n      // Reset state\n      this.audioContext = null;\n      this.isInitialized = false;\n\n      this._debug(\"AudioMixer cleanup completed\");\n    } catch (error) {\n      console.error(\"Error during AudioMixer cleanup:\", error);\n    }\n  }\n\n  /**\n   * Load audio worklet module\n   */\n  async _loadAudioWorklet(audioWorkletUrl) {\n    console.warn(\"Loading audio worklet from:\", audioWorkletUrl);\n    try {\n      await this.audioContext.audioWorklet.addModule(audioWorkletUrl);\n      this._debug(\"Audio worklet loaded:\", audioWorkletUrl);\n    } catch (error) {\n      // Worklet might already be loaded\n      if (!error.message.includes(\"already been loaded\")) {\n        this._debug(\"Audio worklet load warning:\", error.message);\n      }\n    }\n  }\n\n  /**\n   * Update output audio element\n   */\n  _updateOutputAudio() {\n    if (!this.outputAudioElement || !this.outputDestination) return;\n\n    try {\n      if (this.subscriberNodes.size > 0) {\n        this.outputAudioElement.srcObject = this.outputDestination.stream;\n      } else {\n        this.outputAudioElement.srcObject = null;\n      }\n    } catch (error) {\n      console.error(\"Failed to update output audio:\", error);\n    }\n  }\n\n  /**\n   * Setup message handler for worklet node\n   */\n  _setupWorkletMessageHandler(subscriberId, workletNode) {\n    workletNode.port.onmessage = (event) => {\n      const { type, bufferMs, isPlaying, newBufferSize, error } = event.data;\n\n      switch (type) {\n        case \"bufferStatus\":\n          this._debug(\n            `Subscriber ${subscriberId} buffer: ${bufferMs}ms, playing: ${isPlaying}`\n          );\n          break;\n        case \"bufferSizeChanged\":\n          this._debug(\n            `Subscriber ${subscriberId} buffer size changed: ${newBufferSize}`\n          );\n          break;\n        case \"error\":\n          console.error(`Subscriber ${subscriberId} worklet error:`, error);\n          break;\n        default:\n          this._debug(\n            `Subscriber ${subscriberId} worklet message:`,\n            event.data\n          );\n      }\n    };\n\n    workletNode.port.onerror = (error) => {\n      console.error(`Subscriber ${subscriberId} worklet port error:`, error);\n    };\n  }\n\n  /**\n   * Setup error handlers for audio context\n   */\n  _setupErrorHandlers() {\n    if (!this.audioContext) return;\n\n    this.audioContext.onstatechange = () => {\n      this._debug(`Audio context state changed: ${this.audioContext.state}`);\n\n      if (this.audioContext.state === \"interrupted\") {\n        console.warn(\"Audio context was interrupted\");\n      }\n    };\n\n    // Listen for audio context suspend/resume events\n    document.addEventListener(\"visibilitychange\", async () => {\n      if (document.hidden) {\n        // Page hidden - optionally suspend context\n        // await this.suspend();\n      } else {\n        // Page visible - resume context if needed\n        await this.resume();\n      }\n    });\n  }\n\n  /**\n   * Debug logging\n   */\n  _debug(...args) {\n    if (this.debug) {\n      console.log(\"[AudioMixer]\", ...args);\n    }\n  }\n\n  /**\n   * Sleep utility for delays\n   */\n  _sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n}\n\nexport default AudioMixer;\n","import EventEmitter from \"../events/EventEmitter.js\";\nimport Participant from \"./Participant.js\";\n\nimport Publisher from \"../media/Publisher.js\";\nimport Subscriber from \"../media/Subscriber.js\";\nimport AudioMixer from \"../media/AudioMixer.js\";\n\n/**\n * Represents a meeting room\n */\nclass Room extends EventEmitter {\n  constructor(config) {\n    super();\n\n    this.id = config.id;\n    this.name = config.name;\n    this.code = config.code;\n    this.type = config.type || \"main\"; // 'main', 'breakout'\n    this.parentRoomId = config.parentRoomId || null;\n    this.ownerId = config.ownerId;\n    this.isActive = false;\n\n    // Configuration\n    this.apiClient = config.apiClient;\n    this.mediaConfig = config.mediaConfig;\n\n    // Participants management\n    this.participants = new Map(); // userId -> Participant\n    this.localParticipant = null;\n\n    // Sub rooms (for main rooms only)\n    this.subRooms = new Map(); // subRoomId -> Room\n\n    // Media management\n    this.audioMixer = null;\n    this.pinnedParticipant = null;\n\n    // Connection info\n    this.membershipId = null;\n    this.streamId = null;\n\n    // Chat management\n    this.messages = [];\n    this.typingUsers = new Map();\n  }\n\n  /**\n   * Join this room\n   */\n  async join(userId) {\n    if (this.isActive) {\n      throw new Error(\"Already joined this room\");\n    }\n\n    try {\n      this.emit(\"joining\", { room: this });\n      console.log(\"Joining room with code\", this.code);\n      // Join via API\n      const joinResponse = await this.apiClient.joinRoom(this.code);\n\n      // Store connection info\n      this.id = joinResponse.room_id;\n      this.membershipId = joinResponse.id;\n      this.streamId = joinResponse.stream_id;\n\n      // Get room details and members\n      const roomDetails = await this.apiClient.getRoomById(\n        joinResponse.room_id\n      );\n      console.log(\"Joined room, details:\", roomDetails);\n\n      // Update room info\n      this._updateFromApiData(roomDetails.room);\n\n      // Setup participants\n      await this._setupParticipants(roomDetails.participants, userId);\n\n      // Setup media connections\n      await this._setupMediaConnections();\n\n      this.isActive = true;\n      this.emit(\"joined\", { room: this, participants: this.participants });\n\n      return {\n        room: this,\n        localParticipant: this.localParticipant,\n        participants: Array.from(this.participants.values()),\n      };\n    } catch (error) {\n      this.emit(\"error\", { room: this, error, action: \"join\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Leave this room\n   */\n  async leave() {\n    if (!this.isActive) {\n      return;\n    }\n\n    try {\n      this.emit(\"leaving\", { room: this });\n\n      // Cleanup media connections\n      await this._cleanupMediaConnections();\n\n      // Cleanup participants\n      this._cleanupParticipants();\n\n      // Leave via API\n      if (this.membershipId) {\n        await this.apiClient.leaveRoom(this.id, this.membershipId);\n      }\n\n      this.isActive = false;\n      this.emit(\"left\", { room: this });\n    } catch (error) {\n      this.emit(\"error\", { room: this, error, action: \"leave\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Create a sub room (main room only)\n   */\n  async createSubRoom(config) {\n    if (this.type !== \"main\") {\n      throw new Error(\"Only main rooms can create sub rooms\");\n    }\n\n    try {\n      this.emit(\"creatingSubRoom\", { room: this, config });\n\n      // Create sub room via API\n      const subRoomData = await this.apiClient.createSubRoom(\n        this.id,\n        config.name,\n        config.type || \"breakout\"\n      );\n\n      // Create sub room instance\n      const subRoom = new Room({\n        id: subRoomData.id,\n        name: subRoomData.room_name,\n        code: subRoomData.room_code,\n        type: config.type || \"breakout\",\n        parentRoomId: this.id,\n        ownerId: subRoomData.user_id,\n        apiClient: this.apiClient,\n        mediaConfig: this.mediaConfig,\n      });\n\n      // Store sub room\n      this.subRooms.set(subRoom.id, subRoom);\n\n      this.emit(\"subRoomCreated\", { room: this, subRoom });\n\n      return subRoom;\n    } catch (error) {\n      this.emit(\"error\", { room: this, error, action: \"createSubRoom\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Get all sub rooms\n   */\n  async getSubRooms() {\n    if (this.type !== \"main\") {\n      return [];\n    }\n\n    try {\n      const subRoomsData = await this.apiClient.getSubRooms(this.id);\n\n      // Update local sub rooms map\n      for (const subRoomData of subRoomsData) {\n        if (!this.subRooms.has(subRoomData.id)) {\n          const subRoom = new Room({\n            id: subRoomData.id,\n            name: subRoomData.room_name,\n            code: subRoomData.room_code,\n            type: subRoomData.room_type,\n            parentRoomId: this.id,\n            ownerId: subRoomData.user_id,\n            apiClient: this.apiClient,\n            mediaConfig: this.mediaConfig,\n          });\n\n          this.subRooms.set(subRoom.id, subRoom);\n        }\n      }\n\n      return Array.from(this.subRooms.values());\n    } catch (error) {\n      this.emit(\"error\", { room: this, error, action: \"getSubRooms\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Switch to a sub room\n   */\n  async switchToSubRoom(subRoomCode) {\n    try {\n      this.emit(\"switchingToSubRoom\", { room: this, subRoomCode });\n\n      // Switch via API\n      const switchResponse = await this.apiClient.switchToSubRoom(\n        this.id,\n        subRoomCode\n      );\n\n      // Cleanup current media connections but keep participants\n      await this._cleanupMediaConnections();\n\n      // Update connection info for new sub room\n      this.membershipId = switchResponse.id;\n      this.streamId = switchResponse.stream_id;\n\n      // Setup media connections for sub room\n      await this._setupMediaConnections();\n\n      this.emit(\"switchedToSubRoom\", {\n        room: this,\n        subRoomCode,\n        response: switchResponse,\n      });\n\n      return switchResponse;\n    } catch (error) {\n      this.emit(\"error\", { room: this, error, action: \"switchToSubRoom\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Return to main room from sub room\n   */\n  async returnToMainRoom() {\n    if (!this.parentRoomId) {\n      throw new Error(\"This is not a sub room\");\n    }\n\n    try {\n      this.emit(\"returningToMainRoom\", { room: this });\n\n      // Leave current sub room\n      await this.leave();\n\n      // The parent should handle rejoining main room\n      this.emit(\"returnedToMainRoom\", { room: this });\n    } catch (error) {\n      this.emit(\"error\", { room: this, error, action: \"returnToMainRoom\" });\n      throw error;\n    }\n  }\n\n  async sendMessage(text, metadata = {}) {\n    if (!this.isActive) {\n      throw new Error(\"Cannot send message: room is not active\");\n    }\n\n    if (!this.localParticipant?.publisher) {\n      throw new Error(\"Cannot send message: publisher not available\");\n    }\n\n    if (!text || typeof text !== \"string\" || text.trim().length === 0) {\n      throw new Error(\"Message text is required and must be a non-empty string\");\n    }\n\n    try {\n      const messageId = this._generateMessageId();\n      const message = {\n        id: messageId,\n        text: text.trim(),\n        senderId: this.localParticipant.userId,\n        senderName: metadata.senderName || this.localParticipant.userId,\n        roomId: this.id,\n        timestamp: Date.now(),\n        metadata: metadata.customData || {},\n      };\n\n      const messageEvent = {\n        type: \"message\",\n        ...message,\n      };\n\n      await this.localParticipant.publisher.sendEvent(messageEvent);\n\n      this.messages.push(message);\n\n      this.emit(\"messageSent\", {\n        room: this,\n        message,\n      });\n\n      return message;\n    } catch (error) {\n      this.emit(\"error\", { room: this, error, action: \"sendMessage\" });\n      throw error;\n    }\n  }\n\n  async deleteMessage(messageId) {\n    if (!this.isActive) {\n      throw new Error(\"Cannot delete message: room is not active\");\n    }\n\n    if (!this.localParticipant?.publisher) {\n      throw new Error(\"Cannot delete message: publisher not available\");\n    }\n\n    try {\n      const deleteEvent = {\n        type: \"messageDelete\",\n        messageId,\n        senderId: this.localParticipant.userId,\n        roomId: this.id,\n        timestamp: Date.now(),\n      };\n\n      await this.localParticipant.publisher.sendEvent(deleteEvent);\n\n      this.messages = this.messages.filter((m) => m.id !== messageId);\n\n      this.emit(\"messageDeleted\", {\n        room: this,\n        messageId,\n      });\n\n      return true;\n    } catch (error) {\n      this.emit(\"error\", { room: this, error, action: \"deleteMessage\" });\n      throw error;\n    }\n  }\n\n  async updateMessage(messageId, newText, metadata = {}) {\n    if (!this.isActive) {\n      throw new Error(\"Cannot update message: room is not active\");\n    }\n\n    if (!this.localParticipant?.publisher) {\n      throw new Error(\"Cannot update message: publisher not available\");\n    }\n\n    if (!newText || typeof newText !== \"string\" || newText.trim().length === 0) {\n      throw new Error(\"New message text is required and must be a non-empty string\");\n    }\n\n    try {\n      const updateEvent = {\n        type: \"messageUpdate\",\n        messageId,\n        text: newText.trim(),\n        senderId: this.localParticipant.userId,\n        roomId: this.id,\n        timestamp: Date.now(),\n        metadata: metadata.customData || {},\n      };\n\n      await this.localParticipant.publisher.sendEvent(updateEvent);\n\n      const messageIndex = this.messages.findIndex((m) => m.id === messageId);\n      if (messageIndex !== -1) {\n        this.messages[messageIndex].text = newText.trim();\n        this.messages[messageIndex].updatedAt = Date.now();\n        this.messages[messageIndex].metadata = {\n          ...this.messages[messageIndex].metadata,\n          ...updateEvent.metadata,\n        };\n      }\n\n      this.emit(\"messageUpdated\", {\n        room: this,\n        messageId,\n        text: newText.trim(),\n      });\n\n      return true;\n    } catch (error) {\n      this.emit(\"error\", { room: this, error, action: \"updateMessage\" });\n      throw error;\n    }\n  }\n\n  async sendTypingIndicator(isTyping = true) {\n    if (!this.isActive) {\n      return;\n    }\n\n    if (!this.localParticipant?.publisher) {\n      return;\n    }\n\n    try {\n      const typingEvent = {\n        type: isTyping ? \"typingStart\" : \"typingStop\",\n        userId: this.localParticipant.userId,\n        roomId: this.id,\n        timestamp: Date.now(),\n      };\n\n      await this.localParticipant.publisher.sendEvent(typingEvent);\n    } catch (error) {\n      console.error(\"Failed to send typing indicator:\", error);\n    }\n  }\n\n  getMessages(limit = 100) {\n    return this.messages.slice(-limit);\n  }\n\n  getTypingUsers() {\n    return Array.from(this.typingUsers.values());\n  }\n\n  clearMessages() {\n    this.messages = [];\n  }\n\n  /**\n   * Add a participant to the room\n   */\n  addParticipant(memberData, userId) {\n    const isLocal = memberData.user_id === userId;\n\n    const participant = new Participant({\n      userId: memberData.user_id,\n      streamId: memberData.stream_id,\n      membershipId: memberData.id,\n      role: memberData.role,\n      roomId: this.id,\n      isLocal,\n    });\n\n    // Setup participant events\n    this._setupParticipantEvents(participant);\n\n    this.participants.set(participant.userId, participant);\n\n    if (isLocal) {\n      this.localParticipant = participant;\n    }\n\n    this.emit(\"participantAdded\", { room: this, participant });\n\n    return participant;\n  }\n\n  /**\n   * Remove a participant from the room\n   */\n  removeParticipant(userId) {\n    const participant = this.participants.get(userId);\n    if (!participant) return null;\n\n    // Cleanup participant\n    participant.cleanup();\n\n    // Remove from maps\n    this.participants.delete(userId);\n\n    if (this.localParticipant?.userId === userId) {\n      this.localParticipant = null;\n    }\n\n    if (this.pinnedParticipant?.userId === userId) {\n      this.pinnedParticipant = null;\n    }\n\n    this.emit(\"participantRemoved\", { room: this, participant });\n\n    return participant;\n  }\n\n  /**\n   * Get a participant by user ID\n   */\n  getParticipant(userId) {\n    return this.participants.get(userId);\n  }\n\n  /**\n   * Get all participants\n   */\n  getParticipants() {\n    return Array.from(this.participants.values());\n  }\n\n  /**\n   * Pin a participant's video\n   */\n  // pinParticipant(userId) {\n  //   const participant = this.participants.get(userId);\n  //   if (!participant) return false;\n\n  //   // Unpin current participant\n  //   if (this.pinnedParticipant) {\n  //     this.pinnedParticipant.isPinned = false;\n  //   }\n\n  //   // Pin new participant\n  //   participant.isPinned = true;\n  //   this.pinnedParticipant = participant;\n\n  //   this.emit(\"participantPinned\", { room: this, participant });\n\n  //   return true;\n  // }\n\n  pinParticipant(userId) {\n    const participant = this.participants.get(userId);\n    if (!participant) return false;\n\n    // Unpin current participant và move về sidebar\n    if (this.pinnedParticipant && this.pinnedParticipant !== participant) {\n      this.pinnedParticipant.isPinned = false;\n    }\n\n    // Pin new participant và move lên main\n    participant.isPinned = true;\n    this.pinnedParticipant = participant;\n\n    this.emit(\"participantPinned\", { room: this, participant });\n\n    return true;\n  }\n\n  /**\n   * Unpin currently pinned participant\n   */\n  // unpinParticipant() {\n  //   if (!this.pinnedParticipant) return false;\n\n  //   this.pinnedParticipant.isPinned = false;\n  //   const unpinnedParticipant = this.pinnedParticipant;\n  //   this.pinnedParticipant = null;\n\n  //   this.emit(\"participantUnpinned\", {\n  //     room: this,\n  //     participant: unpinnedParticipant,\n  //   });\n\n  //   return true;\n  // }\n\n  unpinParticipant() {\n    if (!this.pinnedParticipant) return false;\n\n    this.pinnedParticipant.isPinned = false;\n    const unpinnedParticipant = this.pinnedParticipant;\n\n    this.pinnedParticipant = null;\n\n    // Auto-pin local participant nếu có\n    if (this.localParticipant) {\n      this.pinParticipant(this.localParticipant.userId);\n    }\n\n    this.emit(\"participantUnpinned\", {\n      room: this,\n      participant: unpinnedParticipant,\n    });\n\n    return true;\n  }\n\n  /**\n   * Get room info\n   */\n  getInfo() {\n    return {\n      id: this.id,\n      name: this.name,\n      code: this.code,\n      type: this.type,\n      parentRoomId: this.parentRoomId,\n      ownerId: this.ownerId,\n      isActive: this.isActive,\n      participantCount: this.participants.size,\n      subRoomCount: this.subRooms.size,\n      pinnedParticipant: this.pinnedParticipant?.userId || null,\n    };\n  }\n\n  /**\n   * Setup participants from API data\n   */\n  async _setupParticipants(participantsData, userId) {\n    for (const participantData of participantsData) {\n      this.addParticipant(participantData, userId);\n    }\n  }\n\n  /**\n   * Setup media connections for all participants\n   */\n  async _setupMediaConnections() {\n    // Initialize audio mixer\n    if (!this.audioMixer) {\n      this.audioMixer = new AudioMixer();\n      await this.audioMixer.initialize();\n    }\n\n    // Setup publisher for local participant\n    if (this.localParticipant) {\n      await this._setupLocalPublisher();\n    }\n\n    // Setup subscribers for remote participants\n    for (const participant of this.participants.values()) {\n      if (!participant.isLocal) {\n        await this._setupRemoteSubscriber(participant);\n      }\n    }\n\n    // Setup stream event forwarding\n    this._setupStreamEventForwarding();\n  }\n\n  /**\n   * Setup publisher for local participant\n   */\n  async _setupLocalPublisher() {\n    if (!this.localParticipant || !this.streamId) return;\n\n    // Video rendering handled by app through stream events\n\n    const publishUrl = `${this.mediaConfig.webtpUrl}/${this.id}/${this.streamId}`;\n    console.log(\"trying to connect webtransport to\", publishUrl);\n\n    const publisher = new Publisher({\n      publishUrl,\n      streamType: \"camera\",\n      streamId: this.streamId,\n      width: 1280,\n      height: 720,\n      framerate: 30,\n      bitrate: 1_500_000,\n      onStatusUpdate: (msg, isError) => {\n        this.localParticipant.setConnectionStatus(\n          isError ? \"failed\" : \"connected\"\n        );\n      },\n      onServerEvent: async (event) => {\n        await this._handleServerEvent(event);\n      },\n    });\n\n    // Setup stream event forwarding\n    publisher.on(\"localStreamReady\", (data) => {\n      this.emit(\"localStreamReady\", {\n        ...data,\n        participant: this.localParticipant.getInfo(),\n        roomId: this.id,\n      });\n    });\n\n    await publisher.startPublishing();\n    this.localParticipant.setPublisher(publisher);\n  }\n\n  /**\n   * Setup subscriber for remote participant\n   */\n  async _setupRemoteSubscriber(participant) {\n    const subscriber = new Subscriber({\n      streamId: participant.streamId,\n      roomId: this.id,\n      host: this.mediaConfig.host,\n      streamOutputEnabled: true,\n      onStatus: (msg, isError) => {\n        participant.setConnectionStatus(isError ? \"failed\" : \"connected\");\n      },\n      audioWorkletUrl: \"workers/audio-worklet1.js\",\n      mstgPolyfillUrl: \"polyfills/MSTG_polyfill.js\",\n    });\n    // Add to audio mixer\n    if (this.audioMixer) {\n      subscriber.setAudioMixer(this.audioMixer);\n    }\n\n    // Setup stream event forwarding\n    subscriber.on(\"remoteStreamReady\", (data) => {\n      this.emit(\"remoteStreamReady\", {\n        ...data,\n        participant: participant.getInfo(),\n        roomId: this.id,\n      });\n    });\n\n    // subscriber.on(\"streamRemoved\", (data) => {\n    //   this.emit(\"streamRemoved\", {\n    //     ...data,\n    //     participant: participant.getInfo(),\n    //     roomId: this.id\n    //   });\n    // });\n\n    await subscriber.start();\n    participant.setSubscriber(subscriber);\n  }\n\n  /**\n   * Handle server events from publisher\n   */\n  async _handleServerEvent(event) {\n    console.log(\"-----Received server event----\", event);\n    if (event.type === \"join\") {\n      const joinedParticipant = event.participant;\n      if (joinedParticipant.user_id === this.localParticipant?.userId) return;\n\n      const participant = this.addParticipant(\n        {\n          user_id: joinedParticipant.user_id,\n          stream_id: joinedParticipant.stream_id,\n          id: joinedParticipant.membership_id,\n          role: joinedParticipant.role,\n        },\n        this.localParticipant?.userId\n      );\n\n      await this._setupRemoteSubscriber(participant);\n    }\n\n    if (event.type === \"leave\") {\n      const participant = this.participants.get(event.participant.user_id);\n      if (participant) {\n        this.removeParticipant(event.participant.user_id);\n\n        if (!this.pinnedParticipant && this.localParticipant) {\n          this.pinParticipant(this.localParticipant.userId);\n        }\n      }\n    }\n\n    if (event.type === \"message\") {\n      const message = {\n        id: event.id,\n        text: event.text,\n        senderId: event.senderId,\n        senderName: event.senderName,\n        roomId: event.roomId,\n        timestamp: event.timestamp,\n        metadata: event.metadata || {},\n      };\n\n      this.messages.push(message);\n\n      const sender = this.getParticipant(event.senderId);\n\n      this.emit(\"messageReceived\", {\n        room: this,\n        message,\n        sender: sender ? sender.getInfo() : null,\n      });\n    }\n\n    if (event.type === \"messageDelete\") {\n      this.messages = this.messages.filter((m) => m.id !== event.messageId);\n\n      this.emit(\"messageDeleted\", {\n        room: this,\n        messageId: event.messageId,\n        senderId: event.senderId,\n      });\n    }\n\n    if (event.type === \"messageUpdate\") {\n      const messageIndex = this.messages.findIndex((m) => m.id === event.messageId);\n      if (messageIndex !== -1) {\n        this.messages[messageIndex].text = event.text;\n        this.messages[messageIndex].updatedAt = event.timestamp;\n        this.messages[messageIndex].metadata = {\n          ...this.messages[messageIndex].metadata,\n          ...event.metadata,\n        };\n      }\n\n      this.emit(\"messageUpdated\", {\n        room: this,\n        messageId: event.messageId,\n        text: event.text,\n        senderId: event.senderId,\n      });\n    }\n\n    if (event.type === \"typingStart\") {\n      if (event.userId !== this.localParticipant?.userId) {\n        this.typingUsers.set(event.userId, {\n          userId: event.userId,\n          timestamp: event.timestamp,\n        });\n\n        this.emit(\"typingStarted\", {\n          room: this,\n          userId: event.userId,\n          user: this.getParticipant(event.userId)?.getInfo(),\n        });\n\n        setTimeout(() => {\n          this.typingUsers.delete(event.userId);\n          this.emit(\"typingStopped\", {\n            room: this,\n            userId: event.userId,\n          });\n        }, 5000);\n      }\n    }\n\n    if (event.type === \"typingStop\") {\n      if (event.userId !== this.localParticipant?.userId) {\n        this.typingUsers.delete(event.userId);\n\n        this.emit(\"typingStopped\", {\n          room: this,\n          userId: event.userId,\n          user: this.getParticipant(event.userId)?.getInfo(),\n        });\n      }\n    }\n    if (event.type === \"start_share_screen\") {\n      const participant = this.participants.get(event.participant.user_id);\n      if (participant && participant.userId !== this.localParticipant?.userId) {\n        participant.isScreenSharing = true;\n        this.emit(\"remoteScreenShareStarted\", { room: this, participant });\n      }\n    }\n\n    if (event.type === \"stop_share_screen\") {\n      const participant = this.participants.get(event.participant.user_id);\n      if (participant && participant.userId !== this.localParticipant?.userId) {\n        participant.isScreenSharing = false;\n        this.emit(\"remoteScreenShareStopped\", { room: this, participant });\n      }\n    }\n\n    if (event.type === \"mic_on\") {\n      const participant = this.participants.get(event.participant.user_id);\n      if (participant) {\n        participant.updateMicStatus(true);\n        this.emit(\"remoteAudioStatusChanged\", {\n          room: this,\n          participant,\n          enabled: true,\n        });\n      }\n    }\n\n    if (event.type === \"mic_off\") {\n      const participant = this.participants.get(event.participant.user_id);\n      if (participant) {\n        participant.updateMicStatus(false);\n        this.emit(\"remoteAudioStatusChanged\", {\n          room: this,\n          participant,\n          enabled: false,\n        });\n      }\n    }\n\n    if (event.type === \"camera_on\") {\n      const participant = this.participants.get(event.participant.user_id);\n      if (participant) {\n        participant.updateCameraStatus(true);\n        this.emit(\"remoteVideoStatusChanged\", {\n          room: this,\n          participant,\n          enabled: true,\n        });\n      }\n    }\n\n    if (event.type === \"camera_off\") {\n      const participant = this.participants.get(event.participant.user_id);\n      if (participant) {\n        participant.updateCameraStatus(false);\n        this.emit(\"remoteVideoStatusChanged\", {\n          room: this,\n          participant,\n          enabled: false,\n        });\n      }\n    }\n\n    if (event.type === \"pin_for_everyone\") {\n      console.log(`Pin for everyone event received:`, event.participant);\n      const participant = this.participants.get(event.participant.user_id);\n      if (participant) {\n        this.pinParticipant(participant.userId);\n        this.emit(\"participantPinnedForEveryone\", { room: this, participant });\n      }\n    }\n\n    if (event.type === \"unpin_for_everyone\") {\n      console.log(`Unpin for everyone event received`);\n      if (this.pinnedParticipant) {\n        const participant = this.pinnedParticipant;\n        this.unpinParticipant();\n        this.emit(\"participantUnpinnedForEveryone\", {\n          room: this,\n          participant,\n        });\n      }\n    }\n  }\n\n  _setupParticipantEvents(participant) {\n    participant.on(\"pinToggled\", ({ participant: p, pinned }) => {\n      if (pinned) {\n        this.pinParticipant(p.userId);\n      } else if (this.pinnedParticipant === p) {\n        this.unpinParticipant();\n      }\n    });\n\n    participant.on(\"error\", ({ participant: p, error, action }) => {\n      this.emit(\"participantError\", {\n        room: this,\n        participant: p,\n        error,\n        action,\n      });\n    });\n  }\n\n  /**\n   * Update room data from API response\n   */\n  _updateFromApiData(roomData) {\n    this.name = roomData.room_name || this.name;\n    this.ownerId = roomData.user_id || this.ownerId;\n  }\n\n  /**\n   * Cleanup media connections\n   */\n  async _cleanupMediaConnections() {\n    // Cleanup audio mixer\n    if (this.audioMixer) {\n      await this.audioMixer.cleanup();\n      this.audioMixer = null;\n    }\n\n    // Cleanup all participants' media\n    for (const participant of this.participants.values()) {\n      if (participant.publisher) {\n        participant.publisher.stop();\n        participant.publisher = null;\n      }\n      if (participant.subscriber) {\n        participant.subscriber.stop();\n        participant.subscriber = null;\n      }\n    }\n  }\n\n  /**\n   * Cleanup all participants\n   */\n  _cleanupParticipants() {\n    for (const participant of this.participants.values()) {\n      participant.cleanup();\n    }\n\n    this.participants.clear();\n    this.localParticipant = null;\n    this.pinnedParticipant = null;\n    this.typingUsers.clear();\n  }\n\n  _generateMessageId() {\n    return `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  /**\n   * Setup stream event forwarding for existing participants\n   */\n  _setupStreamEventForwarding() {\n    // Setup for local participant if exists\n    if (this.localParticipant && this.localParticipant.publisher) {\n      this.localParticipant.publisher.on(\"localStreamReady\", (data) => {\n        this.emit(\"localStreamReady\", {\n          ...data,\n          participant: this.localParticipant.getInfo(),\n          roomId: this.id,\n        });\n      });\n    }\n\n    // Setup for remote participants\n    for (const participant of this.participants.values()) {\n      if (participant.subscriber && !participant.isLocal) {\n        participant.subscriber.on(\"remoteStreamReady\", (data) => {\n          this.emit(\"remoteStreamReady\", {\n            ...data,\n            participant: participant.getInfo(),\n            roomId: this.id,\n          });\n        });\n\n        // participant.subscriber.on(\"streamRemoved\", (data) => {\n        //   this.emit(\"streamRemoved\", {\n        //     ...data,\n        //     participant: participant.getInfo(),\n        //     roomId: this.id\n        //   });\n        // });\n      }\n    }\n  }\n\n  /**\n   * Remove stream event forwarding\n   */\n  _removeStreamEventForwarding() {\n    // Remove local participant events\n    if (this.localParticipant && this.localParticipant.publisher) {\n      this.localParticipant.publisher.removeAllListeners(\"localStreamReady\");\n    }\n\n    // Remove remote participants events\n    for (const participant of this.participants.values()) {\n      if (participant.subscriber && !participant.isLocal) {\n        participant.subscriber.removeAllListeners(\"remoteStreamReady\");\n        participant.subscriber.removeAllListeners(\"streamRemoved\");\n      }\n    }\n  }\n\n  /**\n   * Cleanup room resources\n   */\n  async cleanup() {\n    if (this.isActive) {\n      await this.leave();\n    }\n\n    // Cleanup sub rooms\n    for (const subRoom of this.subRooms.values()) {\n      await subRoom.cleanup();\n    }\n    this.subRooms.clear();\n\n    this.removeAllListeners();\n  }\n}\n\nexport default Room;\n","import Room from \"./Room.js\";\n\n/**\n * SubRoom extends Room with additional functionality for breakout rooms\n */\nclass SubRoom extends Room {\n  constructor(config) {\n    super({\n      ...config,\n      type: config.type || \"breakout\",\n    });\n\n    this.parentRoom = config.parentRoom; // Reference to parent Room instance\n    this.maxParticipants = config.maxParticipants || 10;\n    this.autoReturn = config.autoReturn || false; // Auto return to main room when empty\n    this.duration = config.duration || null; // Duration in minutes, null = unlimited\n    this.startTime = null;\n\n    // Sub room specific state\n    this.isTemporary = config.isTemporary || true;\n    this.allowSelfAssign = config.allowSelfAssign || true;\n\n    this._setupSubRoomEvents();\n  }\n\n  /**\n   * Join the sub room from main room\n   */\n  async joinFromMain(userId) {\n    if (!this.parentRoom) {\n      throw new Error(\"No parent room reference\");\n    }\n\n    try {\n      this.emit(\"joiningFromMain\", { subRoom: this, userId });\n\n      // Pause main room media without leaving\n      await this.parentRoom._pauseMediaConnections();\n\n      // Join this sub room\n      const joinResult = await this.join(userId);\n\n      // Start duration timer if set\n      if (this.duration && !this.startTime) {\n        this.startTime = Date.now();\n        this._startDurationTimer();\n      }\n\n      this.emit(\"joinedFromMain\", { subRoom: this, userId, joinResult });\n\n      return joinResult;\n    } catch (error) {\n      // Resume main room media on error\n      if (this.parentRoom) {\n        await this.parentRoom._resumeMediaConnections();\n      }\n\n      this.emit(\"error\", { subRoom: this, error, action: \"joinFromMain\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Return to main room\n   */\n  async returnToMainRoom() {\n    if (!this.parentRoom) {\n      throw new Error(\"No parent room reference\");\n    }\n\n    try {\n      this.emit(\"returningToMain\", { subRoom: this });\n\n      // Leave sub room\n      await this.leave();\n\n      // Resume main room media\n      await this.parentRoom._resumeMediaConnections();\n\n      this.emit(\"returnedToMain\", { subRoom: this });\n\n      // Check if should cleanup empty room\n      if (this.participants.size === 0 && this.autoReturn) {\n        await this.cleanup();\n      }\n\n      return this.parentRoom;\n    } catch (error) {\n      this.emit(\"error\", { subRoom: this, error, action: \"returnToMainRoom\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Switch to another sub room directly\n   */\n  async switchToSubRoom(targetSubRoom) {\n    if (!this.parentRoom) {\n      throw new Error(\"No parent room reference\");\n    }\n\n    try {\n      this.emit(\"switchingToSubRoom\", {\n        fromSubRoom: this,\n        toSubRoom: targetSubRoom,\n      });\n\n      // Leave current sub room\n      await this.leave();\n\n      // Join target sub room\n      const joinResult = await targetSubRoom.joinFromMain(\n        this.localParticipant?.userId\n      );\n\n      this.emit(\"switchedToSubRoom\", {\n        fromSubRoom: this,\n        toSubRoom: targetSubRoom,\n      });\n\n      return joinResult;\n    } catch (error) {\n      this.emit(\"error\", { subRoom: this, error, action: \"switchToSubRoom\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Invite participant to this sub room\n   */\n  async inviteParticipant(userId) {\n    try {\n      // Send invitation via API (implementation depends on API support)\n      const result = await this.apiClient.inviteToSubRoom(this.id, userId);\n\n      this.emit(\"participantInvited\", { subRoom: this, userId, result });\n\n      return result;\n    } catch (error) {\n      this.emit(\"error\", { subRoom: this, error, action: \"inviteParticipant\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Assign participant to this sub room (host action)\n   */\n  async assignParticipant(userId) {\n    try {\n      // Force assignment via API\n      const result = await this.apiClient.assignToSubRoom(this.id, userId);\n\n      this.emit(\"participantAssigned\", { subRoom: this, userId, result });\n\n      return result;\n    } catch (error) {\n      this.emit(\"error\", { subRoom: this, error, action: \"assignParticipant\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Broadcast message to all participants\n   */\n  async broadcastMessage(message, type = \"info\") {\n    try {\n      const result = await this.apiClient.broadcastToSubRoom(\n        this.id,\n        message,\n        type\n      );\n\n      this.emit(\"messageBroadcast\", { subRoom: this, message, type, result });\n\n      return result;\n    } catch (error) {\n      this.emit(\"error\", { subRoom: this, error, action: \"broadcastMessage\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Get remaining time in minutes\n   */\n  getRemainingTime() {\n    if (!this.duration || !this.startTime) {\n      return null;\n    }\n\n    const elapsed = (Date.now() - this.startTime) / (1000 * 60); // in minutes\n    const remaining = Math.max(0, this.duration - elapsed);\n\n    return Math.ceil(remaining);\n  }\n\n  /**\n   * Extend sub room duration\n   */\n  extendDuration(additionalMinutes) {\n    if (!this.duration) {\n      this.duration = additionalMinutes;\n      this.startTime = Date.now();\n    } else {\n      this.duration += additionalMinutes;\n    }\n\n    this.emit(\"durationExtended\", {\n      subRoom: this,\n      additionalMinutes,\n      newDuration: this.duration,\n    });\n\n    // Restart timer if needed\n    if (this.startTime) {\n      this._startDurationTimer();\n    }\n  }\n\n  /**\n   * Set participant limit\n   */\n  setMaxParticipants(limit) {\n    this.maxParticipants = limit;\n\n    this.emit(\"maxParticipantsChanged\", {\n      subRoom: this,\n      maxParticipants: limit,\n    });\n\n    // If over limit, may need to handle overflow\n    if (this.participants.size > limit) {\n      this.emit(\"participantLimitExceeded\", {\n        subRoom: this,\n        current: this.participants.size,\n        limit,\n      });\n    }\n  }\n\n  /**\n   * Check if sub room is full\n   */\n  isFull() {\n    return this.participants.size >= this.maxParticipants;\n  }\n\n  /**\n   * Check if sub room is empty\n   */\n  isEmpty() {\n    return this.participants.size === 0;\n  }\n\n  /**\n   * Check if sub room has expired\n   */\n  hasExpired() {\n    if (!this.duration || !this.startTime) {\n      return false;\n    }\n\n    const elapsed = (Date.now() - this.startTime) / (1000 * 60);\n    return elapsed >= this.duration;\n  }\n\n  /**\n   * Get sub room statistics\n   */\n  getStats() {\n    return {\n      ...this.getInfo(),\n      maxParticipants: this.maxParticipants,\n      duration: this.duration,\n      remainingTime: this.getRemainingTime(),\n      startTime: this.startTime,\n      isFull: this.isFull(),\n      isEmpty: this.isEmpty(),\n      hasExpired: this.hasExpired(),\n      isTemporary: this.isTemporary,\n      allowSelfAssign: this.allowSelfAssign,\n      autoReturn: this.autoReturn,\n    };\n  }\n\n  /**\n   * Setup sub room specific events\n   */\n  _setupSubRoomEvents() {\n    // Handle participant left\n    this.on(\"participantRemoved\", ({ room, participant }) => {\n      // Auto return to main room if empty and configured to do so\n      if (this.isEmpty() && this.autoReturn && this.parentRoom) {\n        setTimeout(() => {\n          if (this.isEmpty()) {\n            // Double check after delay\n            this.cleanup();\n          }\n        }, 5000); // 5 second delay\n      }\n    });\n\n    // Handle room expiry warnings\n    if (this.duration) {\n      // Warn 5 minutes before expiry\n      const warningTime = Math.max(1, this.duration - 5);\n      setTimeout(() => {\n        if (this.isActive && !this.hasExpired()) {\n          this.emit(\"expiryWarning\", { subRoom: this, remainingMinutes: 5 });\n        }\n      }, warningTime * 60 * 1000);\n    }\n  }\n\n  /**\n   * Start duration timer for automatic closure\n   */\n  _startDurationTimer() {\n    if (this._durationTimer) {\n      clearTimeout(this._durationTimer);\n    }\n\n    if (!this.duration) return;\n\n    const remainingMs = this.getRemainingTime() * 60 * 1000;\n\n    if (remainingMs <= 0) {\n      this._handleExpiry();\n      return;\n    }\n\n    this._durationTimer = setTimeout(() => {\n      this._handleExpiry();\n    }, remainingMs);\n  }\n\n  /**\n   * Handle sub room expiry\n   */\n  async _handleExpiry() {\n    this.emit(\"expired\", { subRoom: this });\n\n    // Notify all participants\n    await this.broadcastMessage(\n      \"Sub room session has expired. Returning to main room.\",\n      \"warning\"\n    );\n\n    // Return all participants to main room\n    const participants = Array.from(this.participants.values());\n    for (const participant of participants) {\n      if (participant.isLocal) {\n        await this.returnToMainRoom();\n      }\n    }\n\n    // Cleanup sub room\n    await this.cleanup();\n  }\n\n  /**\n   * Override cleanup to clear timers\n   */\n  async cleanup() {\n    // Clear duration timer\n    if (this._durationTimer) {\n      clearTimeout(this._durationTimer);\n      this._durationTimer = null;\n    }\n\n    // Remove from parent room's sub rooms map\n    if (this.parentRoom) {\n      this.parentRoom.subRooms.delete(this.id);\n    }\n\n    // Call parent cleanup\n    await super.cleanup();\n\n    this.emit(\"cleanedUp\", { subRoom: this });\n  }\n\n  /**\n   * Serialize sub room state for persistence or transfer\n   */\n  serialize() {\n    return {\n      ...this.getStats(),\n      participantIds: Array.from(this.participants.keys()),\n      parentRoomId: this.parentRoom?.id || this.parentRoomId,\n      createdAt: this.startTime || Date.now(),\n    };\n  }\n\n  /**\n   * Create sub room from serialized data\n   */\n  static fromSerializedData(data, parentRoom, apiClient, mediaConfig) {\n    return new SubRoom({\n      id: data.id,\n      name: data.name,\n      code: data.code,\n      type: data.type,\n      parentRoom,\n      parentRoomId: data.parentRoomId,\n      ownerId: data.ownerId,\n      maxParticipants: data.maxParticipants,\n      duration: data.duration,\n      autoReturn: data.autoReturn,\n      isTemporary: data.isTemporary,\n      allowSelfAssign: data.allowSelfAssign,\n      apiClient,\n      mediaConfig,\n    });\n  }\n}\n\nexport default SubRoom;\n","import EventEmitter from \"../events/EventEmitter.js\";\nimport ApiClient from \"../api/ApiClient.js\";\nimport Room from \"./Room.js\";\nimport SubRoom from \"./SubRoom.js\";\n\n/**\n * Main Ermis Classroom client\n */\nclass ErmisClient extends EventEmitter {\n  constructor(config = {}) {\n    super();\n\n    // Configuration\n    this.config = {\n      host: config.host || \"daibo.ermis.network:9992\",\n      apiUrl:\n        config.apiUrl ||\n        `https://${config.host || \"daibo.ermis.network:9992\"}/meeting`,\n      webtpUrl:\n        config.webtpUrl || \"https://daibo.ermis.network:4458/meeting/wt\",\n      reconnectAttempts: config.reconnectAttempts || 3,\n      reconnectDelay: config.reconnectDelay || 2000,\n      debug: config.debug || false,\n    };\n\n    // API client\n    this.apiClient = new ApiClient({\n      host: this.config.host,\n      apiUrl: this.config.apiUrl,\n    });\n\n    // State management\n    this.state = {\n      user: null,\n      isAuthenticated: false,\n      currentRoom: null,\n      rooms: new Map(), // roomId -> Room\n      connectionStatus: \"disconnected\", // 'disconnected', 'connecting', 'connected', 'failed'\n    };\n\n    // Media configuration\n    this.mediaConfig = {\n      host: this.config.host,\n      webtpUrl: this.config.webtpUrl,\n      defaultVideoConfig: {\n        width: 1280,\n        height: 720,\n        framerate: 30,\n        bitrate: 1_500_000,\n      },\n      defaultAudioConfig: {\n        sampleRate: 48000,\n        channels: 2,\n      },\n    };\n\n    this._setupEventHandlers();\n  }\n\n  /**\n   * Authenticate user\n   */\n  async authenticate(userId) {\n    if (this.state.isAuthenticated && this.state.user?.id === userId) {\n      return this.state.user;\n    }\n\n    try {\n      this.emit(\"authenticating\", { userId });\n      this._setConnectionStatus(\"connecting\");\n\n      // Validate email format if it looks like email\n      if (userId.includes(\"@\")) {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(userId)) {\n          throw new Error(\"Invalid email format\");\n        }\n      }\n\n      // Get authentication token\n      const tokenResponse = await this.apiClient.getDummyToken(userId);\n\n      // Set authentication in API client\n      this.apiClient.setAuth(tokenResponse.access_token, userId);\n\n      // Update state\n      this.state.user = {\n        id: userId,\n        token: tokenResponse.access_token,\n        authenticatedAt: Date.now(),\n      };\n      this.state.isAuthenticated = true;\n\n      this._setConnectionStatus(\"connected\");\n      this.emit(\"authenticated\", { user: this.state.user });\n\n      this._debug(\"User authenticated successfully:\", userId);\n\n      return this.state.user;\n    } catch (error) {\n      this._setConnectionStatus(\"failed\");\n      this.emit(\"authenticationFailed\", { userId, error });\n      this._debug(\"Authentication failed:\", error);\n      throw error;\n    }\n  }\n\n  /**\n * Set authentication directly without calling API\n */\n  manualAuthenticate(userId, token) {\n    if (!userId || !token) {\n      throw new Error(\"userId and token are required\");\n    }\n\n    // Set auth to API client\n    this.apiClient.setAuth(token, userId);\n\n    // Update state\n    this.state.user = {\n      id: userId,\n      token,\n      authenticatedAt: Date.now(),\n    };\n    this.state.isAuthenticated = true;\n\n    // Update connection status\n    this._setConnectionStatus(\"connected\");\n\n    // Emit event\n    this.emit(\"authenticated\", { user: this.state.user });\n\n    this._debug(\"Auth set directly:\", this.state.user);\n  }\n\n  /**\n   * Logout user\n   */\n  async logout() {\n    if (!this.state.isAuthenticated) {\n      return;\n    }\n\n    try {\n      this.emit(\"loggingOut\", { user: this.state.user });\n\n      // Leave current room if any\n      if (this.state.currentRoom) {\n        await this.state.currentRoom.leave();\n      }\n\n      // Reset state\n      this.state.user = null;\n      this.state.isAuthenticated = false;\n      this.state.currentRoom = null;\n      this.state.rooms.clear();\n\n      this._setConnectionStatus(\"disconnected\");\n      this.emit(\"loggedOut\");\n\n      this._debug(\"User logged out successfully\");\n    } catch (error) {\n      this.emit(\"error\", { error, action: \"logout\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Create a new room\n   */\n  async createRoom(config) {\n    this._ensureAuthenticated();\n\n    try {\n      this.emit(\"creatingRoom\", { config });\n\n      const roomData = await this.apiClient.createRoom(\n        config.name,\n        config.type\n      );\n\n      const room = new Room({\n        id: roomData.id,\n        name: roomData.room_name,\n        code: roomData.room_code,\n        type: config.type || \"main\",\n        ownerId: roomData.user_id,\n        apiClient: this.apiClient,\n        mediaConfig: this.mediaConfig,\n      });\n\n      this._setupRoomEvents(room);\n      this.state.rooms.set(room.id, room);\n\n      this.emit(\"roomCreated\", { room });\n      this._debug(\"Room created:\", room.getInfo());\n\n      // Auto-join if specified\n      if (config.autoJoin !== false) {\n        await this.joinRoom(room.code);\n      }\n\n      return room;\n    } catch (error) {\n      this.emit(\"error\", { error, action: \"createRoom\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Join a room by code\n   */\n  async joinRoom(roomCode) {\n    this._ensureAuthenticated();\n\n    try {\n      this.emit(\"joiningRoom\", { roomCode });\n\n      // Leave current room if any\n      if (this.state.currentRoom) {\n        await this.state.currentRoom.leave();\n      }\n\n      // Try to find existing room instance first\n      let room = Array.from(this.state.rooms.values()).find(\n        (r) => r.code === roomCode\n      );\n\n      if (!room) {\n        // Create new room instance\n        room = new Room({\n          code: roomCode,\n          apiClient: this.apiClient,\n          mediaConfig: this.mediaConfig,\n        });\n\n        this._setupRoomEvents(room);\n      }\n\n      // Join the room\n      const joinResult = await room.join(this.state.user.id);\n\n      // Update state\n      this.state.currentRoom = room;\n      this.state.rooms.set(room.id, room);\n\n      this.emit(\"roomJoined\", { room, joinResult });\n      this._debug(\"Joined room:\", room.getInfo());\n\n      return joinResult;\n    } catch (error) {\n      this.emit(\"error\", { error, action: \"joinRoom\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Leave current room\n   */\n  async leaveRoom() {\n    if (!this.state.currentRoom) {\n      return;\n    }\n\n    try {\n      const room = this.state.currentRoom;\n      this.emit(\"leavingRoom\", { room });\n\n      await room.leave();\n\n      this.state.currentRoom = null;\n\n      this.emit(\"roomLeft\", { room });\n      this._debug(\"Left room:\", room.getInfo());\n    } catch (error) {\n      this.emit(\"error\", { error, action: \"leaveRoom\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Get available rooms\n   */\n  async getRooms(options = {}) {\n    this._ensureAuthenticated();\n\n    try {\n      const response = await this.apiClient.listRooms(\n        options.page || 1,\n        options.perPage || 20\n      );\n\n      this.emit(\"roomsLoaded\", { rooms: response.data || [] });\n\n      return response.data || [];\n    } catch (error) {\n      this.emit(\"error\", { error, action: \"getRooms\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Get current room\n   */\n  getCurrentRoom() {\n    return this.state.currentRoom;\n  }\n\n  /**\n   * Get room by ID\n   */\n  getRoom(roomId) {\n    return this.state.rooms.get(roomId);\n  }\n\n  /**\n   * Create sub room in current room\n   */\n  async createSubRoom(config) {\n    if (!this.state.currentRoom) {\n      throw new Error(\"Must be in a main room to create sub rooms\");\n    }\n\n    if (this.state.currentRoom.type !== \"main\") {\n      throw new Error(\"Can only create sub rooms from main rooms\");\n    }\n\n    try {\n      this.emit(\"creatingSubRoom\", {\n        config,\n        parentRoom: this.state.currentRoom,\n      });\n\n      const subRoom = await this.state.currentRoom.createSubRoom(config);\n\n      this.emit(\"subRoomCreated\", {\n        subRoom,\n        parentRoom: this.state.currentRoom,\n      });\n      this._debug(\"Sub room created:\", subRoom.getInfo());\n\n      return subRoom;\n    } catch (error) {\n      this.emit(\"error\", { error, action: \"createSubRoom\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Join a sub room\n   */\n  async joinSubRoom(subRoomCode) {\n    if (!this.state.currentRoom) {\n      throw new Error(\"Must be in a main room to join sub rooms\");\n    }\n\n    try {\n      this.emit(\"joiningSubRoom\", {\n        subRoomCode,\n        parentRoom: this.state.currentRoom,\n      });\n\n      // Find sub room\n      const subRooms = await this.state.currentRoom.getSubRooms();\n      const subRoom = subRooms.find((sr) => sr.code === subRoomCode);\n\n      if (!subRoom) {\n        throw new Error(`Sub room with code ${subRoomCode} not found`);\n      }\n\n      // Join sub room\n      const joinResult = await subRoom.joinFromMain(this.state.user.id);\n\n      this.emit(\"subRoomJoined\", {\n        subRoom,\n        parentRoom: this.state.currentRoom,\n      });\n      this._debug(\"Joined sub room:\", subRoom.getInfo());\n\n      return joinResult;\n    } catch (error) {\n      this.emit(\"error\", { error, action: \"joinSubRoom\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Return to main room from sub room\n   */\n  async returnToMainRoom() {\n    if (!this.state.currentRoom || this.state.currentRoom.type !== \"breakout\") {\n      throw new Error(\"Must be in a sub room to return to main room\");\n    }\n\n    try {\n      this.emit(\"returningToMainRoom\", { subRoom: this.state.currentRoom });\n\n      const subRoom = this.state.currentRoom;\n      const mainRoom = await subRoom.returnToMainRoom();\n\n      this.state.currentRoom = mainRoom;\n\n      this.emit(\"returnedToMainRoom\", { mainRoom, previousSubRoom: subRoom });\n      this._debug(\"Returned to main room from sub room\");\n\n      return mainRoom;\n    } catch (error) {\n      this.emit(\"error\", { error, action: \"returnToMainRoom\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Switch between sub rooms\n   */\n  async switchSubRoom(targetSubRoomCode) {\n    if (!this.state.currentRoom || this.state.currentRoom.type !== \"breakout\") {\n      throw new Error(\"Must be in a sub room to switch to another sub room\");\n    }\n\n    try {\n      this.emit(\"switchingSubRoom\", {\n        fromSubRoom: this.state.currentRoom,\n        targetSubRoomCode,\n      });\n\n      const currentSubRoom = this.state.currentRoom;\n      const parentRoom = currentSubRoom.parentRoom;\n\n      // Find target sub room\n      const subRooms = await parentRoom.getSubRooms();\n      const targetSubRoom = subRooms.find(\n        (sr) => sr.code === targetSubRoomCode\n      );\n\n      if (!targetSubRoom) {\n        throw new Error(`Sub room with code ${targetSubRoomCode} not found`);\n      }\n\n      // Switch to target sub room\n      const joinResult = await currentSubRoom.switchToSubRoom(targetSubRoom);\n\n      this.state.currentRoom = targetSubRoom;\n\n      this.emit(\"subRoomSwitched\", {\n        fromSubRoom: currentSubRoom,\n        toSubRoom: targetSubRoom,\n      });\n      this._debug(\"Switched sub rooms:\", {\n        from: currentSubRoom.getInfo(),\n        to: targetSubRoom.getInfo(),\n      });\n\n      return joinResult;\n    } catch (error) {\n      this.emit(\"error\", { error, action: \"switchSubRoom\" });\n      throw error;\n    }\n  }\n\n  /**\n   * Get client state\n   */\n  getState() {\n    return {\n      user: this.state.user,\n      isAuthenticated: this.state.isAuthenticated,\n      currentRoom: this.state.currentRoom?.getInfo() || null,\n      connectionStatus: this.state.connectionStatus,\n      roomCount: this.state.rooms.size,\n    };\n  }\n\n  /**\n   * Get client configuration\n   */\n  getConfig() {\n    return { ...this.config };\n  }\n\n  /**\n   * Update configuration\n   */\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n\n    // Update API client if needed\n    if (newConfig.host || newConfig.apiUrl) {\n      this.apiClient = new ApiClient({\n        host: this.config.host,\n        apiUrl: this.config.apiUrl,\n      });\n\n      if (this.state.isAuthenticated) {\n        this.apiClient.setAuth(this.state.user.token, this.state.user.id);\n      }\n    }\n\n    this.emit(\"configUpdated\", { config: this.config });\n  }\n\n  /**\n   * Enable debug mode\n   */\n  enableDebug() {\n    this.config.debug = true;\n    this._debug(\"Debug mode enabled\");\n  }\n\n  /**\n   * Disable debug mode\n   */\n  disableDebug() {\n    this.config.debug = false;\n  }\n\n  async sendMessage(text, metadata = {}) {\n    if (!this.state.currentRoom) {\n      throw new Error(\"No active room. Join a room first.\");\n    }\n\n    return await this.state.currentRoom.sendMessage(text, metadata);\n  }\n\n  async deleteMessage(messageId) {\n    if (!this.state.currentRoom) {\n      throw new Error(\"No active room. Join a room first.\");\n    }\n\n    return await this.state.currentRoom.deleteMessage(messageId);\n  }\n\n  async updateMessage(messageId, newText, metadata = {}) {\n    if (!this.state.currentRoom) {\n      throw new Error(\"No active room. Join a room first.\");\n    }\n\n    return await this.state.currentRoom.updateMessage(messageId, newText, metadata);\n  }\n\n  async sendTypingIndicator(isTyping = true) {\n    if (!this.state.currentRoom) {\n      return;\n    }\n\n    return await this.state.currentRoom.sendTypingIndicator(isTyping);\n  }\n\n  getMessages(limit = 100) {\n    if (!this.state.currentRoom) {\n      return [];\n    }\n\n    return this.state.currentRoom.getMessages(limit);\n  }\n\n  getTypingUsers() {\n    if (!this.state.currentRoom) {\n      return [];\n    }\n\n    return this.state.currentRoom.getTypingUsers();\n  }\n\n  clearMessages() {\n    if (!this.state.currentRoom) {\n      return;\n    }\n\n    this.state.currentRoom.clearMessages();\n  }\n\n  /**\n   * Cleanup client resources\n   */\n  async cleanup() {\n    try {\n      // Leave current room\n      if (this.state.currentRoom) {\n        await this.state.currentRoom.leave();\n      }\n\n      // Cleanup all rooms\n      for (const room of this.state.rooms.values()) {\n        await room.cleanup();\n      }\n\n      // Clear state\n      this.state.rooms.clear();\n      this.state.currentRoom = null;\n\n      // Remove all listeners\n      this.removeAllListeners();\n\n      this._debug(\"Client cleanup completed\");\n    } catch (error) {\n      console.error(\"Error during cleanup:\", error);\n    }\n  }\n\n  /**\n   * Setup event handlers for rooms\n   */\n  _setupRoomEvents(room) {\n    // Forward room events to client\n    const eventsToForward = [\n      \"roomJoined\",\n      \"roomLeft\",\n      \"participantAdded\",\n      \"participantRemoved\",\n      \"participantPinned\",\n      \"participantUnpinned\",\n      \"subRoomCreated\",\n      \"localStreamReady\",\n      \"remoteStreamReady\",\n      \"streamRemoved\",\n      \"audioToggled\",\n      \"videoToggled\",\n      \"messageSent\",\n      \"messageReceived\",\n      \"messageDeleted\",\n      \"messageUpdated\",\n      \"typingStarted\",\n      \"typingStopped\",\n      \"error\",\n    ];\n\n    eventsToForward.forEach((event) => {\n      room.on(event, (data) => {\n        this.emit(\n          event,\n          data\n        );\n      });\n    });\n  }\n\n  /**\n   * Setup initial event handlers\n   */\n  _setupEventHandlers() {\n    // Handle authentication token refresh\n    this.on(\"authenticated\", () => {\n      // Could implement token refresh logic here\n    });\n\n    // Handle connection status changes\n    this.on(\"connectionStatusChanged\", ({ status }) => {\n      if (status === \"failed\" && this.config.reconnectAttempts > 0) {\n        this._attemptReconnect();\n      }\n    });\n  }\n\n  /**\n   * Attempt to reconnect\n   */\n  async _attemptReconnect() {\n    let attempts = 0;\n\n    while (attempts < this.config.reconnectAttempts) {\n      try {\n        attempts++;\n        this._debug(\n          `Reconnection attempt ${attempts}/${this.config.reconnectAttempts}`\n        );\n\n        await new Promise((resolve) =>\n          setTimeout(resolve, this.config.reconnectDelay)\n        );\n\n        if (this.state.user) {\n          await this.authenticate(this.state.user.id);\n          this._debug(\"Reconnection successful\");\n          return;\n        }\n      } catch (error) {\n        this._debug(`Reconnection attempt ${attempts} failed:`, error.message);\n      }\n    }\n\n    this.emit(\"reconnectionFailed\");\n    this._debug(\"All reconnection attempts failed\");\n  }\n\n  /**\n   * Set connection status\n   */\n  _setConnectionStatus(status) {\n    if (this.state.connectionStatus !== status) {\n      this.state.connectionStatus = status;\n      this.emit(\"connectionStatusChanged\", { status });\n      this._debug(\"Connection status changed:\", status);\n    }\n  }\n\n  /**\n   * Ensure user is authenticated\n   */\n  _ensureAuthenticated() {\n    if (!this.state.isAuthenticated) {\n      throw new Error(\"User must be authenticated first\");\n    }\n  }\n\n  /**\n   * Debug logging\n   */\n  _debug(...args) {\n    if (this.config.debug) {\n      console.log(\"[ErmisClient]\", ...args);\n    }\n  }\n}\n\nexport default ErmisClient;\n","/**\n * Ermis Classroom SDK\n * Main entry point for the SDK\n */\n\nimport ErmisClient from \"./core/ErmisClient.js\";\nimport Room from \"./core/Room.js\";\nimport SubRoom from \"./core/SubRoom.js\";\nimport Participant from \"./core/Participant.js\";\nimport ApiClient from \"./api/ApiClient.js\";\nimport EventEmitter from \"./events/EventEmitter.js\";\n\n/**\n * SDK Version\n */\nexport const VERSION = \"1.0.0\";\n\n/**\n * Main SDK Class - Similar to LiveKit pattern\n */\nclass ErmisClassroom {\n  /**\n   * Create a new Ermis Classroom client\n   * @param {Object} config - Configuration options\n   * @returns {ErmisClient} - New client instance\n   */\n  static create(config = {}) {\n    return new ErmisClient(config);\n  }\n\n  /**\n   * Connect and authenticate user\n   * @param {string} serverUrl - Server URL\n   * @param {string} userId - User identifier\n   * @param {Object} options - Connection options\n   * @returns {Promise<ErmisClient>} - Connected client\n   */\n  static async connect(serverUrl, userId, options = {}) {\n    const config = {\n      host: serverUrl.replace(/^https?:\\/\\//, \"\"),\n      ...options,\n    };\n\n    const client = new ErmisClient(config);\n    await client.authenticate(userId);\n\n    return client;\n  }\n\n  /**\n   * Get SDK version\n   */\n  static get version() {\n    return VERSION;\n  }\n\n  /**\n   * Get available events\n   */\n  static get events() {\n    return {\n      // Client events\n      CLIENT_AUTHENTICATED: \"authenticated\",\n      CLIENT_AUTHENTICATION_FAILED: \"authenticationFailed\",\n      CLIENT_LOGGED_OUT: \"loggedOut\",\n      CLIENT_CONNECTION_STATUS_CHANGED: \"connectionStatusChanged\",\n\n      // Room events\n      ROOM_CREATED: \"roomCreated\",\n      ROOM_JOINED: \"roomJoined\",\n      ROOM_LEFT: \"roomLeft\",\n\n      // Participant events\n      PARTICIPANT_ADDED: \"participantAdded\",\n      PARTICIPANT_REMOVED: \"participantRemoved\",\n      PARTICIPANT_PINNED: \"participantPinned\",\n      PARTICIPANT_UNPINNED: \"participantUnpinned\",\n      AUDIO_TOGGLED: \"audioToggled\",\n      VIDEO_TOGGLED: \"videoToggled\",\n\n      // Remote participant status events\n      REMOTE_AUDIO_STATUS_CHANGED: \"remoteAudioStatusChanged\",\n      REMOTE_VIDEO_STATUS_CHANGED: \"remoteVideoStatusChanged\",\n\n      // Screen sharing events\n      SCREEN_SHARE_STARTED: \"screenShareStarted\",\n      SCREEN_SHARE_STOPPED: \"screenShareStopped\",\n      REMOTE_SCREEN_SHARE_STARTED: \"remoteScreenShareStarted\",\n      REMOTE_SCREEN_SHARE_STOPPED: \"remoteScreenShareStopped\",\n\n      // Pin for everyone events\n      PARTICIPANT_PINNED_FOR_EVERYONE: \"participantPinnedForEveryone\",\n      PARTICIPANT_UNPINNED_FOR_EVERYONE: \"participantUnpinnedForEveryone\",\n\n      // Sub room events\n      SUB_ROOM_CREATED: \"subRoomCreated\",\n      SUB_ROOM_JOINED: \"subRoomJoined\",\n      SUB_ROOM_LEFT: \"subRoomLeft\",\n      SUB_ROOM_SWITCHED: \"subRoomSwitched\",\n\n      // Media stream events\n      LOCAL_STREAM_READY: \"localStreamReady\",\n      REMOTE_STREAM_READY: \"remoteStreamReady\",\n      STREAM_REMOVED: \"streamRemoved\",\n\n      // Chat events\n      MESSAGE_SENT: \"messageSent\",\n      MESSAGE_RECEIVED: \"messageReceived\",\n      MESSAGE_DELETED: \"messageDeleted\",\n      MESSAGE_UPDATED: \"messageUpdated\",\n      TYPING_STARTED: \"typingStarted\",\n      TYPING_STOPPED: \"typingStopped\",\n      CHAT_HISTORY_LOADED: \"chatHistoryLoaded\",\n\n      // Error events\n      ERROR: \"error\",\n    };\n  }\n\n  /**\n   * Media device utilities\n   */\n  static get MediaDevices() {\n    return {\n      /**\n       * Get available media devices\n       */\n      async getDevices() {\n        if (!navigator.mediaDevices?.enumerateDevices) {\n          throw new Error(\"Media devices not supported\");\n        }\n\n        const devices = await navigator.mediaDevices.enumerateDevices();\n\n        return {\n          cameras: devices.filter((d) => d.kind === \"videoinput\"),\n          microphones: devices.filter((d) => d.kind === \"audioinput\"),\n          speakers: devices.filter((d) => d.kind === \"audiooutput\"),\n        };\n      },\n\n      /**\n       * Get user media with constraints\n       */\n      async getUserMedia(constraints = { video: true, audio: true }) {\n        if (!navigator.mediaDevices?.getUserMedia) {\n          throw new Error(\"getUserMedia not supported\");\n        }\n\n        return await navigator.mediaDevices.getUserMedia(constraints);\n      },\n\n      /**\n       * Check for media permissions\n       */\n      async checkPermissions() {\n        const permissions = {};\n\n        if (navigator.permissions) {\n          try {\n            permissions.camera = await navigator.permissions.query({\n              name: \"camera\",\n            });\n            permissions.microphone = await navigator.permissions.query({\n              name: \"microphone\",\n            });\n          } catch (error) {\n            console.warn(\"Permission check failed:\", error);\n          }\n        }\n\n        return permissions;\n      },\n    };\n  }\n\n  /**\n   * Room types constants\n   */\n  static get RoomTypes() {\n    return {\n      MAIN: \"main\",\n      BREAKOUT: \"breakout\",\n      PRESENTATION: \"presentation\",\n      DISCUSSION: \"discussion\",\n    };\n  }\n\n  /**\n   * Connection status constants\n   */\n  static get ConnectionStatus() {\n    return {\n      DISCONNECTED: \"disconnected\",\n      CONNECTING: \"connecting\",\n      CONNECTED: \"connected\",\n      FAILED: \"failed\",\n    };\n  }\n\n  /**\n   * Participant roles constants\n   */\n  static get ParticipantRoles() {\n    return {\n      OWNER: \"owner\",\n      MODERATOR: \"moderator\",\n      PARTICIPANT: \"participant\",\n      OBSERVER: \"observer\",\n    };\n  }\n}\n\n/**\n * Named exports for individual classes\n */\nexport { ErmisClient, Room, SubRoom, Participant, ApiClient, EventEmitter };\n\n/**\n * Default export - Main SDK class\n */\nexport default ErmisClassroom;\n","let wasm;\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8ArrayMemory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nconst WasmEncoderFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_wasmencoder_free(ptr >>> 0, 1));\n\nexport class WasmEncoder {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        WasmEncoderFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wasmencoder_free(ptr, 0);\n    }\n    /**\n     * @param {Uint8Array} data\n     * @param {number} mtu\n     */\n    constructor(data, mtu) {\n        const ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.wasmencoder_new(ptr0, len0, mtu);\n        this.__wbg_ptr = ret >>> 0;\n        WasmEncoderFinalization.register(this, this.__wbg_ptr, this);\n        return this;\n    }\n    /**\n     * @param {number} repair_packets_count\n     * @returns {Array<any>}\n     */\n    encode(repair_packets_count) {\n        const ret = wasm.wasmencoder_encode(this.__wbg_ptr, repair_packets_count);\n        return ret;\n    }\n    /**\n     * @returns {number}\n     */\n    getMTU() {\n        const ret = wasm.wasmencoder_getMTU(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {Uint8Array}\n     */\n    getConfigBuffer() {\n        const ret = wasm.wasmencoder_getConfigBuffer(this.__wbg_ptr);\n        return ret;\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_buffer_609cc3eee51ed158 = function(arg0) {\n        const ret = arg0.buffer;\n        return ret;\n    };\n    imports.wbg.__wbg_length_a446193dc22c12f8 = function(arg0) {\n        const ret = arg0.length;\n        return ret;\n    };\n    imports.wbg.__wbg_new_78feb108b6472713 = function() {\n        const ret = new Array();\n        return ret;\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_d97e637ebe145a9a = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(arg0, arg1 >>> 0, arg2 >>> 0);\n        return ret;\n    };\n    imports.wbg.__wbg_newwithlength_a381634e90c276d4 = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return ret;\n    };\n    imports.wbg.__wbg_push_737cfc8c1432c2c6 = function(arg0, arg1) {\n        const ret = arg0.push(arg1);\n        return ret;\n    };\n    imports.wbg.__wbg_set_65595bdd868b3009 = function(arg0, arg1, arg2) {\n        arg0.set(arg1, arg2 >>> 0);\n    };\n    imports.wbg.__wbindgen_init_externref_table = function() {\n        const table = wasm.__wbindgen_export_0;\n        const offset = table.grow(4);\n        table.set(0, undefined);\n        table.set(offset + 0, undefined);\n        table.set(offset + 1, null);\n        table.set(offset + 2, true);\n        table.set(offset + 3, false);\n        ;\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return ret;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedUint8ArrayMemory0 = null;\n\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module !== 'undefined') {\n        if (Object.getPrototypeOf(module) === Object.prototype) {\n            ({module} = module)\n        } else {\n            console.warn('using deprecated parameters for `initSync()`; pass a single object instead')\n        }\n    }\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(module_or_path) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module_or_path !== 'undefined') {\n        if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n            ({module_or_path} = module_or_path)\n        } else {\n            console.warn('using deprecated parameters for the initialization function; pass a single object instead')\n        }\n    }\n\n    if (typeof module_or_path === 'undefined') {\n        module_or_path = new URL('raptorq_wasm_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof module_or_path === 'string' || (typeof Request === 'function' && module_or_path instanceof Request) || (typeof URL === 'function' && module_or_path instanceof URL)) {\n        module_or_path = fetch(module_or_path);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync };\nexport default __wbg_init;\n"],"names":["EventEmitter","constructor","_events","Map","on","event","listener","has","set","get","push","off","listeners","index","indexOf","splice","length","delete","emit","args","forEach","error","console","once","onceWrapper","removeAllListeners","clear","listenerCount","ApiClient","config","host","apiBaseUrl","apiUrl","jwtToken","userId","setAuth","token","apiCall","endpoint","method","body","Error","options","headers","Authorization","JSON","stringify","response","fetch","ok","status","json","getDummyToken","sub","createRoom","roomName","roomType","room_name","room_type","listRooms","page","perPage","list_query","per_page","sort_by","sort_order","conditions","is_active","getRoomById","roomId","joinRoom","roomCode","appName","room_code","app_name","createSubRoom","parentRoomId","subRoomName","subRoomType","parent_room_id","getSubRooms","leaveRoom","membershipId","switchToSubRoom","subRoomCode","room_id","sub_room_code","getRoomMembers","updateRoom","updates","deleteRoom","Participant","streamId","role","isLocal","isAudioEnabled","isVideoEnabled","isPinned","publisher","subscriber","isScreenSharing","screenSubscriber","connectionStatus","getDisplayName","roleText","localText","toggleMicrophone","toggleMic","participant","enabled","action","toggleCamera","toggleRemoteAudio","toggleAudio","togglePin","switchBitrate","warn","pinned","setConnectionStatus","_getStatusText","setPublisher","setSubscriber","updateMicStatus","updateCameraStatus","cleanup","stop","getInfo","Publisher","publishUrl","streamType","currentConfig","codec","width","height","framerate","bitrate","kSampleRate","opusBaseTime","opusSamplesSent","opusSamplesPerChunk","opusChunkCount","stream","audioProcessor","videoProcessor","webTransport","isChannelOpen","sequenceNumber","isPublishing","cameraEnabled","micEnabled","hasCamera","undefined","hasMic","onStatusUpdate","message","isError","log","onStreamStart","onStreamStop","onServerEvent","wasmInitialized","wasmInitializing","wasmInitPromise","initAudioRecorder","WasmEncoder","publishStreams","videoEncoders","eventStream","subStreams","name","channelName","init","loadAllDependencies","document","querySelector","Promise","resolve","reject","script","createElement","src","onload","onerror","head","appendChild","default","then","catch","err","opusModule","Date","now","startPublishing","setupConnection","getMediaStream","startStreaming","turnOffCamera","turnOnCamera","turnOffMic","turnOnMic","sendMeetingEvent","eventType","targetStreamId","eventMessage","type","sender_stream_id","timestamp","target_stream_id","sendEvent","constraints","audio","sampleRate","channelCount","echoCancellation","noiseSuppression","video","ideal","frameRate","navigator","mediaDevices","getUserMedia","getDisplayMedia","videoTrack","getVideoTracks","onended","videoOnlyStream","MediaStream","videoTracks","addTrack","initVideoEncoders","subStream","startsWith","encoder","VideoEncoder","output","chunk","metadata","handleVideoChunk","e","latencyMode","hardwareAcceleration","metadataReady","videoDecoderConfig","WebTransport","ready","createEventStream","createBidirectionalStream","readable","writable","writer","getWriter","reader","getReader","initData","TextEncoder","encode","sendOverEventStream","setupEventStreamReader","sendPublisherState","workerInterval","Worker","postMessage","interval","lastPingTime","onmessage","ping","value","done","read","msg","TextDecoder","decode","parse","data","bytes","len","out","Uint8Array","view","DataView","buffer","setUint32","write","eventData","eventJson","stateEvent","configSent","sendOverStream","setupStreamReader","frameBytes","streamData","startVideoCapture","startOpusAudioStreaming","encoderObj","configure","triggerWorker","track","MediaStreamTrackProcessor","frameCounter","cameraEncoders","Array","from","entries","filter","_","obj","result","frame","window","videoBaseTimestamp","close","keyFrame","i","quality","isLastEncoder","encodeQueueSize","frameToEncode","VideoFrame","audioTrack","getAudioTracks","audioRecorderOptions","encoderApplication","encoderComplexity","encoderFrameSize","timeSlice","audioRecorder","ondataavailable","typedArray","handleOpusAudioChunk","start","decoderConfig","codedWidth","codedHeight","description","sendStreamConfig","chunkData","ArrayBuffer","byteLength","copyTo","packet","createPacketWithHeader","dataArray","performance","audioConfig","numberOfChannels","audioStartPerfTime","Math","floor","mediaType","configPacket","vConfigUint8","vConfigBase64","uint8ArrayToBase64","aConfigBase64","adjustedTimestamp","safeTimestamp","HEADER_SIZE","MAX_TS","MIN_TS","binary","chunkSize","subarray","String","fromCharCode","apply","btoa","startShareScreen","screenStream","startEvent","screenConfig","find","s","screenEncoder","handleScreenVideoChunk","encoderConfig","screenVideoEncoder","screenAudioRecorder","handleScreenAudioChunk","screenAudioBaseTime","screenAudioSamplesSent","screenVideoProcessor","stopShareScreen","screenBaseTimestamp","stopEvent","state","flush","getTracks","screenAudioConfig","sendScreenDecoderConfigs","hasAudio","videoReady","audioReady","videoConfig","isActive","streamInfo","activeStreams","keys","Subscriber","isOwnStream","mediaWorkerUrl","audioWorkletUrl","mstgPolyfillUrl","isStarted","worker","audioWorkletNode","videoGenerator","videoWriter","mediaStream","subscriberId","audioMixer","_updateConnectionStatus","channel","MessageChannel","_loadPolyfill","_initWorker","port2","_initAudioSystem","port1","_initVideoSystem","removeSubscriber","terminate","_cleanupVideoSystem","setAudioMixer","MediaStreamTrackGenerator","channelPort","_handleWorkerMessage","mediaUrl","port","reason","addSubscriber","bufferMs","isPlaying","newBufferSize","kind","releaseLock","channelData","timeStamp","audioEnabled","_handleVideoData","previousStatus","AudioMixer","audioContext","mixerNode","outputDestination","subscriberNodes","isInitialized","outputAudioElement","masterVolume","bufferSize","enableEchoCancellation","debug","initialize","_debug","AudioContext","webkitAudioContext","latencyHint","resume","createGain","gain","createMediaStreamDestination","connect","autoplay","style","display","setAttribute","_setupErrorHandlers","isOwnAudio","channelWorkletPort","_loadAudioWorklet","workletNode","AudioWorkletNode","numberOfInputs","numberOfOutputs","outputChannelCount","gainNode","addedAt","_updateOutputAudio","_setupWorkletMessageHandler","subscriberData","disconnect","setSubscriberVolume","volume","normalizedVolume","max","min","setSubscriberMuted","muted","setMasterVolume","getOutputMediaStream","getStats","subscriberCount","size","audioContextState","subscribers","map","id","getSubscriberIds","hasSubscriber","suspend","srcObject","parentNode","removeChild","audioWorklet","addModule","includes","onstatechange","addEventListener","hidden","_sleep","ms","setTimeout","Room","code","ownerId","apiClient","mediaConfig","participants","localParticipant","subRooms","pinnedParticipant","messages","typingUsers","join","room","joinResponse","stream_id","roomDetails","_updateFromApiData","_setupParticipants","_setupMediaConnections","values","leave","_cleanupMediaConnections","_cleanupParticipants","subRoomData","subRoom","user_id","subRoomsData","switchResponse","returnToMainRoom","sendMessage","text","trim","messageId","_generateMessageId","senderId","senderName","customData","messageEvent","deleteMessage","deleteEvent","m","updateMessage","newText","updateEvent","messageIndex","findIndex","updatedAt","sendTypingIndicator","isTyping","typingEvent","getMessages","limit","slice","getTypingUsers","clearMessages","addParticipant","memberData","_setupParticipantEvents","removeParticipant","getParticipant","getParticipants","pinParticipant","unpinParticipant","unpinnedParticipant","participantCount","subRoomCount","participantsData","participantData","_setupLocalPublisher","_setupRemoteSubscriber","_setupStreamEventForwarding","webtpUrl","_handleServerEvent","streamOutputEnabled","onStatus","joinedParticipant","membership_id","sender","user","p","roomData","random","toString","substr","_removeStreamEventForwarding","SubRoom","parentRoom","maxParticipants","autoReturn","duration","startTime","isTemporary","allowSelfAssign","_setupSubRoomEvents","joinFromMain","_pauseMediaConnections","joinResult","_startDurationTimer","_resumeMediaConnections","targetSubRoom","fromSubRoom","toSubRoom","inviteParticipant","inviteToSubRoom","assignParticipant","assignToSubRoom","broadcastMessage","broadcastToSubRoom","getRemainingTime","elapsed","remaining","ceil","extendDuration","additionalMinutes","newDuration","setMaxParticipants","current","isFull","isEmpty","hasExpired","remainingTime","warningTime","remainingMinutes","_durationTimer","clearTimeout","remainingMs","_handleExpiry","serialize","participantIds","createdAt","fromSerializedData","ErmisClient","reconnectAttempts","reconnectDelay","isAuthenticated","currentRoom","rooms","defaultVideoConfig","defaultAudioConfig","channels","_setupEventHandlers","authenticate","_setConnectionStatus","emailRegex","test","tokenResponse","access_token","authenticatedAt","manualAuthenticate","logout","_ensureAuthenticated","_setupRoomEvents","autoJoin","r","getRooms","getCurrentRoom","getRoom","joinSubRoom","sr","mainRoom","previousSubRoom","switchSubRoom","targetSubRoomCode","currentSubRoom","to","getState","roomCount","getConfig","updateConfig","newConfig","enableDebug","disableDebug","eventsToForward","_attemptReconnect","attempts","VERSION","ErmisClassroom","create","serverUrl","replace","client","version","events","CLIENT_AUTHENTICATED","CLIENT_AUTHENTICATION_FAILED","CLIENT_LOGGED_OUT","CLIENT_CONNECTION_STATUS_CHANGED","ROOM_CREATED","ROOM_JOINED","ROOM_LEFT","PARTICIPANT_ADDED","PARTICIPANT_REMOVED","PARTICIPANT_PINNED","PARTICIPANT_UNPINNED","AUDIO_TOGGLED","VIDEO_TOGGLED","REMOTE_AUDIO_STATUS_CHANGED","REMOTE_VIDEO_STATUS_CHANGED","SCREEN_SHARE_STARTED","SCREEN_SHARE_STOPPED","REMOTE_SCREEN_SHARE_STARTED","REMOTE_SCREEN_SHARE_STOPPED","PARTICIPANT_PINNED_FOR_EVERYONE","PARTICIPANT_UNPINNED_FOR_EVERYONE","SUB_ROOM_CREATED","SUB_ROOM_JOINED","SUB_ROOM_LEFT","SUB_ROOM_SWITCHED","LOCAL_STREAM_READY","REMOTE_STREAM_READY","STREAM_REMOVED","MESSAGE_SENT","MESSAGE_RECEIVED","MESSAGE_DELETED","MESSAGE_UPDATED","TYPING_STARTED","TYPING_STOPPED","CHAT_HISTORY_LOADED","ERROR","MediaDevices","getDevices","enumerateDevices","devices","cameras","d","microphones","speakers","checkPermissions","permissions","camera","query","microphone","RoomTypes","MAIN","BREAKOUT","PRESENTATION","DISCUSSION","ConnectionStatus","DISCONNECTED","CONNECTING","CONNECTED","FAILED","ParticipantRoles","OWNER","MODERATOR","PARTICIPANT","OBSERVER","wasm","cachedTextDecoder","ignoreBOM","fatal","cachedUint8ArrayMemory0","getUint8ArrayMemory0","memory","getStringFromWasm0","ptr","WASM_VECTOR_LEN","passArray8ToWasm0","arg","malloc","WasmEncoderFinalization","FinalizationRegistry","register","unregister","__wbg_wasmencoder_free","__destroy_into_raw","__wbg_ptr","free","mtu","ptr0","__wbindgen_malloc","len0","ret","wasmencoder_new","repair_packets_count","wasmencoder_encode","getMTU","wasmencoder_getMTU","getConfigBuffer","wasmencoder_getConfigBuffer","__wbg_load","module","imports","Response","WebAssembly","instantiateStreaming","arrayBuffer","instantiate","instance","Instance","__wbg_get_imports","wbg","__wbg_buffer_609cc3eee51ed158","arg0","__wbg_length_a446193dc22c12f8","__wbg_new_78feb108b6472713","__wbg_newwithbyteoffsetandlength_d97e637ebe145a9a","arg1","arg2","__wbg_newwithlength_a381634e90c276d4","__wbg_push_737cfc8c1432c2c6","__wbg_set_65595bdd868b3009","__wbindgen_init_externref_table","table","__wbindgen_export_0","offset","grow","__wbindgen_memory","__wbindgen_throw","__wbg_finalize_init","exports","__wbg_init","__wbindgen_wasm_module","__wbindgen_start","module_or_path","Object","getPrototypeOf","prototype","URL","import","meta","url","Request"],"mappings":"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"}