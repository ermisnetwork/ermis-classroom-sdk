/**
 * ermis-classroom-sdk v1.0.2
 * Ermis Classroom SDK for virtual classroom and meeting integration
 * 
 * @author Ermis Team <developer@ermis.network>
 * @license MIT
 * @homepage https://github.com/ermisnetwork/ermis-classroom-sdk#readme
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).ErmisClassroom={})}(this,function(t){"use strict";var e="undefined"!=typeof document?document.currentScript:null;var i=class{constructor(){this._events=new Map}on(t,e){return this._events.has(t)||this._events.set(t,[]),this._events.get(t).push(e),this}off(t,e){if(!this._events.has(t))return this;const i=this._events.get(t),s=i.indexOf(e);return-1!==s&&i.splice(s,1),0===i.length&&this._events.delete(t),this}emit(t,...e){if(!this._events.has(t))return!1;return this._events.get(t).forEach(t=>{try{t(...e)}catch(t){}}),!0}once(t,e){const i=(...s)=>{this.off(t,i),e(...s)};return this.on(t,i)}removeAllListeners(t){return t?this._events.delete(t):this._events.clear(),this}listenerCount(t){return this._events.has(t)?this._events.get(t).length:0}};var s=class{constructor(t){this.host=t.host||"daibo.ermis.network:9992",this.apiBaseUrl=t.apiUrl||`https://${this.host}/meeting`,this.jwtToken=null,this.userId=null}setAuth(t,e){this.jwtToken=t,this.userId=e}async apiCall(t,e="GET",i=null){if(!this.userId)throw new Error("Please authenticate first");if(!this.jwtToken)throw new Error("JWT token not found");const s={method:e,headers:{Authorization:`Bearer ${this.jwtToken}`,"Content-Type":"application/json"}};i&&(s.body=JSON.stringify(i));try{const e=await fetch(`${this.apiBaseUrl}${t}`,s);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return await e.json()}catch(t){throw t}}async getDummyToken(t){const e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({sub:t})};try{const t=await fetch(`${this.apiBaseUrl}/get-token`,e);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return await t.json()}catch(t){throw t}}async createRoom(t,e="main"){return await this.apiCall("/rooms","POST",{room_name:t,room_type:e})}async listRooms(t=1,e=20){return await this.apiCall("/rooms/list","POST",{list_query:{page:t,per_page:e,sort_by:"created_at",sort_order:"desc"},conditions:{is_active:!0}})}async getRoomById(t){return await this.apiCall(`/rooms/${t}`)}async joinRoom(t,e="Ermis-Meeting"){return await this.apiCall("/rooms/join","POST",{room_code:t,app_name:e})}async createSubRoom(t,e,i="breakout"){return await this.apiCall("/rooms","POST",{room_name:e,room_type:i,parent_room_id:t})}async getSubRooms(t){return await this.apiCall(`/rooms/${t}/sub-rooms`)}async leaveRoom(t,e){return await this.apiCall(`/rooms/${t}/members/${e}`,"DELETE")}async switchToSubRoom(t,e){return await this.apiCall("/rooms/switch","POST",{room_id:t,sub_room_code:e})}async getRoomMembers(t){return await this.apiCall(`/rooms/${t}/members`)}async updateRoom(t,e){return await this.apiCall(`/rooms/${t}`,"PATCH",e)}async deleteRoom(t){return await this.apiCall(`/rooms/${t}`,"DELETE")}};var r=class extends i{constructor(t){super(),this.userId=t.userId,this.streamId=t.streamId,this.membershipId=t.membershipId,this.role=t.role||"participant",this.roomId=t.roomId,this.isLocal=t.isLocal||!1,this.isAudioEnabled=!0,this.isVideoEnabled=!0,this.isPinned=!1,this.isHandRaised=!1,this.publisher=null,this.subscriber=null,this.isScreenSharing=t.isScreenSharing||!1,this.screenSubscriber=null,this.connectionStatus="disconnected"}getDisplayName(){const t="owner"===this.role?" (Host)":"",e=this.isLocal?" (You)":"";return`${this.userId}${t}${e}`}async toggleMicrophone(){if(this.isLocal&&this.publisher)try{await this.publisher.toggleMic(),this.isAudioEnabled=!this.isAudioEnabled,this.emit("audioToggled",{participant:this,enabled:this.isAudioEnabled})}catch(t){this.emit("error",{participant:this,error:t,action:"toggleMicrophone"})}}async toggleCamera(){if(this.isLocal&&this.publisher)try{await this.publisher.toggleCamera(),this.isVideoEnabled=!this.isVideoEnabled,this.emit("videoToggled",{participant:this,enabled:this.isVideoEnabled})}catch(t){this.emit("error",{participant:this,error:t,action:"toggleCamera"})}}async toggleRemoteAudio(){if(!this.isLocal&&this.subscriber)try{await this.subscriber.toggleAudio(),this.isAudioEnabled=!this.isAudioEnabled,this.emit("remoteAudioToggled",{participant:this,enabled:this.isAudioEnabled})}catch(t){this.emit("error",{participant:this,error:t,action:"toggleRemoteAudio"})}}togglePin(){this.isLocal||(this.isPinned?this.subscriber?.switchBitrate("360p"):this.subscriber?.switchBitrate("720p")),this.isPinned=!this.isPinned,this.emit("pinToggled",{participant:this,pinned:this.isPinned})}async toggleRaiseHand(){if(this.isLocal&&this.publisher)try{this.isHandRaised?await this.publisher.lowerHand():await this.publisher.raiseHand(),this.isHandRaised=!this.isHandRaised,this.emit("handRaiseToggled",{participant:this,enabled:this.isHandRaised})}catch(t){this.emit("error",{participant:this,error:t,action:"toggleRaiseHand"})}}setConnectionStatus(t){this.connectionStatus=t,this.emit("statusChanged",{participant:this,status:t})}_getStatusText(t){switch(t){case"connecting":return"Connecting...";case"connected":return"Connected";case"disconnected":return"Disconnected";case"failed":return"Connection Failed";default:return t}}setPublisher(t){this.publisher=t,t&&this.setConnectionStatus("connected")}setSubscriber(t){this.subscriber=t,t&&this.setConnectionStatus("connected")}updateMicStatus(t){this.isAudioEnabled=t,this.emit("remoteAudioStatusChanged",{participant:this,enabled:this.isAudioEnabled})}updateCameraStatus(t){this.isVideoEnabled=t,this.emit("remoteVideoStatusChanged",{participant:this,enabled:this.isVideoEnabled})}updateHandRaiseStatus(t){this.isHandRaised=t,this.emit("remoteHandRaisingStatusChanged",{participant:this,enabled:this.isHandRaised})}cleanup(){this.publisher&&(this.publisher.stop(),this.publisher=null),this.subscriber&&(this.subscriber.stop(),this.subscriber=null),this.screenSubscriber&&(this.screenSubscriber.stop(),this.screenSubscriber=null),this.setConnectionStatus("disconnected"),this.removeAllListeners(),this.emit("cleanup",{participant:this})}getInfo(){return{userId:this.userId,streamId:this.streamId,membershipId:this.membershipId,role:this.role,isLocal:this.isLocal,isAudioEnabled:this.isAudioEnabled,isVideoEnabled:this.isVideoEnabled,isHandRaised:this.isHandRaised,isPinned:this.isPinned,isScreenSharing:this.isScreenSharing,connectionStatus:this.connectionStatus}}};class a extends i{constructor(t={}){if(super(),!t.publishUrl)throw new Error("publishUrl is required");this.publishUrl=t.publishUrl,this.streamType=t.streamType||"camera",this.streamId=t.streamId||"test_stream",this.currentConfig={codec:"avc1.640c34",width:t.width||1280,height:t.height||720,framerate:t.framerate||30,bitrate:t.bitrate||15e5},this.kSampleRate=48e3,this.opusBaseTime=0,this.opusSamplesSent=0,this.opusSamplesPerChunk=960,this.opusChunkCount=0,this.stream=null,this.audioProcessor=null,this.videoProcessor=null,this.webTransport=null,this.isChannelOpen=!1,this.sequenceNumber=0,this.isPublishing=!1,this.cameraEnabled=!0,this.micEnabled=!0,this.isHandRaised=!1,this.hasCamera=void 0===t.hasCamera||t.hasCamera,this.hasMic=void 0===t.hasMic||t.hasMic,this.onStatusUpdate=t.onStatusUpdate||((t,e)=>{}),this.onStreamStart=t.onStreamStart||(()=>{}),this.onStreamStop=t.onStreamStop||(()=>{}),this.onServerEvent=t.onServerEvent||(t=>{}),this.wasmInitialized=!1,this.wasmInitializing=!1,this.wasmInitPromise=null,this.initAudioRecorder=null,this.WasmEncoder=null,this.publishStreams=new Map,this.videoEncoders=new Map,this.eventStream=null,this.subStreams=[{name:"high",width:1280,height:720,bitrate:8e5,framerate:30,channelName:"cam_720p"},{name:"low",width:640,height:360,bitrate:4e5,framerate:30,channelName:"cam_360p"},{name:"screen",width:1920,height:1080,bitrate:2e6,framerate:30,channelName:"screen_share_1080p"},{name:"microphone",channelName:"mic_48k"}]}async init(){await this.loadAllDependencies(),this.onStatusUpdate("Publisher initialized successfully")}async loadAllDependencies(){try{if(document.querySelector('script[src*="MSTP_polyfill.js"]')||await new Promise((t,e)=>{const i=document.createElement("script");i.src="../polyfills/MSTP_polyfill.js",i.onload=()=>t(),i.onerror=()=>e(new Error("Failed to load MSTP polyfill")),document.head.appendChild(i)}),!this.wasmInitialized)if(this.wasmInitializing&&this.wasmInitPromise)await this.wasmInitPromise;else{this.wasmInitializing=!0;const{default:t,WasmEncoder:e}=await Promise.resolve().then(function(){return R});this.WasmEncoder=e,this.wasmInitPromise=t("../raptorQ/raptorq_wasm_bg.wasm").then(()=>{this.wasmInitialized=!0,this.wasmInitializing=!1}).catch(t=>{throw this.wasmInitializing=!1,new Error("Failed to load WASM encoder module")}),await this.wasmInitPromise}const t=await import(`/opus_decoder/opusDecoder.js?t=${Date.now()}`);this.initAudioRecorder=t.initAudioRecorder,this.onStatusUpdate("All dependencies loaded successfully")}catch(t){throw this.onStatusUpdate(`Dependency loading error: ${t.message}`,!0),t}}async startPublishing(){if(this.isPublishing)this.onStatusUpdate("Already publishing",!0);else{await this.init(),await this.setupConnection();try{await this.getMediaStream(),this.isPublishing=!0,await this.startStreaming(),this.onStreamStart(),this.onStatusUpdate("Publishing started successfully")}catch(t){throw this.onStatusUpdate(`Failed to start publishing: ${t.message}`,!0),t}}}async toggleCamera(){this.cameraEnabled?await this.turnOffCamera():await this.turnOnCamera()}async toggleMic(){this.micEnabled?await this.turnOffMic():await this.turnOnMic()}async toggleRaiseHand(){return this.isHandRaised||!1?(await this.lowerHand(),this.isHandRaised=!1):(await this.raiseHand(),this.isHandRaised=!0),this.isHandRaised}async turnOffCamera(){this.cameraEnabled&&(this.cameraEnabled=!1,this.onStatusUpdate("Camera turned off"),await this.sendMeetingEvent("camera_off"))}async turnOnCamera(){this.cameraEnabled||(this.cameraEnabled=!0,this.onStatusUpdate("Camera turned on"),await this.sendMeetingEvent("camera_on"))}async turnOffMic(){this.micEnabled&&(this.micEnabled=!1,this.onStatusUpdate("Mic turned off"),await this.sendMeetingEvent("mic_off"))}async turnOnMic(){this.micEnabled||(this.micEnabled=!0,this.onStatusUpdate("Mic turned on"),await this.sendMeetingEvent("mic_on"))}async pinForEveryone(t){await this.sendMeetingEvent("pin_for_everyone",t)}async unpinForEveryone(t){await this.sendMeetingEvent("unpin_for_everyone",t)}async raiseHand(){this.isHandRaised||(this.isHandRaised=!0,await this.sendMeetingEvent("raise_hand"),this.onStatusUpdate("Hand raised"))}async lowerHand(){this.isHandRaised&&(this.isHandRaised=!1,await this.sendMeetingEvent("lower_hand"),this.onStatusUpdate("Hand lowered"))}async sendMeetingEvent(t,e=null){if(!t)return;if(!this.isChannelOpen||!this.eventStream)return;const i={type:t,sender_stream_id:this.streamId,timestamp:Date.now()};"pin_for_everyone"!==t&&"unpin_for_everyone"!==t||!e||(i.target_stream_id=e);try{await this.sendEvent(i)}catch(e){this.onStatusUpdate(`Failed to notify server about ${t}`,!0)}}async getMediaStream(){if("camera"===this.streamType){const t={audio:{sampleRate:this.kSampleRate,channelCount:1,echoCancellation:!0,noiseSuppression:!0},video:{width:{ideal:this.currentConfig.width},height:{ideal:this.currentConfig.height},frameRate:{ideal:this.currentConfig.framerate}}};try{this.stream=await navigator.mediaDevices.getUserMedia(t)}catch(t){}}else if("display"===this.streamType){this.stream=await navigator.mediaDevices.getDisplayMedia({video:!0,audio:!0});const t=this.stream.getVideoTracks()[0];t&&(t.onended=()=>{this.stop()})}const t=new MediaStream,e=this.stream.getVideoTracks();e.length>0&&t.addTrack(e[0]),this.emit("localStreamReady",{stream:this.stream,videoOnlyStream:t,streamType:this.streamType,streamId:this.streamId,config:this.currentConfig}),this.onStatusUpdate(`${this.streamType} stream ready`)}initVideoEncoders(){this.subStreams.forEach(t=>{if(!t.channelName.startsWith("mic")){const e=new VideoEncoder({output:(e,i)=>this.handleVideoChunk(e,i,t.name,t.channelName),error:e=>this.onStatusUpdate(`Encoder ${t.name} error: ${e.message}`,!0)});this.videoEncoders.set(t.name,{encoder:e,channelName:t.channelName,config:{codec:this.currentConfig.codec,width:t.width,height:t.height,bitrate:t.bitrate,framerate:this.currentConfig.framerate,latencyMode:"realtime",hardwareAcceleration:"prefer-hardware"},metadataReady:!1,videoDecoderConfig:null})}})}async setupConnection(){this.webTransport=new WebTransport(this.publishUrl),await this.webTransport.ready,await this.createEventStream();for(const t of this.subStreams)t.channelName.startsWith("screen")||await this.createBidirectionalStream(t.channelName);this.isChannelOpen=!0,this.onStatusUpdate("WebTransport connection established with event stream and media streams")}async createEventStream(){const t=await this.webTransport.createBidirectionalStream(),e=t.readable,i=t.writable.getWriter(),s=e.getReader();this.eventStream={writer:i,reader:s};const r=(new TextEncoder).encode("meeting_control");await this.sendOverEventStream(r),this.setupEventStreamReader(s),await this.sendPublisherState();const a=new Worker("polyfills/intervalWorker.js");a.postMessage({interval:1e3});let o=Date.now();a.onmessage=t=>{const e=(new TextEncoder).encode("ping");this.sendOverEventStream(e),Date.now(),o=Date.now()}}setupEventStreamReader(t){(async()=>{try{for(;;){const{value:e,done:i}=await t.read();if(i)break;if(e){const t=(new TextDecoder).decode(e);try{const e=JSON.parse(t);this.onServerEvent(e)}catch(t){}}}}catch(t){}})()}async sendOverEventStream(t){if(this.eventStream)try{const e="string"==typeof t?(new TextEncoder).encode(t):t,i=e.length,s=new Uint8Array(4+i);new DataView(s.buffer).setUint32(0,i,!1),s.set(e,4),await this.eventStream.writer.write(s)}catch(t){throw t}}async sendEvent(t){const e=JSON.stringify(t);await this.sendOverEventStream(e)}async sendPublisherState(){const t={type:"PublisherState",streamId:this.streamId,hasCamera:this.hasCamera,hasMic:this.hasMic,cameraEnabled:!!this.hasCamera&&this.cameraEnabled,micEnabled:!!this.hasMic&&this.micEnabled,streamType:this.streamType,timestamp:Date.now()};await this.sendEvent(t),this.onStatusUpdate("Publisher state sent to server")}async createBidirectionalStream(t){const e=await this.webTransport.createBidirectionalStream(),i=e.readable,s=e.writable.getWriter(),r=i.getReader();this.publishStreams.set(t,{writer:s,reader:r,configSent:!1,config:null});const a=(new TextEncoder).encode(t);await this.sendOverStream(t,a),this.setupStreamReader(t,r)}setupStreamReader(t,e){(async()=>{try{for(;;){const{value:t,done:i}=await e.read();if(i)break;if(t){const e=(new TextDecoder).decode(t);e.startsWith("ack:")||e.startsWith("config:")}}}catch(t){}})()}async sendOverStream(t,e){const i=this.publishStreams.get(t);if(i)try{const t=e.length,s=new Uint8Array(4+t);new DataView(s.buffer).setUint32(0,t,!1),s.set(e,4),await i.writer.write(s)}catch(t){throw t}}async startStreaming(){await this.startVideoCapture(),this.audioProcessor=await this.startOpusAudioStreaming()}async startVideoCapture(){if(!this.stream)throw new Error("No media stream available");this.initVideoEncoders(),this.videoEncoders.forEach(t=>{t.encoder.configure(t.config)});const t=new Worker("polyfills/triggerWorker.js");t.postMessage({frameRate:this.currentConfig.framerate});const e=this.stream.getVideoTracks()[0];this.videoProcessor=new MediaStreamTrackProcessor(e,t,!0);const i=this.videoProcessor.readable.getReader();let s=0;const r=Array.from(this.videoEncoders.entries()).filter(([t,e])=>e.channelName.startsWith("cam"));(async()=>{try{for(;this.isPublishing;){const t=await i.read();if(t.done)break;const e=t.value;if(window.videoBaseTimestamp||(window.videoBaseTimestamp=e.timestamp),!this.cameraEnabled){e.close();continue}s++;const a=s%30==0;for(let t=0;t<r.length;t++){const[i,s]=r[t],o=t===r.length-1;if(s.encoder.encodeQueueSize<=2){const t=o?e:new VideoFrame(e);s.encoder.encode(t,{keyFrame:a}),t.close()}}}}catch(t){this.onStatusUpdate(`Video processing error: ${t.message}`,!0)}})()}async startOpusAudioStreaming(){if(!this.stream)throw new Error("No media stream available");const t=this.stream.getAudioTracks()[0];if(!t)throw new Error("No audio track found in stream");const e={encoderApplication:2051,encoderComplexity:0,encoderFrameSize:20,timeSlice:100},i=await this.initAudioRecorder(t,e);return i.ondataavailable=t=>this.handleOpusAudioChunk(t,"mic_48k"),await i.start({timeSlice:e.timeSlice}),i}handleVideoChunk(t,e,i,s){const r=this.videoEncoders.get(i);if(!r)return;const a=this.publishStreams.get(s);if(!a)return;if(e&&e.decoderConfig&&!r.metadataReady&&(r.videoDecoderConfig={codec:e.decoderConfig.codec,codedWidth:e.decoderConfig.codedWidth,codedHeight:e.decoderConfig.codedHeight,frameRate:this.currentConfig.framerate,description:e.decoderConfig.description},r.metadataReady=!0,this.sendStreamConfig(s,r.videoDecoderConfig,"video")),!a.configSent)return;const o=new ArrayBuffer(t.byteLength);let n;switch(t.copyTo(o),s){case"cam_360p":n="key"===t.type?0:1;break;case"cam_720p":n="key"===t.type?2:3;break;case"screen_share_1080p":n="key"===t.type?4:5;break;default:n=8}const h=this.createPacketWithHeader(o,t.timestamp,n);this.sendOverStream(s,h),this.sequenceNumber++}handleOpusAudioChunk(t,e){if(!this.micEnabled)return;if(!this.isChannelOpen||!t||0===t.byteLength)return;const i=this.publishStreams.get(e);if(i)try{const s=new Uint8Array(t);if(s.length>=4&&79===s[0]&&103===s[1]&&103===s[2]&&83===s[3]){if(!i.configSent&&!i.config){const t={codec:"opus",sampleRate:48e3,numberOfChannels:1,description:this.createPacketWithHeader(s,1e3*performance.now(),6)};i.config=t,this.sendStreamConfig(e,t,"audio")}0===this.opusBaseTime&&window.videoBaseTimestamp?(this.opusBaseTime=window.videoBaseTimestamp,window.audioStartPerfTime=performance.now(),this.opusSamplesSent=0,this.opusChunkCount=0):0!==this.opusBaseTime||window.videoBaseTimestamp||(this.opusBaseTime=1e3*performance.now(),this.opusSamplesSent=0,this.opusChunkCount=0);const t=this.opusBaseTime+Math.floor(1e6*this.opusSamplesSent/this.kSampleRate);if(i.configSent){const i=this.createPacketWithHeader(s,t,6);this.sendOverStream(e,i)}}}catch(t){}}async sendStreamConfig(t,e,i){const s=this.publishStreams.get(t);if(s&&!s.configSent)try{let r;if("video"===i){const i=new Uint8Array(e.description),s=this.uint8ArrayToBase64(i);r={type:"StreamConfig",channelName:t,mediaType:"video",config:{codec:e.codec,codedWidth:e.codedWidth,codedHeight:e.codedHeight,frameRate:e.frameRate,quality:e.quality,description:s}}}else if("audio"===i){const i=this.uint8ArrayToBase64(new Uint8Array(e.description));r={type:"StreamConfig",channelName:t,mediaType:"audio",config:{codec:e.codec,sampleRate:e.sampleRate,numberOfChannels:e.numberOfChannels,description:i}}}const a=(new TextEncoder).encode(JSON.stringify(r));await this.sendOverStream(t,a),s.configSent=!0,s.config=e,this.onStatusUpdate(`Config sent for stream: ${t}`)}catch(t){}}createPacketWithHeader(t,e,i){let s=e;window.videoBaseTimestamp&&(s=e-window.videoBaseTimestamp);let r=Math.floor(s/1e3);r<0&&(r=0);const a=4294967295;r>a&&(r=a),r<0&&(r=0);const o=new Uint8Array(5+(t instanceof ArrayBuffer?t.byteLength:t.length));o[4]=i;return new DataView(o.buffer,0,4).setUint32(0,r,!1),o.set(t instanceof ArrayBuffer?new Uint8Array(t):t,5),o}uint8ArrayToBase64(t){let e="";for(let i=0;i<t.length;i+=32768){const s=t.subarray(i,i+32768);e+=String.fromCharCode.apply(null,s)}return btoa(e)}async startShareScreen(t){if(!t)throw new Error("No stream provided for screen sharing");this.screenStream=t,this.isScreenSharing=!0;const e="screen_share_1080p";try{await this.createBidirectionalStream(e);const i={type:"start_share_screen",sender_stream_id:this.streamId};await this.sendEvent(i);const s=t.getVideoTracks()[0],r=t.getAudioTracks()[0];if(!s)throw new Error("No video track found in screen share stream");const a=this.subStreams.find(t=>t.channelName===e),o=new VideoEncoder({output:(t,i)=>this.handleScreenVideoChunk(t,i,e),error:t=>this.onStatusUpdate(`Screen encoder error: ${t.message}`,!0)}),n={codec:this.currentConfig.codec,width:a.width,height:a.height,bitrate:a.bitrate,framerate:a.framerate,latencyMode:"realtime",hardwareAcceleration:"prefer-hardware"};if(o.configure(n),this.screenVideoEncoder={encoder:o,config:n,metadataReady:!1,videoDecoderConfig:null},r){const t={encoderApplication:2051,encoderComplexity:0,encoderFrameSize:20,timeSlice:100};this.screenAudioRecorder=await this.initAudioRecorder(r,t),this.screenAudioRecorder.ondataavailable=t=>this.handleScreenAudioChunk(t,e),await this.screenAudioRecorder.start({timeSlice:t.timeSlice}),this.screenAudioBaseTime=0,this.screenAudioSamplesSent=0}const h=new Worker("polyfills/triggerWorker.js");h.postMessage({frameRate:a.framerate}),this.screenVideoProcessor=new MediaStreamTrackProcessor(s,h,!0);const c=this.screenVideoProcessor.readable.getReader();let d=0;s.onended=()=>{this.stopShareScreen()},(async()=>{try{for(;this.isScreenSharing;){const t=await c.read();if(t.done)break;const e=t.value;window.screenBaseTimestamp||(window.screenBaseTimestamp=e.timestamp),d++;const i=d%30==0;this.screenVideoEncoder.encoder.encodeQueueSize<=2&&this.screenVideoEncoder.encoder.encode(e,{keyFrame:i}),e.close()}}catch(t){this.onStatusUpdate(`Screen share video error: ${t.message}`,!0)}})(),this.onStatusUpdate("Screen sharing started")}catch(t){throw this.onStatusUpdate(`Failed to start screen share: ${t.message}`,!0),this.stopShareScreen(),t}}async stopShareScreen(){if(this.isScreenSharing)try{this.isScreenSharing=!1;const t="screen_share_1080p",e={type:"stop_share_screen",sender_stream_id:this.streamId};await this.sendEvent(e),this.screenVideoEncoder&&this.screenVideoEncoder.encoder&&("closed"!==this.screenVideoEncoder.encoder.state&&(await this.screenVideoEncoder.encoder.flush(),this.screenVideoEncoder.encoder.close()),this.screenVideoEncoder=null),this.screenAudioRecorder&&"function"==typeof this.screenAudioRecorder.stop&&(await this.screenAudioRecorder.stop(),this.screenAudioRecorder=null);const i=this.publishStreams.get(t);i&&i.writer&&(await i.writer.close(),this.publishStreams.delete(t)),this.screenStream&&(this.screenStream.getTracks().forEach(t=>t.stop()),this.screenStream=null),this.screenAudioBaseTime=0,this.screenAudioSamplesSent=0,this.screenAudioConfig=null,window.screenBaseTimestamp=null,this.onStatusUpdate("Screen sharing stopped")}catch(t){throw this.onStatusUpdate(`Error stopping screen share: ${t.message}`,!0),t}}handleScreenVideoChunk(t,e,i){if(!this.screenVideoEncoder)return;const s=this.publishStreams.get(i);if(!s)return;if(e&&e.decoderConfig&&!this.screenVideoEncoder.metadataReady&&(this.screenVideoEncoder.videoDecoderConfig={codec:e.decoderConfig.codec,codedWidth:e.decoderConfig.codedWidth,codedHeight:e.decoderConfig.codedHeight,frameRate:this.screenVideoEncoder.config.framerate,description:e.decoderConfig.description},this.screenVideoEncoder.metadataReady=!0,this.sendScreenDecoderConfigs(i)),!s.configSent)return;const r=new ArrayBuffer(t.byteLength);t.copyTo(r);const a="key"===t.type?4:5,o=this.createPacketWithHeader(r,t.timestamp,a);this.sendOverStream(i,o)}handleScreenAudioChunk(t,e){if(!this.isScreenSharing||!t||0===t.byteLength)return;const i=this.publishStreams.get(e);if(i)try{const s=new Uint8Array(t);if(s.length>=4&&79===s[0]&&103===s[1]&&103===s[2]&&83===s[3]){if(!this.screenAudioConfig){const t=this.createPacketWithHeader(s,1e3*performance.now(),6);this.screenAudioConfig={codec:"opus",sampleRate:48e3,numberOfChannels:2,description:t},this.sendScreenDecoderConfigs(e)}0===this.screenAudioBaseTime&&window.screenBaseTimestamp?(this.screenAudioBaseTime=window.screenBaseTimestamp,this.screenAudioSamplesSent=0):0!==this.screenAudioBaseTime||window.screenBaseTimestamp||(this.screenAudioBaseTime=1e3*performance.now(),this.screenAudioSamplesSent=0);const t=this.screenAudioBaseTime+Math.floor(1e6*this.screenAudioSamplesSent/48e3);if(i.configSent){const i=this.createPacketWithHeader(s,t,6);this.sendOverStream(e,i)}this.screenAudioSamplesSent+=960}}catch(t){}}async sendScreenDecoderConfigs(t){const e=this.publishStreams.get(t);if(!e||e.configSent)return;const i=null!==this.screenAudioRecorder,s=this.screenVideoEncoder&&this.screenVideoEncoder.metadataReady,r=!i||this.screenAudioConfig;if(s&&r)try{const i=new Uint8Array(this.screenVideoEncoder.videoDecoderConfig.description),s=this.uint8ArrayToBase64(i),r={type:"DecoderConfigs",channelName:t,videoConfig:{codec:this.screenVideoEncoder.videoDecoderConfig.codec,codedWidth:this.screenVideoEncoder.videoDecoderConfig.codedWidth,codedHeight:this.screenVideoEncoder.videoDecoderConfig.codedHeight,frameRate:this.screenVideoEncoder.videoDecoderConfig.frameRate,description:s}};if(this.screenAudioConfig){const t=this.uint8ArrayToBase64(new Uint8Array(this.screenAudioConfig.description));r.audioConfig={codec:this.screenAudioConfig.codec,sampleRate:this.screenAudioConfig.sampleRate,numberOfChannels:this.screenAudioConfig.numberOfChannels,description:t}}const a=(new TextEncoder).encode(JSON.stringify(r));await this.sendOverStream(t,a),e.configSent=!0,this.onStatusUpdate(`Screen share configs sent for: ${t}`)}catch(t){}}async stop(){if(this.isPublishing)try{this.isPublishing=!1,this.isScreenSharing&&await this.stopShareScreen();for(const[t,e]of this.videoEncoders)e.encoder&&"closed"!==e.encoder.state&&(await e.encoder.flush(),e.encoder.close());this.videoEncoders.clear(),this.audioProcessor&&"function"==typeof this.audioProcessor.stop&&(await this.audioProcessor.stop(),this.audioProcessor=null);for(const[t,e]of this.publishStreams)e.writer&&await e.writer.close();this.publishStreams.clear(),this.eventStream&&this.eventStream.writer&&(await this.eventStream.writer.close(),this.eventStream=null),this.webTransport&&(this.webTransport.close(),this.webTransport=null),this.stream&&(this.stream.getTracks().forEach(t=>t.stop()),this.stream=null),this.isChannelOpen=!1,this.sequenceNumber=0,this.opusBaseTime=0,this.opusSamplesSent=0,this.opusChunkCount=0,window.videoBaseTimestamp=null,window.audioStartPerfTime=null,this.onStreamStop(),this.onStatusUpdate("Publishing stopped")}catch(t){throw this.onStatusUpdate(`Error stopping publishing: ${t.message}`,!0),t}}get isActive(){return this.isPublishing}get streamInfo(){return{streamType:this.streamType,config:this.currentConfig,sequenceNumber:this.sequenceNumber,activeStreams:Array.from(this.publishStreams.keys())}}}var o=class extends i{constructor(t){super(),this.streamId=t.streamId||"",this.roomId=t.roomId||"",this.host=t.host||"stream-gate.bandia.vn",this.isOwnStream=t.isOwnStream||!1,this.mediaWorkerUrl=t.mediaWorkerUrl||"workers/media-worker-ab.js",this.audioWorkletUrl=t.audioWorkletUrl||"workers/audio-worklet1.js",this.mstgPolyfillUrl=t.mstgPolyfillUrl||"polyfills/MSTG_polyfill.js",this.isStarted=!1,this.isAudioEnabled=!0,this.connectionStatus="disconnected",this.worker=null,this.audioWorkletNode=null,this.videoGenerator=null,this.videoWriter=null,this.mediaStream=null,this.subscriberId=`subscriber_${this.streamId}_${Date.now()}`,this.audioMixer=null}async start(){if(this.isStarted)throw new Error("Subscriber already started");try{this.emit("starting",{subscriber:this}),this._updateConnectionStatus("connecting");const t=new MessageChannel;await this._loadPolyfill(),await this._initWorker(t.port2),await this._initAudioSystem(t.port1),this._initVideoSystem(),this.isStarted=!0,this._updateConnectionStatus("connected"),this.emit("started",{subscriber:this})}catch(t){throw this._updateConnectionStatus("failed"),this.emit("error",{subscriber:this,error:t,action:"start"}),t}}stop(){if(this.isStarted)try{this.emit("stopping",{subscriber:this}),this.audioMixer&&this.audioMixer.removeSubscriber(this.subscriberId),this.worker&&(this.worker.terminate(),this.worker=null),this.mediaStream&&this.emit("streamRemoved",{streamId:this.streamId,subscriberId:this.subscriberId,roomId:this.roomId}),this._cleanupVideoSystem(),this.audioWorkletNode=null,this.mediaStream=null,this.isStarted=!1,this._updateConnectionStatus("disconnected"),this.emit("stopped",{subscriber:this})}catch(t){this.emit("error",{subscriber:this,error:t,action:"stop"})}}async toggleAudio(){if(!this.isStarted||!this.worker)throw new Error("Subscriber not started");try{return this.worker.postMessage({type:"toggleAudio"}),this.isAudioEnabled=!this.isAudioEnabled,this.emit("audioToggled",{subscriber:this,enabled:this.isAudioEnabled}),this.isAudioEnabled}catch(t){throw this.emit("error",{subscriber:this,error:t,action:"toggleAudio"}),t}}setAudioMixer(t){this.audioMixer=t}getInfo(){return{subscriberId:this.subscriberId,streamId:this.streamId,roomId:this.roomId,host:this.host,isOwnStream:this.isOwnStream,isStarted:this.isStarted,isAudioEnabled:this.isAudioEnabled,connectionStatus:this.connectionStatus}}async _loadPolyfill(){if(!window.MediaStreamTrackGenerator)try{await import(this.mstgPolyfillUrl)}catch(t){}}async _initWorker(t){try{this.worker=new Worker(`${this.mediaWorkerUrl}?t=${Date.now()}`,{type:"module"}),this.worker.onmessage=t=>this._handleWorkerMessage(t),this.worker.onerror=t=>{this.emit("error",{subscriber:this,error:new Error(`Media Worker error: ${t.message}`),action:"workerError"})};const e=`wss://sfu-adaptive-bitrate.ermis-network.workers.dev/meeting/${this.roomId}/${this.streamId}`;this.worker.postMessage({type:"init",data:{mediaUrl:e},port:t,quality:"360p"},[t])}catch(t){throw new Error(`Worker initialization failed: ${t.message}`)}}switchBitrate(t){this.worker&&this.worker.postMessage({type:"switchBitrate",quality:t})}async _initAudioSystem(t){try{if(this.isOwnStream)return void this.emit("audioSkipped",{subscriber:this,reason:"Own stream - preventing echo"});this.audioMixer&&(this.audioWorkletNode=await this.audioMixer.addSubscriber(this.subscriberId,this.audioWorkletUrl,this.isOwnStream,t),this.audioWorkletNode&&(this.audioWorkletNode.port.onmessage=t=>{const{type:e,bufferMs:i,isPlaying:s,newBufferSize:r}=t.data;this.emit("audioStatus",{subscriber:this,type:e,bufferMs:i,isPlaying:s,newBufferSize:r})})),this.emit("audioInitialized",{subscriber:this})}catch(t){throw new Error(`Audio system initialization failed: ${t.message}`)}}_initVideoSystem(){try{if("function"!=typeof MediaStreamTrackGenerator)throw new Error("MediaStreamTrackGenerator not supported in this browser");this.videoGenerator=new MediaStreamTrackGenerator({kind:"video"}),this.videoWriter=this.videoGenerator.writable,this.mediaStream=new MediaStream([this.videoGenerator]),this.emit("remoteStreamReady",{stream:this.mediaStream,streamId:this.streamId,subscriberId:this.subscriberId,roomId:this.roomId,isOwnStream:this.isOwnStream}),this.emit("videoInitialized",{subscriber:this})}catch(t){throw new Error(`Video system initialization failed: ${t.message}`)}}_cleanupVideoSystem(){try{if(this.videoWriter){try{this.videoWriter.getWriter().releaseLock()}catch(t){}this.videoWriter=null}if(this.videoGenerator){try{this.videoGenerator.stop&&this.videoGenerator.stop()}catch(t){}this.videoGenerator=null}}catch(t){}}_handleWorkerMessage(t){const{type:e,frame:i,message:s,channelData:r,sampleRate:a,numberOfChannels:o,timeStamp:n,subscriberId:h,audioEnabled:c}=t.data;switch(e){case"videoData":this._handleVideoData(i);break;case"status":this.emit("status",{subscriber:this,message:s,isError:!1});break;case"error":this.emit("status",{subscriber:this,message:s,isError:!0}),this.emit("error",{subscriber:this,error:new Error(s),action:"workerMessage"});break;case"audio-toggled":this.emit("audioToggled",{subscriber:this,enabled:c});break;case"skipping":this.emit("frameSkipped",{subscriber:this});break;case"resuming":this.emit("frameResumed",{subscriber:this})}}async _handleVideoData(t){if(this.videoWriter&&t)try{const e=this.videoWriter.getWriter();await e.write(t),e.releaseLock(),this.emit("videoFrameProcessed",{subscriber:this})}catch(t){this.emit("error",{subscriber:this,error:new Error(`Video write error: ${t.message}`),action:"videoWrite"})}}_updateConnectionStatus(t){if(this.connectionStatus===t)return;const e=this.connectionStatus;this.connectionStatus=t,this.emit("connectionStatusChanged",{subscriber:this,status:t,previousStatus:e})}};var n=class{constructor(t={}){this.audioContext=null,this.mixerNode=null,this.outputDestination=null,this.subscriberNodes=new Map,this.isInitialized=!1,this.outputAudioElement=null,this.masterVolume=t.masterVolume||.8,this.sampleRate=t.sampleRate||48e3,this.bufferSize=t.bufferSize||256,this.enableEchoCancellation=!1!==t.enableEchoCancellation,this.debug=t.debug||!1}async initialize(){if(this.isInitialized)this._debug("AudioMixer already initialized");else try{this.audioContext=new(window.AudioContext||window.webkitAudioContext)({sampleRate:this.sampleRate,latencyHint:"interactive"}),"suspended"===this.audioContext.state&&await this.audioContext.resume(),this.mixerNode=this.audioContext.createGain(),this.mixerNode.gain.value=this.masterVolume,this.outputDestination=this.audioContext.createMediaStreamDestination(),this.mixerNode.connect(this.outputDestination),this.outputAudioElement=document.createElement("audio"),this.outputAudioElement.autoplay=!0,this.outputAudioElement.style.display="none",this.outputAudioElement.setAttribute("playsinline",""),this.enableEchoCancellation&&this.outputAudioElement.setAttribute("webkitAudioContext","true"),document.body.appendChild(this.outputAudioElement),this.isInitialized=!0,this._debug("AudioMixer initialized successfully"),this._setupErrorHandlers()}catch(t){throw t}}async addSubscriber(t,e,i=!1,s){if(this.isInitialized||await this.initialize(),i)return this._debug(`Skipping own audio for subscriber ${t} to prevent echo`),null;if(this.subscriberNodes.has(t))return this._debug(`Subscriber ${t} already exists in mixer`),this.subscriberNodes.get(t);try{await this._loadAudioWorklet(e);const i=new AudioWorkletNode(this.audioContext,"jitter-resistant-processor",{numberOfInputs:0,numberOfOutputs:1,outputChannelCount:[2]});s&&i.port.postMessage({type:"connectWorker",port:s},[s]);const r=this.audioContext.createGain();return r.gain.value=1,i.connect(r),r.connect(this.mixerNode),this.subscriberNodes.set(t,{workletNode:i,gainNode:r,isActive:!0,addedAt:Date.now()}),this._updateOutputAudio(),this._setupWorkletMessageHandler(t,i),this._debug(`Added subscriber ${t} to audio mixer`),i}catch(t){throw t}}removeSubscriber(t){const e=this.subscriberNodes.get(t);if(!e)return this._debug(`Subscriber ${t} not found in mixer`),!1;try{const{workletNode:i,gainNode:s}=e;return i.disconnect(),s.disconnect(),this.subscriberNodes.delete(t),this._updateOutputAudio(),this._debug(`Removed subscriber ${t} from audio mixer`),!0}catch(t){return!1}}setSubscriberVolume(t,e){const i=this.subscriberNodes.get(t);if(!i)return this._debug(`Subscriber ${t} not found for volume adjustment`),!1;try{const s=Math.max(0,Math.min(1,e));return i.gainNode.gain.value=s,this._debug(`Set volume for subscriber ${t}: ${s}`),!0}catch(t){return!1}}setSubscriberMuted(t,e){return this.setSubscriberVolume(t,e?0:1)}setMasterVolume(t){if(!this.mixerNode)return!1;try{const e=Math.max(0,Math.min(1,t));return this.mixerNode.gain.value=e,this.masterVolume=e,this._debug(`Set master volume: ${e}`),!0}catch(t){return!1}}getOutputMediaStream(){return this.outputDestination?this.outputDestination.stream:(this._debug("Output destination not initialized"),null)}getStats(){return{isInitialized:this.isInitialized,subscriberCount:this.subscriberNodes.size,masterVolume:this.masterVolume,audioContextState:this.audioContext?.state||"not-initialized",sampleRate:this.audioContext?.sampleRate||0,subscribers:Array.from(this.subscriberNodes.entries()).map(([t,e])=>({id:t,volume:e.gainNode.gain.value,isActive:e.isActive,addedAt:e.addedAt}))}}getSubscriberIds(){return Array.from(this.subscriberNodes.keys())}hasSubscriber(t){return this.subscriberNodes.has(t)}async suspend(){this.audioContext&&"running"===this.audioContext.state&&(await this.audioContext.suspend(),this._debug("Audio context suspended"))}async resume(){this.audioContext&&"suspended"===this.audioContext.state&&(await this.audioContext.resume(),this._debug("Audio context resumed"))}async cleanup(){this._debug("Starting AudioMixer cleanup");try{this.outputAudioElement&&(this.outputAudioElement.srcObject=null,this.outputAudioElement.parentNode&&this.outputAudioElement.parentNode.removeChild(this.outputAudioElement),this.outputAudioElement=null);for(const[t,e]of this.subscriberNodes)try{const{workletNode:t,gainNode:i}=e;t.disconnect(),i.disconnect()}catch(t){}this.subscriberNodes.clear(),this.mixerNode&&(this.mixerNode.disconnect(),this.mixerNode=null),this.outputDestination&&(this.outputDestination=null),this.audioContext&&"closed"!==this.audioContext.state&&await this.audioContext.close(),this.audioContext=null,this.isInitialized=!1,this._debug("AudioMixer cleanup completed")}catch(t){}}async _loadAudioWorklet(t){try{await this.audioContext.audioWorklet.addModule(t),this._debug("Audio worklet loaded:",t)}catch(t){t.message.includes("already been loaded")||this._debug("Audio worklet load warning:",t.message)}}_updateOutputAudio(){if(this.outputAudioElement&&this.outputDestination)try{this.subscriberNodes.size>0?this.outputAudioElement.srcObject=this.outputDestination.stream:this.outputAudioElement.srcObject=null}catch(t){}}_setupWorkletMessageHandler(t,e){e.port.onmessage=e=>{const{type:i,bufferMs:s,isPlaying:r,newBufferSize:a,error:o}=e.data;switch(i){case"bufferStatus":this._debug(`Subscriber ${t} buffer: ${s}ms, playing: ${r}`);break;case"bufferSizeChanged":this._debug(`Subscriber ${t} buffer size changed: ${a}`);break;case"error":break;default:this._debug(`Subscriber ${t} worklet message:`,e.data)}},e.port.onerror=t=>{}}_setupErrorHandlers(){this.audioContext&&(this.audioContext.onstatechange=()=>{this._debug(`Audio context state changed: ${this.audioContext.state}`),this.audioContext.state},document.addEventListener("visibilitychange",async()=>{document.hidden||await this.resume()}))}_debug(...t){this.debug}_sleep(t){return new Promise(e=>setTimeout(e,t))}};class h extends i{constructor(t){super(),this.id=t.id,this.name=t.name,this.code=t.code,this.type=t.type||"main",this.parentRoomId=t.parentRoomId||null,this.ownerId=t.ownerId,this.isActive=!1,this.apiClient=t.apiClient,this.mediaConfig=t.mediaConfig,this.participants=new Map,this.localParticipant=null,this.subRooms=new Map,this.audioMixer=null,this.pinnedParticipant=null,this.membershipId=null,this.streamId=null,this.messages=[],this.typingUsers=new Map}async join(t){if(this.isActive)throw new Error("Already joined this room");try{this.emit("joining",{room:this});const e=await this.apiClient.joinRoom(this.code);this.id=e.room_id,this.membershipId=e.id,this.streamId=e.stream_id;const i=await this.apiClient.getRoomById(e.room_id);return this._updateFromApiData(i.room),await this._setupParticipants(i.participants,t),await this._setupMediaConnections(),this.isActive=!0,this.emit("joined",{room:this,participants:this.participants}),{room:this,localParticipant:this.localParticipant,participants:Array.from(this.participants.values())}}catch(t){throw this.emit("error",{room:this,error:t,action:"join"}),t}}async leave(){if(this.isActive)try{this.emit("leaving",{room:this}),await this._cleanupMediaConnections(),this._cleanupParticipants(),this.membershipId&&await this.apiClient.leaveRoom(this.id,this.membershipId),this.isActive=!1,this.emit("left",{room:this})}catch(t){throw this.emit("error",{room:this,error:t,action:"leave"}),t}}async createSubRoom(t){if("main"!==this.type)throw new Error("Only main rooms can create sub rooms");try{this.emit("creatingSubRoom",{room:this,config:t});const e=await this.apiClient.createSubRoom(this.id,t.name,t.type||"breakout"),i=new h({id:e.id,name:e.room_name,code:e.room_code,type:t.type||"breakout",parentRoomId:this.id,ownerId:e.user_id,apiClient:this.apiClient,mediaConfig:this.mediaConfig});return this.subRooms.set(i.id,i),this.emit("subRoomCreated",{room:this,subRoom:i}),i}catch(t){throw this.emit("error",{room:this,error:t,action:"createSubRoom"}),t}}async getSubRooms(){if("main"!==this.type)return[];try{const t=await this.apiClient.getSubRooms(this.id);for(const e of t)if(!this.subRooms.has(e.id)){const t=new h({id:e.id,name:e.room_name,code:e.room_code,type:e.room_type,parentRoomId:this.id,ownerId:e.user_id,apiClient:this.apiClient,mediaConfig:this.mediaConfig});this.subRooms.set(t.id,t)}return Array.from(this.subRooms.values())}catch(t){throw this.emit("error",{room:this,error:t,action:"getSubRooms"}),t}}async switchToSubRoom(t){try{this.emit("switchingToSubRoom",{room:this,subRoomCode:t});const e=await this.apiClient.switchToSubRoom(this.id,t);return await this._cleanupMediaConnections(),this.membershipId=e.id,this.streamId=e.stream_id,await this._setupMediaConnections(),this.emit("switchedToSubRoom",{room:this,subRoomCode:t,response:e}),e}catch(t){throw this.emit("error",{room:this,error:t,action:"switchToSubRoom"}),t}}async returnToMainRoom(){if(!this.parentRoomId)throw new Error("This is not a sub room");try{this.emit("returningToMainRoom",{room:this}),await this.leave(),this.emit("returnedToMainRoom",{room:this})}catch(t){throw this.emit("error",{room:this,error:t,action:"returnToMainRoom"}),t}}async sendMessage(t,e={}){if(!this.isActive)throw new Error("Cannot send message: room is not active");if(!this.localParticipant?.publisher)throw new Error("Cannot send message: publisher not available");if(!t||"string"!=typeof t||0===t.trim().length)throw new Error("Message text is required and must be a non-empty string");try{const i={id:this._generateMessageId(),text:t.trim(),senderId:this.localParticipant.userId,senderName:e.senderName||this.localParticipant.userId,roomId:this.id,timestamp:Date.now(),metadata:e.customData||{}},s={type:"message",...i};return await this.localParticipant.publisher.sendEvent(s),this.messages.push(i),this.emit("messageSent",{room:this,message:i}),i}catch(t){throw this.emit("error",{room:this,error:t,action:"sendMessage"}),t}}async deleteMessage(t){if(!this.isActive)throw new Error("Cannot delete message: room is not active");if(!this.localParticipant?.publisher)throw new Error("Cannot delete message: publisher not available");try{const e={type:"messageDelete",messageId:t,senderId:this.localParticipant.userId,roomId:this.id,timestamp:Date.now()};return await this.localParticipant.publisher.sendEvent(e),this.messages=this.messages.filter(e=>e.id!==t),this.emit("messageDeleted",{room:this,messageId:t}),!0}catch(t){throw this.emit("error",{room:this,error:t,action:"deleteMessage"}),t}}async updateMessage(t,e,i={}){if(!this.isActive)throw new Error("Cannot update message: room is not active");if(!this.localParticipant?.publisher)throw new Error("Cannot update message: publisher not available");if(!e||"string"!=typeof e||0===e.trim().length)throw new Error("New message text is required and must be a non-empty string");try{const s={type:"messageUpdate",messageId:t,text:e.trim(),senderId:this.localParticipant.userId,roomId:this.id,timestamp:Date.now(),metadata:i.customData||{}};await this.localParticipant.publisher.sendEvent(s);const r=this.messages.findIndex(e=>e.id===t);return-1!==r&&(this.messages[r].text=e.trim(),this.messages[r].updatedAt=Date.now(),this.messages[r].metadata={...this.messages[r].metadata,...s.metadata}),this.emit("messageUpdated",{room:this,messageId:t,text:e.trim()}),!0}catch(t){throw this.emit("error",{room:this,error:t,action:"updateMessage"}),t}}async sendTypingIndicator(t=!0){if(this.isActive&&this.localParticipant?.publisher)try{const e={type:t?"typingStart":"typingStop",userId:this.localParticipant.userId,roomId:this.id,timestamp:Date.now()};await this.localParticipant.publisher.sendEvent(e)}catch(t){}}getMessages(t=100){return this.messages.slice(-t)}getTypingUsers(){return Array.from(this.typingUsers.values())}clearMessages(){this.messages=[]}addParticipant(t,e){const i=t.user_id===e,s=new r({userId:t.user_id,streamId:t.stream_id,membershipId:t.id,role:t.role,roomId:this.id,isLocal:i});return this._setupParticipantEvents(s),this.participants.set(s.userId,s),i&&(this.localParticipant=s),this.emit("participantAdded",{room:this,participant:s}),s}removeParticipant(t){const e=this.participants.get(t);return e?(e.cleanup(),this.participants.delete(t),this.localParticipant?.userId===t&&(this.localParticipant=null),this.pinnedParticipant?.userId===t&&(this.pinnedParticipant=null),this.emit("participantRemoved",{room:this,participant:e}),e):null}getParticipant(t){return this.participants.get(t)}getParticipants(){return Array.from(this.participants.values())}pinParticipant(t){const e=this.participants.get(t);return!!e&&(this.pinnedParticipant&&this.pinnedParticipant!==e&&(this.pinnedParticipant.isPinned=!1),e.isPinned=!0,this.pinnedParticipant=e,this.emit("participantPinned",{room:this,participant:e}),!0)}unpinParticipant(){if(!this.pinnedParticipant)return!1;this.pinnedParticipant.isPinned=!1;const t=this.pinnedParticipant;return this.pinnedParticipant=null,this.localParticipant&&this.pinParticipant(this.localParticipant.userId),this.emit("participantUnpinned",{room:this,participant:t}),!0}getInfo(){return{id:this.id,name:this.name,code:this.code,type:this.type,parentRoomId:this.parentRoomId,ownerId:this.ownerId,isActive:this.isActive,participantCount:this.participants.size,subRoomCount:this.subRooms.size,pinnedParticipant:this.pinnedParticipant?.userId||null}}async _setupParticipants(t,e){for(const i of t)this.addParticipant(i,e)}async _setupMediaConnections(){this.audioMixer||(this.audioMixer=new n,await this.audioMixer.initialize()),this.localParticipant&&await this._setupLocalPublisher();for(const t of this.participants.values())t.isLocal||await this._setupRemoteSubscriber(t);this._setupStreamEventForwarding()}async _setupLocalPublisher(){if(!this.localParticipant||!this.streamId)return;const t=`${this.mediaConfig.webtpUrl}/${this.id}/${this.streamId}`,e=new a({publishUrl:t,streamType:"camera",streamId:this.streamId,width:1280,height:720,framerate:30,bitrate:15e5,onStatusUpdate:(t,e)=>{this.localParticipant.setConnectionStatus(e?"failed":"connected")},onServerEvent:async t=>{await this._handleServerEvent(t)}});e.on("localStreamReady",t=>{this.emit("localStreamReady",{...t,participant:this.localParticipant.getInfo(),roomId:this.id})}),await e.startPublishing(),this.localParticipant.setPublisher(e)}async _setupRemoteSubscriber(t){const e=new o({streamId:t.streamId,roomId:this.id,host:this.mediaConfig.host,streamOutputEnabled:!0,onStatus:(e,i)=>{t.setConnectionStatus(i?"failed":"connected")},audioWorkletUrl:"workers/audio-worklet1.js",mstgPolyfillUrl:"polyfills/MSTG_polyfill.js"});this.audioMixer&&e.setAudioMixer(this.audioMixer),e.on("remoteStreamReady",e=>{this.emit("remoteStreamReady",{...e,participant:t.getInfo(),roomId:this.id})}),await e.start(),t.setSubscriber(e)}async _handleServerEvent(t){if("join"===t.type){const e=t.participant;if(e.user_id===this.localParticipant?.userId)return;const i=this.addParticipant({user_id:e.user_id,stream_id:e.stream_id,id:e.membership_id,role:e.role},this.localParticipant?.userId);await this._setupRemoteSubscriber(i)}if("leave"===t.type){this.participants.get(t.participant.user_id)&&(this.removeParticipant(t.participant.user_id),!this.pinnedParticipant&&this.localParticipant&&this.pinParticipant(this.localParticipant.userId))}if("message"===t.type){const e={id:t.id,text:t.text,senderId:t.senderId,senderName:t.senderName,roomId:t.roomId,timestamp:t.timestamp,metadata:t.metadata||{}};this.messages.push(e);const i=this.getParticipant(t.senderId);this.emit("messageReceived",{room:this,message:e,sender:i?i.getInfo():null})}if("messageDelete"===t.type&&(this.messages=this.messages.filter(e=>e.id!==t.messageId),this.emit("messageDeleted",{room:this,messageId:t.messageId,senderId:t.senderId})),"messageUpdate"===t.type){const e=this.messages.findIndex(e=>e.id===t.messageId);-1!==e&&(this.messages[e].text=t.text,this.messages[e].updatedAt=t.timestamp,this.messages[e].metadata={...this.messages[e].metadata,...t.metadata}),this.emit("messageUpdated",{room:this,messageId:t.messageId,text:t.text,senderId:t.senderId})}if("typingStart"===t.type&&t.userId!==this.localParticipant?.userId&&(this.typingUsers.set(t.userId,{userId:t.userId,timestamp:t.timestamp}),this.emit("typingStarted",{room:this,userId:t.userId,user:this.getParticipant(t.userId)?.getInfo()}),setTimeout(()=>{this.typingUsers.delete(t.userId),this.emit("typingStopped",{room:this,userId:t.userId})},5e3)),"typingStop"===t.type&&t.userId!==this.localParticipant?.userId&&(this.typingUsers.delete(t.userId),this.emit("typingStopped",{room:this,userId:t.userId,user:this.getParticipant(t.userId)?.getInfo()})),"start_share_screen"===t.type){const e=this.participants.get(t.participant.user_id);e&&e.userId!==this.localParticipant?.userId&&(e.isScreenSharing=!0,this.emit("remoteScreenShareStarted",{room:this,participant:e}))}if("stop_share_screen"===t.type){const e=this.participants.get(t.participant.user_id);e&&e.userId!==this.localParticipant?.userId&&(e.isScreenSharing=!1,this.emit("remoteScreenShareStopped",{room:this,participant:e}))}if("mic_on"===t.type){const e=this.participants.get(t.participant.user_id);e&&(e.updateMicStatus(!0),this.emit("remoteAudioStatusChanged",{room:this,participant:e,enabled:!0}))}if("mic_off"===t.type){const e=this.participants.get(t.participant.user_id);e&&(e.updateMicStatus(!1),this.emit("remoteAudioStatusChanged",{room:this,participant:e,enabled:!1}))}if("camera_on"===t.type){const e=this.participants.get(t.participant.user_id);e&&(e.updateCameraStatus(!0),this.emit("remoteVideoStatusChanged",{room:this,participant:e,enabled:!0}))}if("camera_off"===t.type){const e=this.participants.get(t.participant.user_id);e&&(e.updateCameraStatus(!1),this.emit("remoteVideoStatusChanged",{room:this,participant:e,enabled:!1}))}if("pin_for_everyone"===t.type){const e=this.participants.get(t.participant.user_id);e&&(this.pinParticipant(e.userId),this.emit("participantPinnedForEveryone",{room:this,participant:e}))}if("unpin_for_everyone"===t.type&&this.pinnedParticipant){const t=this.pinnedParticipant;this.unpinParticipant(),this.emit("participantUnpinnedForEveryone",{room:this,participant:t})}if("raise_hand"===t.type){const e=this.participants.get(t.participant.user_id);e&&(e.updateHandRaiseStatus(!0),this.emit("remoteHandRaisingStatusChanged",{room:this,participant:e,raised:!0}))}if("lower_hand"===t.type){const e=this.participants.get(t.participant.user_id);e&&(e.updateHandRaiseStatus(!1),this.emit("remoteHandRaisingStatusChanged",{room:this,participant:e,raised:!1}))}}_setupParticipantEvents(t){t.on("pinToggled",({participant:t,pinned:e})=>{e?this.pinParticipant(t.userId):this.pinnedParticipant===t&&this.unpinParticipant()}),t.on("audioToggled",({participant:t,enabled:e})=>{this.emit("audioToggled",{room:this,participant:t,enabled:e})}),t.on("videoToggled",({participant:t,enabled:e})=>{this.emit("videoToggled",{room:this,participant:t,enabled:e})}),t.on("handRaiseToggled",({participant:t,enabled:e})=>{this.emit("handRaiseToggled",{room:this,participant:t,enabled:e})}),t.on("error",({participant:t,error:e,action:i})=>{this.emit("participantError",{room:this,participant:t,error:e,action:i})})}_updateFromApiData(t){this.name=t.room_name||this.name,this.ownerId=t.user_id||this.ownerId}async _cleanupMediaConnections(){this.audioMixer&&(await this.audioMixer.cleanup(),this.audioMixer=null);for(const t of this.participants.values())t.publisher&&(t.publisher.stop(),t.publisher=null),t.subscriber&&(t.subscriber.stop(),t.subscriber=null)}_cleanupParticipants(){for(const t of this.participants.values())t.cleanup();this.participants.clear(),this.localParticipant=null,this.pinnedParticipant=null,this.typingUsers.clear()}_generateMessageId(){return`msg_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}_setupStreamEventForwarding(){this.localParticipant&&this.localParticipant.publisher&&this.localParticipant.publisher.on("localStreamReady",t=>{this.emit("localStreamReady",{...t,participant:this.localParticipant.getInfo(),roomId:this.id})});for(const t of this.participants.values())t.subscriber&&!t.isLocal&&t.subscriber.on("remoteStreamReady",e=>{this.emit("remoteStreamReady",{...e,participant:t.getInfo(),roomId:this.id})})}_removeStreamEventForwarding(){this.localParticipant&&this.localParticipant.publisher&&this.localParticipant.publisher.removeAllListeners("localStreamReady");for(const t of this.participants.values())t.subscriber&&!t.isLocal&&(t.subscriber.removeAllListeners("remoteStreamReady"),t.subscriber.removeAllListeners("streamRemoved"))}async cleanup(){this.isActive&&await this.leave();for(const t of this.subRooms.values())await t.cleanup();this.subRooms.clear(),this.removeAllListeners()}}var c=h;class d extends c{constructor(t){super({...t,type:t.type||"breakout"}),this.parentRoom=t.parentRoom,this.maxParticipants=t.maxParticipants||10,this.autoReturn=t.autoReturn||!1,this.duration=t.duration||null,this.startTime=null,this.isTemporary=t.isTemporary||!0,this.allowSelfAssign=t.allowSelfAssign||!0,this._setupSubRoomEvents()}async joinFromMain(t){if(!this.parentRoom)throw new Error("No parent room reference");try{this.emit("joiningFromMain",{subRoom:this,userId:t}),await this.parentRoom._pauseMediaConnections();const e=await this.join(t);return this.duration&&!this.startTime&&(this.startTime=Date.now(),this._startDurationTimer()),this.emit("joinedFromMain",{subRoom:this,userId:t,joinResult:e}),e}catch(t){throw this.parentRoom&&await this.parentRoom._resumeMediaConnections(),this.emit("error",{subRoom:this,error:t,action:"joinFromMain"}),t}}async returnToMainRoom(){if(!this.parentRoom)throw new Error("No parent room reference");try{return this.emit("returningToMain",{subRoom:this}),await this.leave(),await this.parentRoom._resumeMediaConnections(),this.emit("returnedToMain",{subRoom:this}),0===this.participants.size&&this.autoReturn&&await this.cleanup(),this.parentRoom}catch(t){throw this.emit("error",{subRoom:this,error:t,action:"returnToMainRoom"}),t}}async switchToSubRoom(t){if(!this.parentRoom)throw new Error("No parent room reference");try{this.emit("switchingToSubRoom",{fromSubRoom:this,toSubRoom:t}),await this.leave();const e=await t.joinFromMain(this.localParticipant?.userId);return this.emit("switchedToSubRoom",{fromSubRoom:this,toSubRoom:t}),e}catch(t){throw this.emit("error",{subRoom:this,error:t,action:"switchToSubRoom"}),t}}async inviteParticipant(t){try{const e=await this.apiClient.inviteToSubRoom(this.id,t);return this.emit("participantInvited",{subRoom:this,userId:t,result:e}),e}catch(t){throw this.emit("error",{subRoom:this,error:t,action:"inviteParticipant"}),t}}async assignParticipant(t){try{const e=await this.apiClient.assignToSubRoom(this.id,t);return this.emit("participantAssigned",{subRoom:this,userId:t,result:e}),e}catch(t){throw this.emit("error",{subRoom:this,error:t,action:"assignParticipant"}),t}}async broadcastMessage(t,e="info"){try{const i=await this.apiClient.broadcastToSubRoom(this.id,t,e);return this.emit("messageBroadcast",{subRoom:this,message:t,type:e,result:i}),i}catch(t){throw this.emit("error",{subRoom:this,error:t,action:"broadcastMessage"}),t}}getRemainingTime(){if(!this.duration||!this.startTime)return null;const t=(Date.now()-this.startTime)/6e4,e=Math.max(0,this.duration-t);return Math.ceil(e)}extendDuration(t){this.duration?this.duration+=t:(this.duration=t,this.startTime=Date.now()),this.emit("durationExtended",{subRoom:this,additionalMinutes:t,newDuration:this.duration}),this.startTime&&this._startDurationTimer()}setMaxParticipants(t){this.maxParticipants=t,this.emit("maxParticipantsChanged",{subRoom:this,maxParticipants:t}),this.participants.size>t&&this.emit("participantLimitExceeded",{subRoom:this,current:this.participants.size,limit:t})}isFull(){return this.participants.size>=this.maxParticipants}isEmpty(){return 0===this.participants.size}hasExpired(){if(!this.duration||!this.startTime)return!1;return(Date.now()-this.startTime)/6e4>=this.duration}getStats(){return{...this.getInfo(),maxParticipants:this.maxParticipants,duration:this.duration,remainingTime:this.getRemainingTime(),startTime:this.startTime,isFull:this.isFull(),isEmpty:this.isEmpty(),hasExpired:this.hasExpired(),isTemporary:this.isTemporary,allowSelfAssign:this.allowSelfAssign,autoReturn:this.autoReturn}}_setupSubRoomEvents(){if(this.on("participantRemoved",({room:t,participant:e})=>{this.isEmpty()&&this.autoReturn&&this.parentRoom&&setTimeout(()=>{this.isEmpty()&&this.cleanup()},5e3)}),this.duration){const t=Math.max(1,this.duration-5);setTimeout(()=>{this.isActive&&!this.hasExpired()&&this.emit("expiryWarning",{subRoom:this,remainingMinutes:5})},60*t*1e3)}}_startDurationTimer(){if(this._durationTimer&&clearTimeout(this._durationTimer),!this.duration)return;const t=60*this.getRemainingTime()*1e3;t<=0?this._handleExpiry():this._durationTimer=setTimeout(()=>{this._handleExpiry()},t)}async _handleExpiry(){this.emit("expired",{subRoom:this}),await this.broadcastMessage("Sub room session has expired. Returning to main room.","warning");const t=Array.from(this.participants.values());for(const e of t)e.isLocal&&await this.returnToMainRoom();await this.cleanup()}async cleanup(){this._durationTimer&&(clearTimeout(this._durationTimer),this._durationTimer=null),this.parentRoom&&this.parentRoom.subRooms.delete(this.id),await super.cleanup(),this.emit("cleanedUp",{subRoom:this})}serialize(){return{...this.getStats(),participantIds:Array.from(this.participants.keys()),parentRoomId:this.parentRoom?.id||this.parentRoomId,createdAt:this.startTime||Date.now()}}static fromSerializedData(t,e,i,s){return new d({id:t.id,name:t.name,code:t.code,type:t.type,parentRoom:e,parentRoomId:t.parentRoomId,ownerId:t.ownerId,maxParticipants:t.maxParticipants,duration:t.duration,autoReturn:t.autoReturn,isTemporary:t.isTemporary,allowSelfAssign:t.allowSelfAssign,apiClient:i,mediaConfig:s})}}var u=d;var m=class extends i{constructor(t={}){super(),this.config={host:t.host||"daibo.ermis.network:9992",apiUrl:t.apiUrl||`https://${t.host||"daibo.ermis.network:9992"}/meeting`,webtpUrl:t.webtpUrl||"https://daibo.ermis.network:4458/meeting/wt",reconnectAttempts:t.reconnectAttempts||3,reconnectDelay:t.reconnectDelay||2e3,debug:t.debug||!1},this.apiClient=new s({host:this.config.host,apiUrl:this.config.apiUrl}),this.state={user:null,isAuthenticated:!1,currentRoom:null,rooms:new Map,connectionStatus:"disconnected"},this.mediaConfig={host:this.config.host,webtpUrl:this.config.webtpUrl,defaultVideoConfig:{width:1280,height:720,framerate:30,bitrate:15e5},defaultAudioConfig:{sampleRate:48e3,channels:2}},this._setupEventHandlers()}async authenticate(t){if(this.state.isAuthenticated&&this.state.user?.id===t)return this.state.user;try{if(this.emit("authenticating",{userId:t}),this._setConnectionStatus("connecting"),t.includes("@")){if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t))throw new Error("Invalid email format")}const e=await this.apiClient.getDummyToken(t);return this.apiClient.setAuth(e.access_token,t),this.state.user={id:t,token:e.access_token,authenticatedAt:Date.now()},this.state.isAuthenticated=!0,this._setConnectionStatus("connected"),this.emit("authenticated",{user:this.state.user}),this._debug("User authenticated successfully:",t),this.state.user}catch(e){throw this._setConnectionStatus("failed"),this.emit("authenticationFailed",{userId:t,error:e}),this._debug("Authentication failed:",e),e}}manualAuthenticate(t,e){if(!t||!e)throw new Error("userId and token are required");this.apiClient.setAuth(e,t),this.state.user={id:t,token:e,authenticatedAt:Date.now()},this.state.isAuthenticated=!0,this._setConnectionStatus("connected"),this.emit("authenticated",{user:this.state.user}),this._debug("Auth set directly:",this.state.user)}async logout(){if(this.state.isAuthenticated)try{this.emit("loggingOut",{user:this.state.user}),this.state.currentRoom&&await this.state.currentRoom.leave(),this.state.user=null,this.state.isAuthenticated=!1,this.state.currentRoom=null,this.state.rooms.clear(),this._setConnectionStatus("disconnected"),this.emit("loggedOut"),this._debug("User logged out successfully")}catch(t){throw this.emit("error",{error:t,action:"logout"}),t}}async createRoom(t){this._ensureAuthenticated();try{this.emit("creatingRoom",{config:t});const e=await this.apiClient.createRoom(t.name,t.type),i=new c({id:e.id,name:e.room_name,code:e.room_code,type:t.type||"main",ownerId:e.user_id,apiClient:this.apiClient,mediaConfig:this.mediaConfig});return this._setupRoomEvents(i),this.state.rooms.set(i.id,i),this.emit("roomCreated",{room:i}),this._debug("Room created:",i.getInfo()),!1!==t.autoJoin&&await this.joinRoom(i.code),i}catch(t){throw this.emit("error",{error:t,action:"createRoom"}),t}}async joinRoom(t){this._ensureAuthenticated();try{this.emit("joiningRoom",{roomCode:t}),this.state.currentRoom&&await this.state.currentRoom.leave();let e=Array.from(this.state.rooms.values()).find(e=>e.code===t);e||(e=new c({code:t,apiClient:this.apiClient,mediaConfig:this.mediaConfig}),this._setupRoomEvents(e));const i=await e.join(this.state.user.id);return this.state.currentRoom=e,this.state.rooms.set(e.id,e),this.emit("roomJoined",{room:e,joinResult:i}),this._debug("Joined room:",e.getInfo()),i}catch(t){throw this.emit("error",{error:t,action:"joinRoom"}),t}}async leaveRoom(){if(this.state.currentRoom)try{const t=this.state.currentRoom;this.emit("leavingRoom",{room:t}),await t.leave(),this.state.currentRoom=null,this.emit("roomLeft",{room:t}),this._debug("Left room:",t.getInfo())}catch(t){throw this.emit("error",{error:t,action:"leaveRoom"}),t}}async getRooms(t={}){this._ensureAuthenticated();try{const e=await this.apiClient.listRooms(t.page||1,t.perPage||20);return this.emit("roomsLoaded",{rooms:e.data||[]}),e.data||[]}catch(t){throw this.emit("error",{error:t,action:"getRooms"}),t}}getCurrentRoom(){return this.state.currentRoom}getRoom(t){return this.state.rooms.get(t)}async createSubRoom(t){if(!this.state.currentRoom)throw new Error("Must be in a main room to create sub rooms");if("main"!==this.state.currentRoom.type)throw new Error("Can only create sub rooms from main rooms");try{this.emit("creatingSubRoom",{config:t,parentRoom:this.state.currentRoom});const e=await this.state.currentRoom.createSubRoom(t);return this.emit("subRoomCreated",{subRoom:e,parentRoom:this.state.currentRoom}),this._debug("Sub room created:",e.getInfo()),e}catch(t){throw this.emit("error",{error:t,action:"createSubRoom"}),t}}async joinSubRoom(t){if(!this.state.currentRoom)throw new Error("Must be in a main room to join sub rooms");try{this.emit("joiningSubRoom",{subRoomCode:t,parentRoom:this.state.currentRoom});const e=(await this.state.currentRoom.getSubRooms()).find(e=>e.code===t);if(!e)throw new Error(`Sub room with code ${t} not found`);const i=await e.joinFromMain(this.state.user.id);return this.emit("subRoomJoined",{subRoom:e,parentRoom:this.state.currentRoom}),this._debug("Joined sub room:",e.getInfo()),i}catch(t){throw this.emit("error",{error:t,action:"joinSubRoom"}),t}}async returnToMainRoom(){if(!this.state.currentRoom||"breakout"!==this.state.currentRoom.type)throw new Error("Must be in a sub room to return to main room");try{this.emit("returningToMainRoom",{subRoom:this.state.currentRoom});const t=this.state.currentRoom,e=await t.returnToMainRoom();return this.state.currentRoom=e,this.emit("returnedToMainRoom",{mainRoom:e,previousSubRoom:t}),this._debug("Returned to main room from sub room"),e}catch(t){throw this.emit("error",{error:t,action:"returnToMainRoom"}),t}}async switchSubRoom(t){if(!this.state.currentRoom||"breakout"!==this.state.currentRoom.type)throw new Error("Must be in a sub room to switch to another sub room");try{this.emit("switchingSubRoom",{fromSubRoom:this.state.currentRoom,targetSubRoomCode:t});const e=this.state.currentRoom,i=e.parentRoom,s=(await i.getSubRooms()).find(e=>e.code===t);if(!s)throw new Error(`Sub room with code ${t} not found`);const r=await e.switchToSubRoom(s);return this.state.currentRoom=s,this.emit("subRoomSwitched",{fromSubRoom:e,toSubRoom:s}),this._debug("Switched sub rooms:",{from:e.getInfo(),to:s.getInfo()}),r}catch(t){throw this.emit("error",{error:t,action:"switchSubRoom"}),t}}getState(){return{user:this.state.user,isAuthenticated:this.state.isAuthenticated,currentRoom:this.state.currentRoom?.getInfo()||null,connectionStatus:this.state.connectionStatus,roomCount:this.state.rooms.size}}getConfig(){return{...this.config}}updateConfig(t){this.config={...this.config,...t},(t.host||t.apiUrl)&&(this.apiClient=new s({host:this.config.host,apiUrl:this.config.apiUrl}),this.state.isAuthenticated&&this.apiClient.setAuth(this.state.user.token,this.state.user.id)),this.emit("configUpdated",{config:this.config})}enableDebug(){this.config.debug=!0,this._debug("Debug mode enabled")}disableDebug(){this.config.debug=!1}async sendMessage(t,e={}){if(!this.state.currentRoom)throw new Error("No active room. Join a room first.");return await this.state.currentRoom.sendMessage(t,e)}async deleteMessage(t){if(!this.state.currentRoom)throw new Error("No active room. Join a room first.");return await this.state.currentRoom.deleteMessage(t)}async updateMessage(t,e,i={}){if(!this.state.currentRoom)throw new Error("No active room. Join a room first.");return await this.state.currentRoom.updateMessage(t,e,i)}async sendTypingIndicator(t=!0){if(this.state.currentRoom)return await this.state.currentRoom.sendTypingIndicator(t)}getMessages(t=100){return this.state.currentRoom?this.state.currentRoom.getMessages(t):[]}getTypingUsers(){return this.state.currentRoom?this.state.currentRoom.getTypingUsers():[]}clearMessages(){this.state.currentRoom&&this.state.currentRoom.clearMessages()}async cleanup(){try{this.state.currentRoom&&await this.state.currentRoom.leave();for(const t of this.state.rooms.values())await t.cleanup();this.state.rooms.clear(),this.state.currentRoom=null,this.removeAllListeners(),this._debug("Client cleanup completed")}catch(t){}}_setupRoomEvents(t){["roomJoined","roomLeft","participantAdded","participantRemoved","participantPinned","participantUnpinned","participantPinnedForEveryone","participantUnpinnedForEveryone","subRoomCreated","localStreamReady","remoteStreamReady","streamRemoved","audioToggled","videoToggled","handRaiseToggled","remoteAudioStatusChanged","remoteVideoStatusChanged","remoteHandRaisingStatusChanged","remoteScreenShareStarted","remoteScreenShareStopped","messageSent","messageReceived","messageDeleted","messageUpdated","typingStarted","typingStopped","error"].forEach(e=>{t.on(e,t=>{this.emit(e,t)})})}_setupEventHandlers(){this.on("authenticated",()=>{}),this.on("connectionStatusChanged",({status:t})=>{"failed"===t&&this.config.reconnectAttempts>0&&this._attemptReconnect()})}async _attemptReconnect(){let t=0;for(;t<this.config.reconnectAttempts;)try{if(t++,this._debug(`Reconnection attempt ${t}/${this.config.reconnectAttempts}`),await new Promise(t=>setTimeout(t,this.config.reconnectDelay)),this.state.user)return await this.authenticate(this.state.user.id),void this._debug("Reconnection successful")}catch(e){this._debug(`Reconnection attempt ${t} failed:`,e.message)}this.emit("reconnectionFailed"),this._debug("All reconnection attempts failed")}_setConnectionStatus(t){this.state.connectionStatus!==t&&(this.state.connectionStatus=t,this.emit("connectionStatusChanged",{status:t}),this._debug("Connection status changed:",t))}_ensureAuthenticated(){if(!this.state.isAuthenticated)throw new Error("User must be authenticated first")}_debug(...t){this.config.debug}};const l="1.0.0";let p;const g="undefined"!=typeof TextDecoder?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};"undefined"!=typeof TextDecoder&&g.decode();let b=null;function w(){return null!==b&&0!==b.byteLength||(b=new Uint8Array(p.memory.buffer)),b}let f=0;const S="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(t=>p.__wbg_wasmencoder_free(t>>>0,1));function y(){const t={wbg:{}};return t.wbg.__wbg_buffer_609cc3eee51ed158=function(t){return t.buffer},t.wbg.__wbg_length_a446193dc22c12f8=function(t){return t.length},t.wbg.__wbg_new_78feb108b6472713=function(){return new Array},t.wbg.__wbg_newwithbyteoffsetandlength_d97e637ebe145a9a=function(t,e,i){return new Uint8Array(t,e>>>0,i>>>0)},t.wbg.__wbg_newwithlength_a381634e90c276d4=function(t){return new Uint8Array(t>>>0)},t.wbg.__wbg_push_737cfc8c1432c2c6=function(t,e){return t.push(e)},t.wbg.__wbg_set_65595bdd868b3009=function(t,e,i){t.set(e,i>>>0)},t.wbg.__wbindgen_init_externref_table=function(){const t=p.__wbindgen_export_0,e=t.grow(4);t.set(0,void 0),t.set(e+0,void 0),t.set(e+1,null),t.set(e+2,!0),t.set(e+3,!1)},t.wbg.__wbindgen_memory=function(){return p.memory},t.wbg.__wbindgen_throw=function(t,e){throw new Error((i=t,s=e,i>>>=0,g.decode(w().subarray(i,i+s))));var i,s},t}async function _(t){if(void 0!==p)return p;void 0!==t&&Object.getPrototypeOf(t)===Object.prototype&&({module_or_path:t}=t),void 0===t&&(t=new URL("raptorq_wasm_bg.wasm","undefined"==typeof document&&"undefined"==typeof location?require("url").pathToFileURL(__filename).href:"undefined"==typeof document?location.href:e&&"SCRIPT"===e.tagName.toUpperCase()&&e.src||new URL("ermis-classroom.min.js",document.baseURI).href));const i=y();("string"==typeof t||"function"==typeof Request&&t instanceof Request||"function"==typeof URL&&t instanceof URL)&&(t=fetch(t));const{instance:s,module:r}=await async function(t,e){if("function"==typeof Response&&t instanceof Response){if("function"==typeof WebAssembly.instantiateStreaming)try{return await WebAssembly.instantiateStreaming(t,e)}catch(e){if("application/wasm"==t.headers.get("Content-Type"))throw e}const i=await t.arrayBuffer();return await WebAssembly.instantiate(i,e)}{const i=await WebAssembly.instantiate(t,e);return i instanceof WebAssembly.Instance?{instance:i,module:t}:i}}(await t,i);return function(t,e){return p=t.exports,_.__wbindgen_wasm_module=e,b=null,p.__wbindgen_start(),p}(s,r)}var R=Object.freeze({__proto__:null,WasmEncoder:class{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,S.unregister(this),t}free(){const t=this.__destroy_into_raw();p.__wbg_wasmencoder_free(t,0)}constructor(t,e){const i=function(t,e){const i=e(1*t.length,1)>>>0;return w().set(t,i/1),f=t.length,i}(t,p.__wbindgen_malloc),s=f,r=p.wasmencoder_new(i,s,e);return this.__wbg_ptr=r>>>0,S.register(this,this.__wbg_ptr,this),this}encode(t){return p.wasmencoder_encode(this.__wbg_ptr,t)}getMTU(){return p.wasmencoder_getMTU(this.__wbg_ptr)}getConfigBuffer(){return p.wasmencoder_getConfigBuffer(this.__wbg_ptr)}},default:_});t.ApiClient=s,t.ErmisClient=m,t.EventEmitter=i,t.Participant=r,t.Room=c,t.SubRoom=u,t.VERSION=l,t.default=class{static create(t={}){return new m(t)}static async connect(t,e,i={}){const s={host:t.replace(/^https?:\/\//,""),...i},r=new m(s);return await r.authenticate(e),r}static get version(){return l}static get events(){return{CLIENT_AUTHENTICATED:"authenticated",CLIENT_AUTHENTICATION_FAILED:"authenticationFailed",CLIENT_LOGGED_OUT:"loggedOut",CLIENT_CONNECTION_STATUS_CHANGED:"connectionStatusChanged",ROOM_CREATED:"roomCreated",ROOM_JOINED:"roomJoined",ROOM_LEFT:"roomLeft",PARTICIPANT_ADDED:"participantAdded",PARTICIPANT_REMOVED:"participantRemoved",PARTICIPANT_PINNED:"participantPinned",PARTICIPANT_UNPINNED:"participantUnpinned",AUDIO_TOGGLED:"audioToggled",VIDEO_TOGGLED:"videoToggled",HAND_RAISE_TOGGLED:"handRaiseToggled",REMOTE_AUDIO_STATUS_CHANGED:"remoteAudioStatusChanged",REMOTE_VIDEO_STATUS_CHANGED:"remoteVideoStatusChanged",REMOTE_HAND_RAISING_STATUS_CHANGED:"remoteHandRaisingStatusChanged",SCREEN_SHARE_STARTED:"screenShareStarted",SCREEN_SHARE_STOPPED:"screenShareStopped",REMOTE_SCREEN_SHARE_STARTED:"remoteScreenShareStarted",REMOTE_SCREEN_SHARE_STOPPED:"remoteScreenShareStopped",PARTICIPANT_PINNED_FOR_EVERYONE:"participantPinnedForEveryone",PARTICIPANT_UNPINNED_FOR_EVERYONE:"participantUnpinnedForEveryone",SUB_ROOM_CREATED:"subRoomCreated",SUB_ROOM_JOINED:"subRoomJoined",SUB_ROOM_LEFT:"subRoomLeft",SUB_ROOM_SWITCHED:"subRoomSwitched",LOCAL_STREAM_READY:"localStreamReady",REMOTE_STREAM_READY:"remoteStreamReady",STREAM_REMOVED:"streamRemoved",MESSAGE_SENT:"messageSent",MESSAGE_RECEIVED:"messageReceived",MESSAGE_DELETED:"messageDeleted",MESSAGE_UPDATED:"messageUpdated",TYPING_STARTED:"typingStarted",TYPING_STOPPED:"typingStopped",CHAT_HISTORY_LOADED:"chatHistoryLoaded",ERROR:"error"}}static get MediaDevices(){return{async getDevices(){if(!navigator.mediaDevices?.enumerateDevices)throw new Error("Media devices not supported");const t=await navigator.mediaDevices.enumerateDevices();return{cameras:t.filter(t=>"videoinput"===t.kind),microphones:t.filter(t=>"audioinput"===t.kind),speakers:t.filter(t=>"audiooutput"===t.kind)}},async getUserMedia(t={video:!0,audio:!0}){if(!navigator.mediaDevices?.getUserMedia)throw new Error("getUserMedia not supported");return await navigator.mediaDevices.getUserMedia(t)},async checkPermissions(){const t={};if(navigator.permissions)try{t.camera=await navigator.permissions.query({name:"camera"}),t.microphone=await navigator.permissions.query({name:"microphone"})}catch(t){}return t}}}static get RoomTypes(){return{MAIN:"main",BREAKOUT:"breakout",PRESENTATION:"presentation",DISCUSSION:"discussion"}}static get ConnectionStatus(){return{DISCONNECTED:"disconnected",CONNECTING:"connecting",CONNECTED:"connected",FAILED:"failed"}}static get ParticipantRoles(){return{OWNER:"owner",MODERATOR:"moderator",PARTICIPANT:"participant",OBSERVER:"observer"}}},Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ermis-classroom.min.js.map
